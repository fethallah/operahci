//#############################################################################################
//# Acapella Script and proc edures Collection: A collection of Acapella based scripts
//# and libraries.
//#
//# Please acknowledge the author(s)/contributor(s) for making use of these scripts and library.
//# Authors:
//#   * Ghislain M.C. Bonamy
//#   * Genomics Institute of the Novartis Research Fundation (GNF), San Diego, CA 92122
//#   * www.gnf.org
//#
//# You can obtain the lattest version of this software at: http://code.google.com/p/operahci/
//#
//# This program is free software; you can redistribute it and/or modify
//# it under the terms of the GNU General Public License as published by
//# the Free Software Foundation; either version 2 of the License, or
//# (at your option) any later version.
//#
//# This program is distributed in the hope that it will be useful,
//# but WITHOUT ANY WARRANTY; without even the implied warranty of
//# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//# GNU General Public License for more details.
//#
//# You should have received a copy of the GNU General Public License
//# along with this program; if not, write to the Free Software
//# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//# or go to: http://www.apache.org/licenses/
//#############################################################################################

//*********************************************************************************************
//*
//* This library defines a set of misceleanous tools to interact with system
//*
//*********************************************************************************************

proc RenameFile(
	String path in "path containing the files",
	String old in "old filename",
	String new in "new filename",

	boolean errorThrowing=false in "If this is true an error will be thrown, otherwise a simple warning will be given."

) Filesystem "Allows to rename a file to another name both file must be in the same path"
{
	if(__platform__=="windows")
		Set(filename=path&"/"&new)
		if(fileinfo(filename).fileinfo.exists)
			deleteFile(filename)
		end()
		sprintf("text","ren \"%s\\%s\" \"%s\"", path, old, new)
		RegexReplace(text,"/","\\")
		RegexReplace(text,"(.+?)\\\\\\\\","$1\\")
		RegexReplace(text,"\"\\\\","\"\\\\\\\\")
		Run(text, stderr="<errorMsg")
	else()
		sprintf("text","mv -f -T '%s/%s' '%s/%s'",path, old, path, new)
		RegexReplace(text,"\\\\","/")
		RegexReplace(text,"//","/")
		Run(text, stderr="<errorMsg")
	end()
	if(errorlevel!=0)
		sprintf("errorMsg","Rename command: %s; ErrorMessage %s", text,errorMsg)
		if(errorThrowing)
			error(errorMsg)
		else()
			warning(errorMsg)
		end()
	end()
}

proc deleteFile(
	String path in "path of the file to delete",

	boolean errorThrowing=false in "If this is true an error will be thrown, otherwise a simple warning will be given."

) Filesystem "Allows to rename a file to another name both file must be in the same path"
{
	if(__platform__=="windows")
		sprintf("text","del /f /q \"%s\"",path)
		RegexReplace(text,"/","\\")
		RegexReplace(text,"\\\\","\\")
		Run(text, stderr="<errorMsg")
	else()
		sprintf("text","rm -f '%s'",path)
		RegexReplace(text,"\"\\\\","\"\\\\\\\\")
		RegexReplace(text,"//","/")
		Run(text, stderr="<errorMsg")
	end()
		if(errorlevel!=0)
		sprintf("errorMsg","Delete command: %s; ErrorMessage %s", text,errorMsg)
		if(errorThrowing)
			error(errorMsg)
		else()
			warning(errorMsg)
		end()
	end()
}