//*************************************************************************
//  File Name:			nuclei_detection_library.proc
//
//  Product Name:		Opera Nuclei Detection Library
//
//	Product Version:	$Id: nuclei_detection_library.proc,v 2.23 2007/02/06 19:33:53 olavi Exp $
//						version:::2.4
//
//  Authors:			Olavi Ollikainen, Martin Vahi and Urmas Repinski
//
//  Copyright:			(c) 2007 PerkinElmer Cellular Technologies 
//
//  Purpose: It's a nuclei detection procedures library.
//		Besides the nuclei detection pocedures, this file
//		contains the wrappers to the real detection procedures.
//
//		Please take a look at the examples and the manual for
//		more details. Thank You.
//
//  Most important procedures in this file:
//      __________________________________________________________
//      ________Wrapper_____________nuclei detection procedure____
//
//	nuclei_detection_A		nuclei_detection_A_inner
//	nuclei_detection_B		nuclei_detection_B_inner
//	nuclei_detection_C		nuclei_detection_C_inner
//	nuclei_detection_D		nuclei_detection_D_inner
//	nuclei_detection_E		nuclei_detection_E_inner
//	nuclei_detection_F		nuclei_detection_F_inner
//	nuclei_detection_G		nuclei_detection_G_inner
//	nuclei_detection_H		nuclei_detection_H_inner
//      ___________________________________________________________
//
//  _______________________________________________________________	
//  Unified "out of range" error codes and valid ranges in 
//  the Nuclei Detection Library:
//  ---error code-----range---------input parameter----------------
//       1            (0..oo)       ThresholdAdjustment
//       2            [0..oo)       MinimumNuclearArea
//       3            [0..oo)       IndividualThresholdAdjustment
//       4            [0..oo)       MinimumNucleiDistance
//       5            [1..oo)       NuclearSplittingAdjustment
//       6            [0..oo)       SmoothingDiskRadius
//  _______________________________________________________________
//
//  IMacro Build date:      Jun 21 2004, .NET
//
//  Licences:   
// 
//  Changes:
// In nuclei_detection_b, nuclei_detection_h and nuclei_detection_a is fixed  the problem where 
// program stopped as in intermediate result image more than 32000 objects were detected (not real objects) 
//
//  4.1.2005 - AK
// Added procedure nuclei_detection_inputs() for generating input modules at user determined position in the calling script.
//
//  21.1.2005 - OO
//  Bug fixed in object_contrast_v2(), which in some special cases caused crash
//  CVS version field is added in line 6
//
//	27.4.2005 - AK
//	Converted to new naming scheme: Objects
//
//	26.5.2005 - AK
//	Bug fixed in nuclei_detection_B_inner(): missing explicit definition of MinArea=1 in IndividualThreshold() module
//
//	28.07.2005 - 00
//	Above mentioned bug fix (from 26.5.2005) is changed to MinArea=MinimumNuclearArea (instead of MinArea=1)
//
//	28.07.2005 - 00
// 	Bug fix for bug report 0003498 (intensity attribute is not always present in the output list nuclei). 
//	To end of all envelope procedures (A-H) are added two lines:
//	CalcArea()
//	CalcIntensity(image=reference)
consistencychecks("off")

//*****************************START***************************************
// a. controlbreakinglines_v12(), line xxx; - removes erroneous breaking lines between the stuck nuclei and re-joines the corresponding nuclei 
// b. object_contrast_general(), line xxx;   - adds to object list a contrast attribute (in the next steps the artifacts can be removed by the contrast attribute)
//*****************************END*****************************************

// ------------------------------------------------------------------------
// Procedure: ErrorReceiverForNucleiDetectionLibrary_v1
//
//  This procedure analyses the contents of the ErrorInfo
//  and stops the execution of the script, if an error has occurred.
//  It uses the following table:
//  _______________________________________________________________	
//  Unified "out of range" error codes and valid ranges in 
//  the Nuclei Detection Library:
//  ---error code-----range---------input parameter----------------
//       1            (0..oo)       ThresholdAdjustment
//       2            [0..oo)       MinimumNuclearArea
//       3            [0..oo)       IndividualThresholdAdjustment
//       4            [0..oo)       MinimumNucleiDistance
//       5            [1..oo)       NuclearSplittingAdjustment
//       6            [0..oo)       SmoothingDiskRadius
// ------------------------------------------------------------------------
proc ErrorReceiverForNucleiDetectionLibrary_v1(
container ErrorInfo in "A container with a possible Error Message. If no errors occurred, the ErrorCode==0."
)[hidden]
{
	if(ErrorInfo.ErrorCode!=0)
		if(ErrorInfo.ErrorCode==1)
			error("A valid value for the Player input parameter called Threshold Adjustment is always greater than zero")
		end()
		if(ErrorInfo.ErrorCode==2)
			error("A valid value for the Player input parameter called Minimum Nuclear Area is always greater than or equal to zero")
		end()
		if(ErrorInfo.ErrorCode==3)
			error("A valid value for the Player input parameter called Individual Threshold Adjustment is always greater than or equal to zero")
		end()
		if(ErrorInfo.ErrorCode==4)
			error("A valid value for the Player input parameter called Minimum Nuclei Distance is always greater than or equal to zero")
		end()
		if(ErrorInfo.ErrorCode==5)
			error("A valid value for the Player input parameter called Nuclear Splitting Adjustment is always greater than or equal to one")
		end()
		if(ErrorInfo.ErrorCode==6)
			error("A valid value for the input parameter called SmoothingDiskRadius is always greater than or equal to zero. It is an input parameter for the procedure nuclei_detection_C_inner()")
		end()
		if(ErrorInfo.ErrorCode==7)
			error("Player input parameter Nuclear Splitting Adjustment is too large. It must have value smaller than ImageWidth/2 and ImageHeight/2, where ImageWidth and ImageHeight are width and height of the input image Reference. Please, correct the input and run the script again.")
		end()
	end()
}// ErrorReceiverForNucleiDetectionLibrary_v1

-----BEGIN ENCRYPTED SCRIPT-----
44EAC7A1A6FA55ABE0963DA3B250B47940F31AC780469A9A14C671993CE9334DF70325F2EE1
2A736AFDF1437F8C3FCCEC7BFBECF1680A3F21EE64A91A3E4952DA7B5DC5B07D2B2E349CD63
9B79B2D62B33016DEABCC9B1582EE09BA948E0A3DB295224ACC08D32B59480F12DA8E17C11A
F5324AA1247BA7EBCBC375DB7221DAC:47B4CD2F2900E26DACBD1E4952DF6F54F224B4601CF
018408BBCC7DCB9B145BFC0CDB09F894F019E3057D53253528F1114C10E31FEDF2D550CFACE
77E71B3B0E060395DF0642D8D20CAF9DB2EA843007456979AC81824B913E3121ED274423BE2
0CDC905EB1DB211942FD4961C9CE5F1D654C56C685FAF3B9342894D9A68E06F/8514ABE9566
1F3A13089B6EA368548CA5D5B88CB6C012C2D8E5B0DDA4141B99A05835A76EB9264A03845FF
F09966D07AE21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E
21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2
F3F31A34498A34CCF2D524FCEE7DC1865FEB0AA03AD2BE470F8F38407C3D6EA4357DB18BFC2
9BA1DF3F3C7FD9BD32ABE9F89417C56B9D4EB21150707B4474D2AC24C22A0ED337E8EB77211
67ECA4DF43BA93007A50641C40C5ED7D91B27A6B57D26F9DC93E8082228A1AD8A887F8C66F5
7A91D4316400F48B215FACE3946DEB870B69FF9DD920154A355AD52A39D5C48FB4A3593EA7C
6F06FE9DB3CBB67E1991522666F1823D7F297A5839E3F0ABAC93A4BA7424578AA13C4D43AB5
0C8AFA1717D86F784C282F84743C17C23B40EE52CFB3AA7CB36A25B4BF8C12334852389661C
2D3FB521B16272B0A70DFB60E797BA8E5BC106955D76531076AD4B1BC1F77CB793A7CB36A25
B4BF8C1C38FFC3047790D95A79DB0A1C5787FF644D03638961F77980B01FF70E12A7913AC5F
32A8B34D805C7148B5571724416B0F2C3C46E329C162A2463CD79EBB1E11A579E8D261FD71C
8A6FEFE66D40C52232B1678792E1D0447D4E81D69EC9680D2B3BA8E93F0840DAD44D0363896
1F77985FE5C933D792BA7C1D992E48514F2A20BC5282C4A89E5D7870CE5B38F5862EA66E002
9009388FAAAE2E059448DC813E7A7CB36A25B4BF8C1AEA32CEA6D89BC1895543914A347C7AE
5C7897BD7E072A670DA780F19CD632A702F20BCAB593FB50096D24DDE961F9E98C17940811A
33B8AE14214FB339A107F64DA6095FA3137214D1781DF2C7B17F68CDBB0B205E49325E1220F
E61918E9B3ADB9EAD18E4DEF979DD1724421A51B1F8508788DE53353BCC10D28C078FF595B5
EE116970454D8A5EC89C4FC1C7D68C7C602E71BA4F2990456B72B10728700E0BE54DB5B425A
4CDACFAFC443C834B5A5B67E93140BD600C4241671504C4076564264F46F07B4F9E7AC328EF
03D3BD4F587657F7973024E3533E51136EFCCDD4473E4FD464E82A271C6AD18CC5E92DD9740
4AAB0DCA6349061BB17ACCE07E09534426113FE530015A59A4089C826BF11D60E849EDDAC00
A1B252258AC8F568BDC51318260151D10E4A5E17BC2A579DEEF2E6E2F5C7A54D60521CFEEF4
48212BBF34FBECA175F7E5C92E6544ABF01BD142BD80E611B643133E1FD47F7A2B8C94B7E66
8EF4A736EBDA4C3AB5BB0CA4CB7E2501B5B293DB356680155B9153FD259A28FC2BC2E7F129B
90775A1ED7A8487BA76A36313783B7AC284891A0EE7822E7705904FA4F66C7B6F7E693CC347
16DFFA88922CED70417E0AC44A6EB3E3F1430570BF0454055C66427F151A5F79482185F1127
F2E5C55033431FD47F7A2B8C94B75D90C565DC5AB9886A9D277E0DB22B1CD30F6AF354967D4
D9D815E1C88A7AF435A2EAC89FF06EA396BCBDD884D88A864C15FBE8A476E53B49E1ED8C737
08870E9DD816291A260C497B27511131989CE1ABB2E6934D1E48FD0AC8D6D5F5C0D362D785A
377BF744CA0C2C0B8CD6FA64202A80861BB9F7881E54566C757AD516339D8710A0BF15F0717
B1B29F1DC4941C309D009A08490CE8465FBCF59F6DAB5C0FC6AD18CC5E92DD9759AFF58F86E
5B0F50ECCC7D93F915346D1B595600CD0B21C3949A00F7917DA4FA9C3169FF53D5662526A38
49E6DD772B412FE070D48C369C9D72B059457E0FDE07F0A455ABF31EC0B7268B77D23F65B90
149B48C50D772C46C90855CA147D85C96162DC64FB476F60E65D4287D90B75C38243188980A
DC23D48D9605B1C17E54D9D8319C8BBB10D3D4A3383E47A8A522AF682F61B5C5A27DC3C308F
B697502EFE21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E2
1A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F390C18D9DC7647
6C6DABF51ABF15A6EDB9573DEDA95422E00D9D8319C8BBB10D3D4A3383E47A8A52242C10945
FADD7AEAC09DD9A07D7B49028A668A41089FCE89D40E047884CC116555A941C8AE60E5BC70D
5C54782574AFEE76AD8B3AFC1F72D58C05315CEEE0DB20AA03AD2BE470F8F38407C3D6EA435
7DB91C8387FA922F6FE3D6150EDA007C6F785176C6300D76857424578AA13C4D43AB50C8AFA
1717D86F784C282F84743C17C23B40EE52CFB3AA7CB36A25B4BF8C15A679526ED8D6F0F361E
86A9DD523BF3F18A7E77637E6E18C6AD18CC5E92DD97946CD2088C6AAD73D62D7E46124BD94
A3AE190BF9E8B2DD8D9C5CAF9E07800FD596F95204C593A208542B1D58BBC7FC934A74073D4
C5B9BDB1B04830A4DDD5FE209B9578D10E4C15FAAC19FDF8A12DCE557B6ECEB69D689B6E947
ADCF42BC352361E86A9DD523BF3F18A7E77637E6E1891878E2D2555DF04A157AFCC590C7AB3
9D815E1C88A7AF435A2EAC89FF06EA396C9A28F08E9955ED515DB1AFEEF092A7FE7E46499BD
341A35DD886CA3D278500463A130BE440591D05911763313876B89AFF0FB5DF9F36365853B6
330ED928347A6DB330805955C7BB2D538A2E21B4112289223D7477313768F1A3570D36C2355
71CEB8377142D06647F25EEDCB0EF80577CA5AEB2378B5D73E4FD464E82A271C4977852AFA8
3621CA688BA0E2F9F441E9236153056F1D4EE80A5F3769DC81DFA579E8D261FD71C85D287A6
D195DBE1CEAC21C82B4E757D2ADB9EAD18E4DEF97709EF9E073A83AAA4740F8405DC9497CE1
70FD5846F68A98E3335BA877D813D47E8D535B3AA498C2FC02FE7253913D4C134669FBE2269
ADC33E51136EFCCDD449960926767A1CCA411947CCEBE986C7E1E1DA80CA4E069B39E51F4C1
1E3FB8807A5865596646BAE46D5555259B095EB6AA3CE329F5FE5DE8E5DD9BD4EA7B0B329FB
4AD6AC6FF5D6446224A8652BA84CCB6AE97215E464B8DF0B82DE2F2816CD40BDEC8B56E25C8
146B87F93FE20F9BBF9373BBB4000D57747E0206596716B58FF3738E0A902F2E91CEC193214
008EBF74A8BF649461F6FEE0F29516ABE38D618D33FA9116A3C39ECCFFE187B5103AFA18DBF
582E50822573DC637230F837D62EA1FDAE5F081FD1AC3B86FE990749DB9BBA5874349EBD50E
9E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7
C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3461A8
5E38FE86AA0CD29263B476F612D9E99998D90BF47398961D8309CC5DFE457D63FF16A1490F5
3FB521B16272B0A731245A42C24C8B49DEACFDF40F8B495739A43C4E69D71348A579E8D261F
D71C860E097CD6CC7EFECD3EE556F6416C0AB5D474569A2E0629801D2896F3D06F9BA9EA197
7528A0A63E96162DC64FB476F66164BA72444D64529590D3E3954429E1AB50C8AFA1717D865
A359E350808490A9E037029CD73DCFF504D7A409CEF3A77F7F607F39D519D5BEF9645CD9343
EE43993704FA8E6E6BA56B907446B423BB487424578AA13C4D43BCE249C21857B6A0A46A332
D1B30ABB28961D8309CC5DFE41690DC8297323D139894091D2DC7E540D62D7E46124BD94A3A
E190BF9E8B2DD8B4F589C47C1380A26712151E48B1D1D66F86D61225B6D44A1F311BE28AE9E
FC4F61253964696CE308BBC80A03B6AED1F1B614D71C8442A6D5C35F0A70848D323A7CB36A2
5B4BF8C1573300A62A92F0B4A4C4F6D447E2F973397F380ED5BD92B6DF3E4635948FC6BF476
2A5AF2057AEF279EFDE0720C48A82EF85E74389F7076AD82F1D8927625E13F62EDA1B4F7C26
FBEB02BE9709F94BC278F6D55588B78BF38A8FA08375BE5F60E0CD44EBDB0C0F9C961DF030E
A6D0963F7F607F39D519D5B375D2B95D35F58E4993704FA8E6E6BA50DCA53316D8C9B35AD3A
8BB2EC887CC9F6D604C08FE7D8915E0D29CB8BF2ECE84E9B904AF789C486BAD3722C8D42E65
E3FB864DF62CC2A50D6A8E1FE1659D840A2D4A204C74A99C2CB883156FE328E6479EFDE0720
C48A82EF85E74389F7076A997B67A34BC35EF50BB94361989D2562FE94B847718D7F42357A0
7C2AE99D6E27E1D22A55B74C31F7CA7CA8C92004019EF623C9BA19215732A763481D3576723
96721E07FA9F27DA72FE600F840FD4ED48447468F6AED356E25D703B17A91E4305A5B22EE59
8233545C02FE4DC278537FAEF35D2637AF5C7F9280BEEC7FB9788B0D565002ED303FAF6FC63
A3773EE397A331B43F1FD791F93BA3EC8C12117132503DE1FB7564ECFF112D2B5EDCD68895E
9CD80CF44040E2F2336BB8FEE2730CC1CF1EF4ADDB9B0801449EF3B935D359E9DC93E808222
8A1A9E037029CD73DCFF89C86E8636ECA8D026CE7A97A0E1F8E82B0DD001360F59A11D18540
A112E25D073E4FD464E82A271C4977852AFA836212551E375225A3EA763744F05B7FECB475A
359E350808490A4264F46F07B4F9E7A80861BB9F7881E5B981C5EDFD7C53782E9727DB9FA23
2093CC7BD26FBE2DF18077D4DC1A930B2BF3CFFC3B3690BADC2DCEA9E7D21841BB3BC5F18B4
EED4F1D3C106955D7653107602AA95D8158C0B6E2D5504EA9BE96596775A1ED7A8487BA7CBC
A6502861B0EED1569C48E87C6FE8DCDFA6609576E2EC6E72D36E427C222EF68BEA306F5117C
264E28C7522F1B32C17E681A6F98E3EF25B18053BEA6DE969FF75D0320EF808BE27A97E9693
72BC3CC1FEA2319FBF693251FD47F7A2B8C94B7915EEEDE1007624F462C24BE96A8CE69AC5F
3FB88FFCBBE8CDFA6609576E2EC6A016305A046D001236A67E693089CCEA5F1C649F6383BE9
8E4004B84740EF97DABDEEC2108FF24FB64DC6ECF5DF18FB3E8FFC516A9024060B3F6F6E1E0
134844835A896656546F09A527CE01D480E4C67A97E969372BC3CC1FEA2319FBF69325B3B72
D69914A74E8465A5CA35F37CA719AA8607B11421F4E96D7AD0BF0247A831738510E0AE8AC45
902253E7E291EE3BB201A81EBA9FE88BEBCDD592B3FCA9EAE4355200AC0BF0C51A167C16FAD
FBE46DC19357A66A088A4563B0883CF89E95A807FFEC80859BFDBA17FC0882CC9A7BDF98FA1
8BC9E492D413CDA254B39C520F362B3CF5B5D0CCC3F507519CDC6D8DB1B4588027A29046983
94F680362496055532718DBDA6B5670C21BE4333ADF7BB6188E3ECB3F2788CE8B4080C09906
4D0637C8C908DD49D76479CCAB2F48DBF79840F5007ADD00516E4B9B1E4DFDC315FDCF38CA6
7E445A4D6169FD6BBB197C3AE915144F18DBB61A08E8126D8B9366C026C90855CA147D85C96
162DC64FB476F6F92F48F5B765B0624D5BC7ECEB400A1FEFEFDA604AB70A59EF8518A469921
134CD29263B476F612D9E99998D90BF47398961D8309CC5DFE432EDACAA97DF67A24863FF2B
D7621C5AE21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21
A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3919FF3B56143B5
6A8D7BFF69034C0C0DD9D8319C8BBB10D3D4A3383E47A8A52299CAE6D30B47F0BD9D2D333DA
9110BABEA2A1B5848C1703742A8758EB4E5EA168EE71CA42CF1727FD72A4EF2347A0A558417
9B06F29EE06E4264F46F07B4F9E7AC328EF03D3BD4F5E7E183AE7D8470D3565D8F5CED84324
F4169DC40916020F39AE26E625C407901D8B69406C585D2C860E7164E90782ECB84179B06F2
9EE06E4264F46F07B4F9E7AC328EF03D3BD4F54E9B904AF789C4868083903DCCDD4ADAD78BF
ECE6C406B1536FFDB422ECD204D60B71D026925E9E0F151A5F79482185F7301336831E01FAE
60C50854ED0AC4914A8BF649461F6FEE60C557C89029BEE8EAF30D860CEC544A54A926CE648
8DE2BD62D7E46124BD94A3AE190BF9E8B2DD8B4F589C47C1380A26712151E48B1D1D66F86D6
1225B6D44A1F311BE28AE9EFC4F61253964696CE308BBC80A03B6AED1FECC5557A52B483BD2
B0DD001360F59A132CA625AA32030A20DE03182FD37BAB070306B7EABD5ACF414EA79E26796
87F0A99EC250C87A5E580F2C3C46E329C16285243D4870F6AAF083F63BE5B146650DAF576A8
72303E59C1003093DE9E1C6B52A5F91E37ED7B9771319A7D34EEE7F122C923EA01516EE4F29
8CB5BC2D20F7DB37DCB80CBD3E5716E9EB3D5D51D4400CAC5F32A8B34D805CB149CCD081EF0
A5CA7DF10FCE2B33F7E1E104560399BBE17B3BA8E93F0840DAD709522635F1C62E35125B327
90379FC65DD886CA3D278500FB12812CB3510B9675E147FE7F88354BEA67399DABD6B870967
B89CB3441250DC9AF4189432945D468F1A3570D36C23504BD6E327F4DAF0103E38DE50D475F
FCB68B9CBF7CFBF8B55344545233A5595008B578B6B7BE338D298CB5BC2D20F7DBFB12812CB
3510B9693C3AF6F6D87D225CA134434E5A0F506CFC51C2A013C291C6029198F2F8000E9D02B
8FADF7E226130BADC4144DBAB2AC404B95B989BB738F4E9B904AF789C486F54A393FC27FB73
0F1EC6C169270903CD093ADCE953F930D96CD51A896D48EC6CCF579D51EDF810D0D69ABE7A9
B1CA62E1909E72B8CE7D052B0DD001360F59A179CE6E572C8A92BE17CE725C6BDDAFB70CF32
3A006A68005B766BFC516E0573C0D799496876A8C6EA6B7C27451492EE95C4484C0E0A785E4
900F9CD1338AA5DB45C02FE4DC2785376F3BD1DCED7122375EC7FED5703B51461D4316400F4
8B215C0B7F5AEB7C8F7FA2422979AFFC92215A1DF1BD80C91F6A8BBC1BD38B498A6EAE93452
F48868F96FEE6D3DDF85274E4672346FF76A6B5933A7CB36A25B4BF8C1AEA32CEA6D89BC189
5543914A347C7AE5C7897BD7E072A670DA780F19CD632A702F20BCAB593FB50096D24DDE961
F9E98C17940811A33B8AE71C84B4EC89420BEA02E71196B39326957C57FC75A4166E0C8921F
DE6238F00435785E833B379AD55281E8970D44E04A46A332D1B30ABB22A373DB477D2ECF8D6
833C39F3C80A862C082CF2A2BBBD4E8143A081AE866DD86BD8CD96EBD188B3CBB6D6FDAC6C2
4BBD8B69406C585D2C88271735FAE2B274C7FD66D765F994B471C5EAA2C7A6EFC5270EA29FE
AA69DA33D375977DB7D96FEB0B4E4F9965A26EE2CA46923939BEA99BE8FFC516A9024060711
C97046B34FA3D3646B3A6E80410238E31DD990B8EE863B745827F371ABB8691878E2D2555DF
046188B807142E9EF4B3B72D69914A74E8B0AB5AE82A51024A8F26563935A07DFBFCD431D94
5C71C735D66818FED31F93A89CBAE09EF521027B201A81EBA9FE88B9960926767A1CCA41194
7CCEBE986C7EB102DDDFBB907D95C106955D76531076EDFF8FC72697191E456C61237C5C3E4
211D9EF8EF7649226FFA7BD192467C0CA82A63272815CDC9ACCCB11FF0783B7D5E64CC58EA4
9B2C8E4426113FE530015A59A4089C826BF11D91878E2D2555DF0449CEFA925E0BEFCD0AE7D
9108498127D70EA29FEAA69DA33D375977DB7D96FEBDC8827859947C7985D66818FED31F93A
9DAFB0509087581F9E10CD112D9E73381D0AF8FB4186803F322F9FCFED87B2D4BB741B1D90D
912A73D3317BE8263C30EA45EF7FE2D72BAB5D8B69406C585D2C88D5219AEC8CF6ECA5C427D
6FD5BB11D8EE6D3DDF85274E460E9254C2F09169A4B3CBB67E1991522676373A3E7AFD239D6
B1618C41592B9BB9BB217909AA35D7413B0999464FCAE76CBCAE1A0CB63C9F026A87A656529
2C92E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1
AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F334691356D7401F44C4
484D49D98E8D585B6B91572A24A3DDB418A95FFE9904AF81C79D57592856559F34867CAF9A7
6AD361E86A9DD523BF3F18A7E77637E6E1891878E2D2555DF047CA9954A872478E29625AB89
9A3538A4361E86A9DD523BF3F18A7E77637E6E1891878E2D2555DF0498334A3AB757D7BF742
4578AA13C4D43BCE249C21857B6A0B26DA6FCCE369E3650B338121E8A0DD3FBB273649644D0
F7CD99812A99CD660AAEB483C228E693CF399EB95F78E7ECDD9AE26E625C407901D8B69406C
585D2C8B97FE61CA338FC67CF30D28D357C544997E63FD2032F6F854566C757AD516339D871
0A0BF15F07177B05840300A9766F96162DC64FB476F6BB6592206A393561C3F4CB3B9CE709A
0548C0D70AF748D21B16823B5B9F1CBDCA46A332D1B30ABB2620126E05F67D06A42789266FA
F18EAFCCCB11FF0783B7D5E64CC58EA49B2C8E7BC7492234A963C494C732435960B22879E22
CF709AA082A5F7178E6A8FD5FA1BFC9D63ABB223583C1052951099F13ADA46A332D1B30ABB2
620126E05F67D06AC2DDD66866AB8A2AB641F4539F74AE8CAC5F3FB88FFCBBE80A2342BC981
240FD653FC9855B4ED94A34082D1346335549E869478E0A91C3A7B7040FD3D9DB6A8EC955A6
93E4ECD9212176D42B6700B6B8C98958A880D8669594E9A519746CB1E92C082CF2A2BBBD4E4
04AAB0DCA63490656AE88BE373EBC689D009A08490CE8467A5865596646BAE46D5555259B09
5EB6E008AF10AC32A81E729C38CC60FCE9FC1C5EAA2C7A6EFC528B6AEB0013964DB4DBCCF04
1C43AA3ABE9D0C53630318F0ACF4EDC1C2ED6FB3B5B9F6F667FF4B81CADB9EAD18E4DEF979D
D1724421A51B1F8C8B8A5B7B308D2AA943F04BD85652AB0CE6B615238CEF86F4804CF0F8E9D
D28362B3CF5B5D0CCC314066C3ED7CDA9428901F0703439ED202EEA95148A0345C07D3DF110
729BADD02D5504EA9BE96596A15F677349B4A7553B9374F8B8ACAC5210C4E15D85452C3FCFC
5A6D672ADC7C9E5C56BF54FDB8819DBFA464392C268BC28CD045023B78B6C301D2F7CFC71AF
6B73D2A8A7663D6197B97800E19C41EDA0865F78F0CCA6C92C1E48CA3E38290DB2EB2627E2A
7E9CC9040AC464EFAC4D3783B9374F8B8ACAC52A6F229AD70A355C1C27C4473A14D57A341FD
3A2B8333C9EDFA26D63058F86F3F075BB3EDF92234698B7EB1B320B34DA1D03B97852897018
5F55AB8D4EB6D3A282C9FC33953812CF4EC89C4FC1C7D68C7C602E71BA4F29904DAE93B72D5
7980CC6C35490D73C455432B69539E2625762C1E94278C28E564A6050D308E31DAAE0395172
D1C85CF4D1E3B4A67CF42B113C92C85297CE6287C18C2998D3C48A4289773E4FD464E82A271
7C658ECC5ACBD0B8D33FA9116A3C39EC51CB334D253EEBFF8DBF582E50822573DC637230F83
7D62E2E4D854684FEDF55DADFEF6ECCDC192DBFC9D63ABB223583C1052951099F13ADA46A33
2D1B30ABB2FE6002DB165E639B596A89EF8C6860E04740F8405DC9497C5F1C649F6383BE98B
0EA27B9376C2CDFB6EAE7282A80D8BC05C61E727471307942789266FAF18EAF4CBB159ABF65
94B6CAF546DF76854F8C3E435A31ECE58982AAA1B8A39EF25B507C6B2F3CA8BD29DCEBCDD59
2B3FCA9EAC44FCACEC6444222365FA996D987B42A94BB64DBCEDA344D1F56143DEB72957E10
17DB80E6C84AE4001F32D9644F6854C0017410A7E24F85EEEE49238D6CFEDAD6B108630AB78
E92E7A58257F6CFA66A4340E58BACB53AAE183B2A7826EBD1A9C7CA22571776C7892B4FD38B
D0653A9522F16A326884168CCD2D13009BA89E5492D520184CAC2FA7A3606AE6B86DF712E35
7E3724D42CE1D783ECC6C7C4AF16DB983554867455AB5EEEE49238D6CFEDAD6B108630AB78E
92033F2702ADDA6A871C1CCD50C3A54444977F555830BBCCECF1202EC9B33C5678B95633DEB
0BC75D743BCD7C4AC65583D4DB7EEA452BC02609F8A5AC868DE8AAE49777A18A0E5BA158C3F
65F562B75FE9FACA8CE8104F56112F5C3C4F6D10E13752B71662F567DB2D77C01A8DF2F98E7
EBC563BBEDD8DF9BD9DBAF24820175C94E2B644EA6048A50B6EDCC674F12EE845D96F9825F3
CF4C0E775A1ED7A8487BA72E67E1A9D98E694CF0679FC4ADAAFF187BD38A39809E403FD7713
0B725E2333E1FD47F7A2B8C94B7563B0883CF89E95AE38C5095911E66043D7F06D72D61B54F
72B61138BDE873837527DD5EC106C4C81DFDB97FBB160D0BA016305A046D001226FDB8236A7
32B08362B3CF5B5D0CCC33A2BC9FA91A472C5CE0ECFDE645E90A28E9CA7C1C9397D8E63F849
2B1CD1E40040F5007ADD00516E0C7864C80DB9225AFE5D7B3FE7587754BBB6C302A03DF000D
5D0B59576029014508D129F23D09F259A1348AC72FC6C0A3311A9E6BDC2BEADE853F86DB4A4
6FAE37BB2605B658DFC10068E9980519D62A6F10932A687B40F77C61D1A46143CF75501B5B2
93DB35668E1B13ACD1784C4339E51F4C11E3FB880603D589BEB3252BE8249DA239F830B641C
5EAA2C7A6EFC5270EA29FEAA69DA33D2FDBA176311FAF82F604667518D5F0ECB9166C3A0DE7
A3BD75022E4CEDB8759D6D575BAAC4C90493CBCD5FA657E6DD96188B807142E9EF40CF8AB53
87223F10211996A89F66CC889460A0DD9F67A883F504E7BA6D5D53DD7CC8615EBFD74B37173
8510E0AE8AC451A7D70061E6F60F879E22CF709AA082A51A5B0143F8439C8D75022E4CEDB87
59D6D575BAAC4C904994D7A397685109A7818C54A93753DB5C5FBCF59F6DAB5C0F2321EB28A
EC7E92DB98ED3002536B71C56AE88BE373EBC682AACCAA0FC529CCDCB2A92EF9F1F44D8A576
9F33158A8F01EBA9700A092F08D83C3A25F02B3A1DA8BD026FB6BF7160169E994D1544FED9F
A270994C91AD15A9210AC266645D7E73CA016305A046D00124A8A8D8DF4675A0B3C0C728EEC
4F9357252258AC8F568BDC51318260151D10E4A5E17BC2A579DEEF8602FA5DDB2A34569EEB6
EA0F282C9DD3CBCD5FA657E6DD96188B807142E9EF43B1387C1A4F355528578103C4423F47E
4740F8405DC9497C172952FBD7F92083404AAB0DCA634906D9923A1D660BCBE9B95633DEB0B
C75D7C7D6EF26E1A8A903501B5B293DB35668E1B13ACD1784C4331C5EAA2C7A6EFC5277C01A
8DF2F98E7EEBB9C159714094425193E42DEBDCA66D3CF21198C8B8E18DBBBBDEF334A4BBF30
3BCFD830580AB8A66E053AAB24BAA94C00A6E4E7BFADF2858C48D4822B9D974B64DBC1D96A2
5AF4686699A675203CC958F24066D9045F1BE15880C8FE0E3AB18907D3FC3AD1121EDDDD911
6B2D145DBF764B35A194BEF7AF151A5F79482185F362B3CF5B5D0CCC312EBA36A6DF3EDC765
0190C8604C986DE1B13ACD1784C43367AAEF7E60205A34EFCDD8855289CBE562E672DC22E94
73DDC4F4EDE5ACD5A022A12B51E3F49C45E3CBCD5FA657E6DD96188B807142E9EF41FD47F7A
2B8C94B71E55D9E85829D9E30E0E1D3DF540DC96ABBFCE167522C418512C898CCC8A246B442
6113FE530015A84AB52E4A9C13EC2F3D98652E3C9084CB23BCC046A2DAE91001F32D9644F68
54EDF32FBF5B7CFCB89C9DA36CB099C2DDCD3B89937933EE36B36C8E979BD2AA202B69539E2
625762CF83CB0393CD1D196A39E56118842BCE93CBCD5FA657E6DD92528099E5F6FA4655739
ED0D35F5468F708745BA0AF1DF2F1023D11FB29803CC5739ED0D35F5468F0D4C6295653F738
5AF0D02831E5730769D6E6EE49EC5319E7C6B2F3CA8BD29DC6EDCC674F12EE845D96F9825F3
CF4C0E775A1ED7A8487BA755E02C693D9270CF79A478FCBE59C3873E0F30BE77C03A5D1FD47
F7A2B8C94B712654EA7AD3AF3D125723F99968E0CBB55220B52BDB11CD97A308ECD166946B0
BD7C4DF13EA2E9D1596A89EF8C6860E02C85297CE6287C18DC57108CA2B4FDCC0CF8AB53872
23F10211996A89F66CC889460A0DD9F67A883F504E7BA6D5D53DD7CC8615EBFD74B37173851
0E0AE8AC451A7D70061E6F60F879E22CF709AA082A7A1E691B4B48CC2DEA02E71196B393269
57C57FC75A4166EE9E6E69E9D4A822E3EF0502D8298FC3F346393856195653BC36AAA25D7F1
262E471479418B9E76B74D04C8B921B8F127296441339DB3CD6FF25B16484916347D915EEED
E1007624F0E1FCC71C8E7A565AC5F3FB88FFCBBE8EEFB213ACB80432A6F793409954AF30B1B
33874B7F8FA9EC12654EA7AD3AF3D1D339DAB905E139A139CC24B5B0828059BB5BCE2901F7C
982EA02E71196B39326957C57FC75A4166EE9E6E69E9D4A822E3EF0502D8298FC3FCB5D7A8B
14CA9AF0E4CC89D066CE37AFB521B545D3C0B720FB2E32A3C17C15F754ED353552A2597B68B
EA306F5117C2630F6D7F55C6C66C75073F3D5FC1A1F2A68E05DD8C2ABE35C020E7A0D38ED7B
8D1D303A83406656C249F916B968BC1C1C4545C3CBCA1724C8388CED7FF028DFD4973ED9493
0CC2486FB2E32A3C17C15F75C3746E987A63633E8D41D650FFF9B701E0B28BC67C57FC4B886
9404FA7CD5CFE0DFCBCBC346FD16957524FF327CEC30EC690D1D0E47680326ADC5A51445E1D
EE700108F0F318948487E396FF8862B9E740954037E06CC6E365C1FEC79C9E059073DABA34D
0B3B0F8745659E57D42FFF2AF60FE5C6927ED860A8904A47806AB736B22C1ECF7DF21CD33A4
1E6B3984EBE1985286FB36E82E3301427093C1678BB54571C896DC450D3E199E76CFE774BBD
861F4D2A0AA8194998F6836ED0EC880B577D4B74F18DAC6ABCF8E94923E20EFF2DEF7772439
CC32763744F05B7FECB475A359E350808490A3E9525DD202C716A4460E380AF0425159B234C
CA88137A19D474E7CFFE2E1AB9BE10F70E76EE0D9CCF38CA67E445A4D6E7D367F6EF7BDA372
2244BEF9C712F20CF663E42F153D9EE86D78775BF6D3F0CA70372AEB7B3C8893DAB5F36448D
066BBABE37615F727001D6EF73114F7A556EE4ADB68D40F45A2C4EB909DC6DC9961F148D07C
B339F99E9C4484D49D98E8D581E06110EC27B8E67C85F65301ABFF602E21A7E1AA7C2F3F3E2
1A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F
3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E3293DCA500E9D718DD84729BEB23E684E9B904A
F789C4868CF388F9BD1514B7BF6E1BB7DF87EA468EE71CA42CF1727FD72A4EF2347A0A55841
79B06F29EE06E4264F46F07B4F9E7C51D06BB26747D8823954018F1AD49A322244BEF9C712F
20CF663E42F153D9EED1383718DBE1951C35CECECF16FC329ADC38C97EA23E36568FA782500
A54B00886D00F2C4BCACD9D48AB670E7A4B4606DFB9F0BA14575DB54E9B904AF789C4866AE9
E61344E6331BF59659B13E7B5DCC21759FE864E4346BAA1D229D351407D50821539419FB18B
F83E7D8ECB742BF3B6B0463B8C69B5D06844ACFA010D9E2C0193EA1242941DCDE50D8261B9F
ED4408D03E09CB66C9074AA32B55906A5CE2B7CE8415B67938EBD48267DCF5944B22054E9B9
04AF789C486234A55936C1479ECAED266EEEA3FAC5167F621B2D3D954AFC5DAD99D0AD74326
3456B1A27814BF1A6CC2FD3092EAA0F5412D83B9D84C6F76D0C4C34EB6B09A6E5853B6330ED
928345D761E4C5F3C95D1ECD568E9C4F88636C3F30F56732FECC7DFB9F0BA14575DB54E9B90
4AF789C486098B2CD48583BF8D831B97A9EDD06D6FE903DA86C81C60DEC558C173354682C2F
839C9324498641514EC0009A95F6A2C8A311D3652A44F133F71D3E8D5E774DF059117633138
76B89AFF0FB5DF9F3636D198C256F7D140BDDF71B57BE2926B9EC855BBCF4295CEA66FDB198
A48622E43417C56B9D4EB21156712151E48B1D1D622A0ED337E8EB7721167ECA4DF43BA93B3
ABE1D7CFBBDEB6538644E94825ED7D7BBB2149F85339DE4741393D49682A782F27D22618C9B
B255F6DB22AF6D5018FF3E4D54F2FA5533ED10D922ED089B6146E0029009388FAAA8FA5BEAC
B1D258E84FC7F765834B457B0B142A0901189F11192E00D8DC95BF9118B9B202D33FDA1D7E0
206596716B58FF3738E0A902F2E9106846185882506FC9D29645927A3530D5E2B594FE95AA9
B33820BF63F203B10FFF93B669841AD68AB94E6D5C1968BF0AD27D8D8F48E744876A24C234A
8414835ECCDF86A4E3BA8A78C8B8A5B7B308D2AA943F04BD85652AB7352B49550E824069DD8
16291A260C496BD8CD96EBD188B3CBB6D6FDAC6C24BB28848FAEDB9DE29A6DF63DE06E0F078
20ECCC7D93F915346BC42427864ADF4F582CDD6ACCA6A529435F3F325EA3718FE13D177DB8F
EDF3C6A21F40772B6E125B4A70776C89327E7DE425A90C9DDDA2CB61172061E67656E195172
D1C85CF4D1E837D2DE184F393B5EBCDD592B3FCA9EA17F8E0B0001AA8B21D0AF8FB4186803F
322F9FCFED87B2D45E4C2C1FFD6552D458F24066D9045F1BE15880C8FE0E3AB1590B159A8F8
FB7673CD1B585E0F431CE56F85C793AFE91AE6D107B219960886A23A1AC318681FE152E6E2F
5C7A54D605BE7C9287730D24A17709288AFFA9D133C57DF194B6B46BA556C7DA5DF1924EE79
90959F72FF9D9FF7D31790B3FA4926921A2D5BC18C374B79DC0866DBEA3226A9F8A5AC868DE
8AAE3A8A364BE7C3BD87D9CE4E2941FE2054D95736256EA9FBE35F1C649F6383BE98E155336
FBAC8BF71038BA31F28994A99358F4CB93819B8758E364BBEB66AAEDA633A9BBC690182E936
E3E5748962130F9CEE59A10521A0AC2C051411865CFF0B514329D9F1D683F146B36ADC94E5C
BF217D4FFD6867F6C489E1BC2EB53BCEA62F001E9EF0EBCF54FC4EBF87837C7ACD7E4D4C2A3
57E84486A4733FD0374C383D0C89ACC4159E59632A101D516676FF83865F78F0CCA6C92C8BC
484102E72433FEB5E60841D5E74B83DDFF8027C0CC8B1CDFA6609576E2EC696F27B345DFF72
9240C7C095A091609DB13C1A2A645E997636FA58B6DA26D37C61EB2ABBB4323B4FE73B50732
DF1754EDF496326C47DDCD5D6542DB9A9D60CF44FE61DB989255D7D3949A00F7917DA4F5EB8
8B9744C9FE1A4740F8405DC9497CE86622643B912C0FFD429616431C13D4B7268B77D23F65B
90149B48C50D772C41FD4C1D036F42D939D29645927A3530DC9DF0D352109EBA4FE7B412CD3
6D38C43BC1859F7D27A29B9D571EDD7006E304CDCFE6DB075A8FF2D33FA9116A3C39ECAFD6A
98096035F9B77C01A8DF2F98E7E37BB2605B658DFC1BBB40F25E5632FA08E59F25326C4DC96
FF4BEB922E892604F427D7DEB6CE1C945C50CAB0E9151A7A2DF62141F0AAAD282DC3F659082
ED0415F89155F9EC0F534B94E6D5C1968BF0AF3E1331B9651F76BC955A693E4ECD92163D714
8F4C4B2C1196162DC64FB476F63292E7DD18D1D24FCD29263B476F612D9E99998D90BF47398
961D8309CC5DFE4ADC35C728FE2790537DCB80CBD3E5716D8B69406C585D2C838A7973EC714
0509174AD6C19FDB9BED2C548BE0AF4ED94713C76A10A292FEA9BB1F2A0312EFCF327E4F967
909194DB97495688AA67CEA93B321AB5C92BB4BD54DDE4A35154D6EA41A017642F340EDEE99
CAE6D30B47F0BD365973EC44063AB7497AF076E7619C7A29A62B98CF47DE05C3A68BC59CA8A
C94C106955D765310766399B5A821F508E16A3541CDB01B7A8096162DC64FB476F6B49D4012
7159E9A9F37E9300331B916A17CE725C6BDDAFB70CF323A006A68005CC57C4F3EB15D03AC21
BE4333ADF7BB64B9B1E4DFDC315FDCF38CA67E445A4D6FBACC41F73F9043EFF93B669841AD6
8A6E784D276758F5ABCA0999F44F97678656197ADC4CCB68564566C757AD516339D8710A0BF
15F07177B05840300A9766F96162DC64FB476F6F92F48F5B765B0624D5BC7ECEB400A1F6188
B807142E9EF40CF8AB5387223F10757038118230BAC291878E2D2555DF047CA9954A872478E
21F469D237383BDD40ECCC7D93F915346E64CC58EA49B2C8E7E0206596716B58F384DEF9A42
93C33DE41647A1AF209A09BD49BB8ADF584F46C21BE4333ADF7BB64B9B1E4DFDC315FDCF38C
A67E445A4D6FBACC41F73F9043E51CB334D253EEBFF8DBF582E50822573EF89950141A89B0D
0CA2A1E8227AA8FBA170EE0DBD2FD2AFC536A4B746BB26054DF099680ECC1540F58A5B9A0AB
008B423B4F9FEC2BCD7E4C30497D71993748207F4CF44D6217F4596162DC64FB476F650CA15
73812CAA77FBAEA2B574D97C01F0B47687FD3DBFB6CFE571B5D35C8A687A846B1BE331A0A6E
234CE54ACE966369E5CDA9D7D1919FB9D6E42CDD9979D20DCEA9E7D21841BB3BC5F18B4EED4
F1D3091A396E2DAADF9B3C8DFC1988FD8BFFF151A5F79482185F528BB7B9C1FAB566E8A0F7D
4EC3726A64CF3A6603161A8521A5CF0C5D00B3A72F151A5F79482185F362B3CF5B5D0CCC334
F96EB2657550268745659E57D42FFFF55B48B65184A7005B284A67D9AE5B7C3C4FB8641B96C
D57C877094F709C8C183B1CF3C763CE8222E668EF4A736EBDA4C3AB5BB0CA4CB7E201FAC141
6EFDA20BDD01B91136A0CDE05F1C649F6383BE98775A1ED7A8487BA76A36313783B7AC288E3
AB9FAA79FEE738794E7769A54D53D4A81ECC500E5494CD96F0B1BCBB3E532B3D03379AB260E
55C3C92FCEDFE3971ACEEF1E859325EA7A8D4FF2FE2FA0A07DE806586F42FFAB7E7D31790B3
FA492691443798AF285E12C4F6EB55F35F620AB7B3C4201881EE7776E784D276758F5AB8BEB
B5F98219AF65BB5BCE2901F7C982773907312FC8CA56365FA996D987B42A94BB64DBCEDA344
DD2C8578DBE372B51C15FBE8A476E53B456C8951335BBC7E10A1866BEE1F60610E04331709F
17B1AC2427E6BA2251FC2E064AFF0CCD718AB31740E3957843C01751F885C45D739FC4A579E
8D261FD71C85D287A6D195DBE1CB82BABCF1B44C65F6C90855CA147D85CC600A9387A6F3239
5052383F87A024993701FDFE763A89FBBFC9D63ABB2235836AE0FEF368497BC7E8A0F7D4EC3
726A64E28C7522F1B32C17E681A6F98E3EF257B670E045453BACAA016305A046D0012D8B694
06C585D2C8D0807843311D6E30106DE1CC809C41C8DF496326C47DDCD5B07630D60F4CA59BF
58A5B9A0AB008B49C48B96E1023243394BB64DBCEDA344D3B38701034DDC2C8EC51E942030C
C255B7268B77D23F65B93DB39C0FCF3D68A035CF4131AC7A5D36BB93A74B7215C6D501AF2D0
EE04434820B38730D12113B645EBECCA9C26597D6E7E183AE7D8470D36E739A0273D7D77418
F7B696F1B26FB8561A57315B54B716E7CEB41D954529A6A4733FD0374C383D0C89ACC4159E5
96392D361B7F6D4EA553FC7DE467D5F0D584AFDD0EF9CC69ACB20FC3D0D41B95514DF496326
C47DDCD5B07630D60F4CA59B6B1A2BEC91B10C6E870087F914436AC76CC98600617C4846D5A
DF3A25EC0C292F8634FCD92FCD34EF0F2B2E175DB3FFC571BC2194854EED512CA8D071D8E5B
A5F151A5F79482185F1569C48E87C6FE8D33A8FC59EE00AAFC1E9151FE5C77E7CDEAF301C96
D69C4C1A943F04BD85652AB3B7A5279FA257D104CBB159ABF6594B6CBB6D6FDAC6C24BBF151
A5F79482185F1BC60E7E7C895802CCCB11FF0783B7D5F3AF71C2FBF2A98F64C07B9F95E3163
79F726972F38A62852EA7A1FC69ACDB2FA48745BEE9BDF079FD1A1325673C2F507B9A4365F4
27D28FD8710A0BF15F0717B1B29F1DC4941C309D009A08490CE846E9705BB4B54C13318AFAA
E44C760D61233A38299CE4993990E9B0A2A044147C4B9DAC38D80E7EBEC82CDD6ACCA6A5294
7BFDB33DCC71C0DADB5F0AFF0902E8F07E0206596716B58FF3738E0A902F2E91560467115E8
95304B401863110CCC5BCE6EAFD7BD3244976F0E686FAD035788C21A2D5BC18C374B7D96F98
25F3CF4C0E775A1ED7A8487BA72DBDD9CC79D564E86A59CFAFC08F33A28AFAAE44C760D6123
62B3CF5B5D0CCC3527B7D160C1B3CE902488AEA2F59438CA8706FF1D00EB6EFD396857EFEF8
287B89CC07D0FCECE7ADE19819B438AB05CAA3606AE6B86DF71263C0E10EAE2DA61E66E053A
AB24BAA942F70E513ECF7A8E6CD24A3C5E02990CBD44FE87EAF298701B0AF3F4746684A1D6A
B16105BC28D4C43C60C454A4ADE0CD5F0DD867D38CC0C558B34010C284ED5F7E0206596716B
58F4BD20AB1372BCB9FCD7C40BB0219B8C8355BE9471A1A82358892EC1FE92518E1B7268B77
D23F65B93DB39C0FCF3D68A035CF4131AC7A5D36BB93A74B7215C6D548A1E172484311314EC
C93744D35A809B2B32B823DCF618958842243435C7B7763E5758452035629D33FA9116A3C39
EC1443798AF285E12C69F4FC251BD3BD07BDCCE461F45391FA755030ACCE94115277C01A8DF
2F98E7E883E73458DA4A47CB985DF95942135FAF1D48A7F2F11DC60AD3F31818C759C71DF0C
BF9A5AC543C9E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F
3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F32561817FAE
7788748A0467FDEF7AA20D138B6832206FE547A5D7E32FB2EF92E14264F46F07B4F9E796F67
B0897E868FC8BF08DC146BDE9494536717D8DE02FA7BA369CCDB5D9D13C1631D1224940F97E
EEAD3FDC430465DDCAD53477FF23D841B5C36AB309F31EC60202D6EC07FB386C712BF2786D9
5FA2B3279BB221E2E866A15528314EF529BF0B80CE267754240535276F80A86811065358AEC
7ECE1F6DC7F7314F9268311C59361E86A9DD523BF3E7F4366DAEF32714F6A9B95A79EB1325F
6BE8494D0140857C9BAB72ABB454FB69D815E1C88A7AF43D672250F7F8B29507148B5571724
416BA20CCFDF47A3FB6C0650BCFD549C3E3372A189C9B820B58C7EF9E6F1F712AD86A1C406F
26E23B712C90ECFEF2E9C280760CD5085EDAECD55F519291FF8F0CD4388AFD1EFAF4C23C482
C89D8C02989285755CBD0A1295E768907D442FBDB38BC9F65AFE555886AA4A46D9D0E1804F1
3C7C5CE18FC7F943DB8D84FCD2184F78DE23B18B7D22E208D94F71B1B72F31AE8A3BC391D6C
7AED5ECB752D298DDC43E177B6F6A824BFA8C6047F01D9B347B80BBE8209BE3411CD8AAE5CE
D2076FB8A832700AC2D60C75C1C102F1BB2D81CBAD5DE92685BF2681993F0A7CB36A25B4BF8
C1F1C650CF54983932D52C6BEA69394893A5B9675B58CAA339DF0E13E43AD3894C0263345E7
C88BD53CAABF0E0D3503D25FB12812CB3510B969F397DBBFDB3993667424690242A61C76385
793D69D7E009195BA2104AC64E020A41DCD1412FC61AB6B0DBAF753631B79E982C28EC7C261
1CED630E324901C2213AB310CE7DAB4D614EC0009A95F6A2C6A1D153174FE0F8F554C544BE1
16A31BB4C941C8391A46BB175FDEF5C78F4B96E2FECBB891575291FF93B669841AD68A7CA8E
5823AADBB90F58A5B9A0AB008B4B0BDAC799D39CF56AB5E9668072803CB181B4C5A8D18AC44
BB59DAFE3F4E8028E215E48523415BC80347994D4878C584865F78F0CCA6C92C322EC83A2FB
C09162B69539E2625762CE58AFB93DF2F8363F4E5D1F7E33402BF2A81B53074BFB94B16F000
088853A7A95AE44D6BC718F4C2B0DA4CE078A0BA7B1A167C16FADFBE46DC19357A66A088A4D
604D4DE6214416FA8145838A4C4B69B1B4C81B206E2E657CF111961DC964D0C9D225A6A4CF9
5B3C452CC65327DDC50443066D876BE24405E0B132016F0FD51D1B4C81B206E2E657CF11196
1DC964D0C001F32D9644F6854D9E522FFE4EEA76B0F7B0E3510BBADC51432FBF2366F3996BE
5D0DAA4B49DEB61D746E2A5258B63692B97C7D740DAECE902ED32EF0CB53FC2B69539E26257
62C8DBEC3F48076F7B08D963FE9E29EF2644874A5DDE0A97C3B6962E65FA2AA39067507CC3F
D8FF54D52528099E5F6FA465E3DBAD3FB85EBD5D95740BD97D19F3A0865F78F0CCA6C92CD73
F7CD1399BC8A5E5C56BF54FDB88192052A7B4093E8AC0CDBD1D86F1C39B7EB3AF20449AD370
CA647D5E0CE988CFAEB145A9D15C2AB263F4E5D1F7E33402BF9E1191238C38FE493DA4F69EC
4A34CD561EB2ABBB4323B4F2E333635CF8DD172F2E836F5F5F5A04D5D81E5F15886392ECA96
1E8B02FBF823C018BF74407AA8F3D56411FD80167B1D346C4A798D8BBA1664FDA409BC29C32
AF151A5F79482185FCDFA6609576E2EC6E36A6C54FC8087ECF52F722BB9B4FD816786084F9F
7D3ECFAFD6A98096035F9B77C01A8DF2F98E7E2E084A96385CA76016D6C4325CC956C581956
E518AE8FF19852DEC8A76BCA49A8B4080C099064D0637C8C908DD49D764E2EFFEA7E8A79578
9B27E4A6127725EE511C1F15F0F22FF2A9160FECE85D37D945FDC2FBC93BD9AFEDEC51F03A1
A1DA22B3EA34FD340D2CC02A3EE347E6268314C633DE54DAA699ABC563BBEDD8DF9BD26E214
67BE08E62E90AB59D32BB45E3602A3EE347E6268314C633DE54DAA699A21233E5C3E9822C55
991A866F4BFC782CDFA6609576E2EC6A0CEA7CA8BE4F655B4CBA9FA563DB99F8B4080C09906
4D0637C8C908DD49D7647488687FB6C570A5835A896656546F09D6FC5CAE73C4F8F3EE6A687
B2A0E8F80D29CE35FAF0C414F2C85297CE6287C1835B45C1C7C1B5E64ED37D4F56FA29BC81B
66C9985DD079713A6D8E79539EA87F258E7EC54B1898F8D5B273902A67B2F9B9E45076DF69A
B9CDB0AAB84572791CB11D9EF8EF764922661EB2ABBB4323B4FC119176DBF218B40D9CE4E29
41FE20541DC814CC4866430CE19F5B972F96D34704E9708A6BF7D2358745659E57D42FFFB52
4A4F12183828FC668A052B52B0FE087A26BEA4AE7153AEE2F7ED535AFA97A4A0C9AF2EA4427
769B27E4A6127725EE511C1F15F0F22FF25D66818FED31F93A9C9E1B9EAC943834E76A57E8E
6D75FCB5A77DC9C4C100C830A592ED40F379C1A7D457E836108DC343C162224744C1F8C1A16
7C16FADFBE46DC19357A66A088A45D66818FED31F93A9C9E1B9EAC943834E76A57E8E6D75FC
BD2CB8263B00FD21807135E2E950AE795CDFA6609576E2EC6EE2F7ED535AFA97A177774036B
063E18EBBB26C1C317A3EC8B4080C099064D068E9419EC4BC7EC42BE54DB5B425A4CDAC9FCA
8BFABCF553D1A167C16FADFBE46DC19357A66A088A44E9C6DB6A5D62B0CC2535ACE14F49729
44BB55FA1C8D8BEFE076F8A31C6DF68F9B27E4A6127725EE511C1F15F0F22FF25D66818FED3
1F93A58C8EB987ED74643D57F49BF5A7550ABD0A297F4187EAAAD943C5FE69273D7A4CC1A01
1C9F7D9993B60113F22FC806088F14BB4BFCA2C388B474D27DDC684EF39A36C04D67E39B745
E65EDCE1774C4D7349E8AAE647D20D855328F92138BEB12CDFA6609576E2EC6EE2F7ED535AF
A97A9CC58929F734C8F63E88A404D3ADC64ED6FC5CAE73C4F8F3EE6A687B2A0E8F803101FDE
3799224B3D5FBA39DFE860A4BD33FA9116A3C39ECA4733FD0374C383D0C89ACC4159E59632C
0915FF551CC99B1738510E0AE8AC459E37CF8D54B2E57A69931AEE7C071A825F70D1DB1317D
15F9ACC6FEB016A3762AF433569D75287649E37CF8D54B2E57A45752FD33132899CC85F6530
1ABFF602E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21
A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3E21A7E1AA7C2F3F3C938D1C77F018D
32ABB861BB7E5E1F192B0DD001360F59A12A0695B0FBAE46F3F14E1139389472E059A79D3AD
D08434C7171DFACA82F4C5657C98F038C2CB206FDF0E9E7DD16FA279D815E1C88A7AF439C74
702328E96B440FB07FE78A7B279FE830F2F3DAC93186C34D91A47C9EF607565D8F5CED84324
F917756E90BFE8D5D052AD1DA074967DC757207EFD417144E2A5F91E37ED7B977EBA594B046
06FD5D7DF0FA3A59964CF6DC647452260614718716EA3998F8ACC37C732D429A9B879845FED
D76C290D2DF6FB5E3B129DFC886218D44972C33A07D29166591767A28694B87F8F9D3CEDD53
C9355B19FF96BEE18506BA1B9BE5213E699C20B0792D386FF8E8F7759C2909515C50A0E2AB2
26E04BF735A955714C112DEAA88FACFC7CB309725A6DDBFB782740BA9D31BC135A310905FDA
FC14D1D18647BF057EEF35B4DA697EEA9B67B10E6D51575838C6982103813C09906F6B63CD5
18FD2D923487CCDD78BB23779A6EA88BBC907D534998FD047BF057EEF35B4DA493BC7AFF771
AC9860A80A10FED7A45C096A664AFE94B554BD0FD070994B7808DAFA2526BC4012D3B03E376
C15F34681E9D51A4CCE75CA90172D621F7EE5F816C21128FFDCDB3F6AB321AB5C92BB4BD5ED
EE3509EC6C86CC9D5C2EA641A489FCC7BBAE59B13F250B7D00383CB3F51FCB77E5D84AD80D1
674476DA3126485394F2D1B1F6DFE0A82F1AD97B444318B412A3A6BDD065BF019D12012200E
C393234E78C320E13329703CFD871AAB7DEE3F5B9E982C28EC7C2611A9D6213DEB6B394E46B
113EE7915B0F0FF78E3A40098FAB342D6B8AB6B63B79C12436C8447A57D5E66CADCD8EDB2C5
5EB16BB32E29F9B54C907D442FBDB38BC9D0ADEF04216F3D759CFFB71E4ECFB21F7391F010C
33483CD432B709C31F0476E733CCCB04A39C21A92096780B226FDB92AAF61872837AD708ACE
A5E062218D5FD3CA2018ADA015A49AAE757636E7D4E6B774CAE90A0A0ED849C31B126F5FD84
F63DA81E898DE2B55F89EFD1512D7C086ED514E964FB7EB9A140306B315A686CB098AEABBD2
51CE43B251F2F7A86384A682E14DE423B0B326B37CF0D3274DC4F393BF1F1C1E22A889E85F0
942CDED5CC76171BA4A3C50BF6D4FB8CE9403F90C946595308D187CAE67EE0E0DC4F148AD3F
CCABB57F2D2FF7D63C5C59E0AF6C4930E47A176C0A143C1FD4E2B353ED0323B32A25A493344
933CC15528314EF529BF0B80CE267754240535276F80A86811065358AEC7ECE1F6DC70245CD
91FDE90EDDD9ACBF0BFECA24B09AE26E625C407901E7E183AE7D8470D3B03D98E46BD60C5C5
C935D9C4D8A4869D0C4C34EB6B09A6E5853B6330ED9283438AC6A7132A265F978BC293CA8EB
657584C3D4ED2CBDE3836AF1D5E50A0D5177A308018B4EC2C15166C2B00D320504B79531612
4C6BB0EB54F91B170853EE0F63699F409BBF9793E767788142BAE036EFCE6396E08CD2C7B19
4AB4D2642B797ADA1C0C4EC6EC52F91193CDE7EE6D27A640031A30177C9093360FB144A826B
A69A55B803F6C394AA9875649BF36162AFFD99A4A2817EC42BFB886A299A0FD8CEB9E4922C7
5352C97337892759001BEAE1E307C5D0FDE922E7DA64998954D2C885C0695E21D1A77E7B193
6167758783C8D751184310C2BEAAF24AC1CEE4D40682E4ABB8657BE5D1B9C440941566D35B9
8AD99A4A2817EC42BFE4C876BBB4206B3534F656FA1D7BDD213CBC60A957AFA4F54791625EA
4FAE3DA92A14FA68E8D1958FD871AAB7DEE3F5B9E982C28EC7C2611A9D6213DEB6B394E46B1
13EE7915B0F037DCB80CBD3E5716CD96C86E7DBC92247FFCB359C724824350ABBCC38ED39E7
5E4A5C63C9D8020A7EA2A00052D615F204F88243217B752B128C87F3EE57C99EF1271DD4228
034527B93188CAB2E26DB6BADA6C07C6DE2A4BED8BC2298D889892822CCB058F89B856EE675
B72780E629A9663796B4F79AC15C45A8C26716D06E4FE252638275A09F1281C6D984D8F88C1
F2D5EEE01605A89F1D34E8AA9D6D9AC97D905C009934ADB1459FD7CA4DDBAC325F88FD6B007
1A9EBD0E4F345D2DF84D6F00250AA02606BB47BD17F49B79457B846D9D0E1804F13C7C5CE18
FC7F943DB8D84FCD2184F78DE23B18B7D22E208D94F71B1B72F31AE8A3BC391D6C7AED5ECB7
52D298DDC43E177AD0E51C9009B3230138470DC5ABD6E6D9B234CCA88137A199ABF81B59B7E
8F49689E762792F65D4101093993739BD5F735A774640425371823A91FC86532FB5F5F750E3
3942B92D05AA6BE6AA88A8043221C5E0C5104C535F569B9198527CDDC7F19021C304618D6B8
198A57B0D5C523C64933F5303F9CA95AFAAD1C0BCA6929C19DFC15981F7CF0AFAF27945E1F7
D75DDF1CD20C2159B3635306DECE50C64833F4386066DCAB617E012F6A2E74A49DC9176A519
FE32E735A82AF11AAB567939EFB334DBB6915544CCDE1C845DD4887F6F801471014C5252EC3
F24DC023EF48BF01A4450E183DC5FD68D8B2CEA4F17A3F8A41F6C545B81EDD32E4204EB2003
E07A7D981B242ED57C73BB79937F3F1484CB2AC9CB55A6B5E5A9B3EC39BA46A4CD1C03D61C8
A742A54790C9F11D72209FDF151A5F79482185F906988EEB39C86B9E046B086EEC8AF9FEF2F
75B685BFB8BB56D514EA735D5E91FD0A91BCD3ED39157D9AA0DF17131351D0A45FBB0B26660
55C35F0A70848D323A7CB36A25B4BF8C1573300A62A92F0B4A4C4F6D447E2F973F38A32AD35
362D2FD6FB05C80B2CB0CF83F63BE5B146650D99AD00613EEA2552F3697705362B12F875660
D4627E056402E203F24A8EE2B2908944736ACD355D39663796B4F79AC15CECF4C8533D32080
B63EB891EB32F24A00AFF60CCC600F4FA216B63DAA97FB3107DC38AAF6495659175D9F998CD
459FEDA2818293124C3BB7F228940097CD081B7809E2BF25BFBC5FE3B0D478DB059C8BEA490
7E8625B4996385793D69D7E009A11F119A90B59B1FC3C7A2CD2506D0DE43BC8A509BCCC7389
A35A13A99A2CD1A50ABBCC38ED39E752B0DD001360F59A11A19471F519C758EF033C2B5D102
8F01DE80AFDF8A560F7846CF8CF59FF584CD9A1B25195AC91B619725A6DDBFB782747105A47
11AF8BE0BC29BD8D4736B172EDCD2187ACA26F2C878C320E13329703CFD871AAB7DEE3F5B9E
982C28EC7C2611A9D6213DEB6B394E46B113EE7915B0F0FF78E3A40098FAB3D8BE219507D24
6507D9AA0DF17131351F860BF29F32BF3017F19021C304618D64B5F7A764CC4722188342756
DD1A27D626375C9D268A84959B234CCA88137A194E3979A3CE795871D2ABE3575D25191C842
7B542FDB7E05E47C51A35F2B966F9D436F64A8CC3F2182AFD31641038BEAB49682A629763BE
1539210A3256F0BA6D251CFEAB2BA38958DB548FD8131328317AE93186EDAFBA7E6AB236FAF
4B033D253FD069916ECE3A6C3C4FE61E1B80BA1519E23F112B734509861438A91D860BEC6D0
AF4AC4218AF7FE5FFCB8CB2BE693585CB93784B6ECE5FD4AD0C5EF168B4A750F2C2385625CD
49539D99FD929F682907D442FBDB38BC99A3295D7177EA684C9FF8F66D9F46A9A82741F8479
9F9A0E3101FDE3799224B3B4B04F4B505D6214244E22B862C887B6E56F996B1E9F9F7F91E54
A762111359112E107AEEC304BC87113ED894E580BF1661A31E255F7B113D2982B51E0B84AF6
B38359632C1BA8697B55C2E47D7C5E92DF94DAE568A6A5A3D3A266D74083249842278FA8E51
62BAB5DD5BECFE47268AC0541A65D24D42735E60FEA2298425C7D9D2CB6C07B3A90089D793D
70A2A1A075B38359632C1BA869E1912B6A083385B9A6B490686FB27A418290248C9E08C0767
26152D53751094507B6575CC3DF4173B5E70BDDA4BB24BCBC50EEC65A61F7CB4583775E3A9A
35C94ABB8657BE5D1B9C700CB10616EAF529EC6612551B2A05ACEFF8921F1C9470449BD754A
30A7881E3EF77590BD7C40F178B2071A49639208C1CB31A68B1F15BDEDF731C56A18A71D7C8
D9ED8EEEE678BAC3FB688DC557E3F99E43843F2491133E1C938B3A83FE3083D736FA46D3F83
4FCEE83E440D5158672EDBEB670E664C55DAFAF27945E1F7D7557EAA5C55C78732B0441AC7D
50357037BE57C5CC25066977FC814996D7DED5AC8934678C23BF3FF87B673626F0B5F1285B6
1B5975C645B60FF78E3A40098FAB3012C80F9FB3CE729537872A7DE295DADAB464D0B3D5E37
40BD3D6219BE184DA19BD4BC3D8AD3E950E7EE4D00C01EC7C847BF057EEF35B4DAFCDD31A88
375BA887579DAE25562ABFA3F4386066DCAB617D6FE922E7A600AB17467EF69379A8CC7F9AC
F51F02B6FA0CE3B44ED3B8EB9D5E5D61306761D88866E155336FBAC8BF711D9348EBE1A3246
1E6FDC4D9A47FBCB5B321AB5C92BB4BD50650BCFD549C3E334715DA9E1D4699C75DF17E7237
CC1B48B77E03CFB42FCFB0AC7F6628C08BF61191E54A762111359112E107AEEC304BC864EFE
D08490E1460CF916D8D0D7E23988B7EB1B320B34DA1A9213EC0F67E505D1C1CCD50C3A54444
977F555830BBCCEC4287A034DB91D4871B4C81B206E2E65793B4054372AC2DCFCDFA6609576
E2EC6FBA2323E3BA3BC9191083C31E6C1D3941B4C81B206E2E65793B4054372AC2DCF12654E
A7AD3AF3D1EFD0394FA57D80EB835A896656546F09D6FC5CAE73C4F8F3EE6A687B2A0E8F805
45301E909C03B5D47905C4326CC1981D6FC5CAE73C4F8F3EE6A687B2A0E8F80933742253806
F75995316124C6BB0EB54C2312B567DB7AB2179566E31D895464E0B132016F0FD51D1B4C81B
206E2E65793B4054372AC2DCFCDFA6609576E2EC6FBA2323E3BA3BC91C011F41AE6BB65A71B
4C81B206E2E65793B4054372AC2DCFD604D4DE6214416F5968F15716E9216EC3D36275B3878
2F94874A5DDE0A97C3BA5BF1C5F3D468C9B3C0474AC546404A940CE4526686360A08B3A7A7E
36C4CA10C32C3282F59D123F68126032F5DB99A91B4C81B206E2E657DF5EDECAC8F7A4C7055
A7A14D00193A02C85297CE6287C1835B45C1C7C1B5E64D187CB3FB678383A444AC89D7A2328
19F661E0DD307C4826BFBE36D25541D62EB95633DEB0BC75D734297C520CEE89C7DB4D0B2A7
63DD6641764B3658050FF239ECEF2D4316589D8FF3BD50079D1370D672C84F31BC3536887A5
7162470490B0E076F8A31C6DF68FAA63CDCC38C4C00F0BE557BF36616201B8869404FA7CD5C
F5A0BDF4485301C885FAB28BC0B06ED678A89B99EF0F6473DEE2F7ED535AFA97ACD5001A065
E61096DEF413FA0E4B52F7511C1F15F0F22FF2E13B7710906DEEC51CF1BA3987DBEF1463061
ADF920FE12BCDFA6609576E2EC691ED0F7E2D0158F2CDFA6609576E2EC6EE2F7ED535AFA97A
177774036B063E18D2541666A236E7554874A5DDE0A97C3B2FE73B17F9CA1AA0514329D9F1D
683F1014340144A24CEE16A2E5D7F70E520654874A5DDE0A97C3BA5BF1C5F3D468C9B6F6766
201FE077F41A167C16FADFBE46DC19357A66A088A4EF4569F1C15EFA4EDEB6968E49BCAF383
98283E82F9382B18B4080C099064D0616B860123EF3D5DA3B862177EDE6E74E8FACD0156E3D
63516D8727DDC98DC3A1F52F722BB9B4FD81DAF9FA0B655AE9B1F4E5D1F7E33402BF9E11912
38C38FE499D225A6A4CF95B3CEEA26AEE8FE319B87FF4F1AF807C45A7DABEF3595DDBAE7AD6
FC5CAE73C4F8F3EE6A687B2A0E8F80545301E909C03B5D68DEE43A1B76E60FBEA098532ADB3
8C25B8BAC9A0769D3D01AC24CB83EE010136A84A342E9DE8FF1DEF413FA0E4B52F7511C1F15
F0F22FF2E13B7710906DEEC51CF1BA3987DBEF14888CA485B9AFA6F35968F15716E9216EBB1
1F303CA501C258B271243F63106A5D17DC4FFB8F96B96FD4562F19D68C70B40DBB0232EA707
811A167C16FADFBE4666DE189C7282910C9BB296F06347D93F5786DC3CC4C25969A1E016BCD
6C7BA9F4439E6CCB0C9DD903D78642BC4D0976B2E4970E54D3CC7A1BF1DA4C849AB86C58C28
3C5EEFDF4693C243398A66BA9866E77DCB5FD8EBE883F31DD93F8BC4D89714E95A551E9A273
BE74CABB3D9639B663E88A404D3ADC64ED6FC5CAE73C4F8F3EE6A687B2A0E8F80BA744C95C8
2A94B7BEC46631C6B38C70D7A2FBF5C7580665390060A5C76324B6690E8298474933AFE4C87
6BBB4206B35C708B91EDD3FF74A001F32D9644F6854AB13FE137FECF2A70F7B0E3510BBADC5
1432FBF2366F3996B063F9BB6AFF055331353327357F73464EAF6CC2D959A63A85D15410D7A
D251902A3EE347E6268314C633DE54DAA699A6819F53C9E1E7C277488687FB6C570A5C2998D
3C48A42897C08810F93C0107CBF6D604C08FE7D89156AE88BE373EBC683C0878F8AAAD6748C
8D2174596F524E21C68D21DF80DBBDA32B3039F368597542BF296AC2FFAF9F828DDB5466A1C
F363BAD654876DD444F25C6E33D3299C5F967BE36E097993463CC4EBF87837C7ACD7729C38C
C60FCE9FCAE7F21E87206EA73E076F8A31C6DF68FB0EA5A8BB676E50F3A1F2B055FC2480BF8
7DA37A117E6CDE140EE32181C2B34E4F91352FA20D5508C8AF565EFE2A8DBB3F30D22156937
CEDDF0FD30855A015134C633DE54DAA699A6819F53C9E1E7C271CF1BA3987DBEF14DAA04756
555100B45968F15716E9216EBB11F303CA501C2545444859C9E5789D943C5FE69273D7A4DFE
087CF259BEFAAA6E0B1F390E49CC44874A5DDE0A97C3BBE28476016D72DD4BBBBDEF334A4BB
F367BCDBF11B9F26345C5CBDF9C3DA8C12CCA44562E659C14C90B2A6D37F9B7A886CB35ADD9
B487414179566E31D895464E0B132016F0FD51D1B4C81B206E2E65793B4054372AC2DCF39C8
00D2DE5630509791573795416D2FA86E91FF914FB6615F1C732F962985115E64737316C5D6E
E2B3EA34FD340D2CCF1311913FA572FFA5F5749233FBEB02EB75429DD13C2F69B02A3EE347E
6268314C633DE54DAA699AC19C203BDF17C3F024F0DD58BE75E7E0E53AC5CE532AC28D6573E
09946BC76B4F4E5D1F7E33402BF9E1191238C38FE49EF4569F1C15EFA4E46906C056154D542
1A167C16FADFBE46DC19357A66A088A4933742253806F75995316124C6BB0EB54C2312B567D
B7AB2179566E31D895464E0B132016F0FD51D1B4C81B206E2E657DF5EDECAC8F7A4C7514329
D9F1D683F13FB9769032AAC69030D54D707FA8E8E2D6FC5CAE73C4F8F3EE6A687B2A0E8F80B
339D1B57D3603F63E78BDAEA3C946A87428D1F01675942A9360F07849982F724283BC7C35C9
7E1550478A7E37B9D6D9E076F8A31C6DF68F9B27E4A6127725EE511C1F15F0F22FF2F39C3AE
4091618B340F5007ADD00516E5968F15716E9216EF8B45A5FC7E338A186F4CF2AD941D24187
580A44ACC20E55A9CEED962D7BC0F909A822771BCAFF05743201785D71FBBEB76E8103410A4
F9F8B4080C099064D06595060FFF1E37A03D604D4DE6214416F169FD6BBB197C3AEAEA82111
9A3DFCFE1B4C81B206E2E65793B4054372AC2DCF9D225A6A4CF95B3C829E3F1592613365E0D
E948521F33EA3D9CE4E2941FE20541DC814CC4866430C19C5CB0A964ECEC84874A5DDE0A97C
3BD97BEA07404109E46819F53C9E1E7C271CF1BA3987DBEF14DAA04756555100B4169FD6BBB
197C3AE915144F18DBB61A06192B49758EAB53C5E869A574606FF4895316124C6BB0EB5FB06
F456DA5B4CAE9B27E4A6127725EE511C1F15F0F22FF27C8D1BFA6AA1A39C17F1329A3EEEC36
80B5B3DEB3D1A97F8A1B94213203BC353D1CEB4A9D291244931DC6590DB3A9D40420EE4E64E
52967BD6FC5CAE73C4F8F3EE6A687B2A0E8F807B3FABAA4D441AD7127F9C9D629DC309205AE
A54BBD7C5D51A167C16FADFBE46DC19357A66A088A4545301E909C03B5D219AA8F0B4FD0D61
8B4080C099064D06595060FFF1E37A03D604D4DE6214416F5968F15716E9216EC3D36275B38
782F94874A5DDE0A97C3B4CF52F8AA94D0CDD3B862177EDE6E74E8FACD0156E3D63516D8727
DDC98DC3A1F52F722BB9B4FD81EE612672B96067851A167C16FADFBE46DC19357A66A088A49
33742253806F75995316124C6BB0EB53BE4E56C85E9A406E076F8A31C6DF68F9B27E4A61277
25EE511C1F15F0F22FF27C8D1BFA6AA1A39C17F1329A3EEEC36895316124C6BB0EB54FA7F47
A34134BE7C65501EFE387F252CCB4D521C1A8B587E426AC71E2BA7BEBF4E5D1F7E33402BF9E
1191238C38FE49DBC3DA7218690047E9041105D6534CA4AE734D0473E86DF99484F82AAD351
443D399DCA1CF48107FD2CB8263B00FD2184CF3A6603161A852FFAC93A63AE6A151444A4A89
E65392CE1A167C16FADFBE4666DE189C7282910C6819F53C9E1E7C274BFE4DA74E8F2B26885
80AF218C833275112057DBB956A924366C49234A155DFEBA6843283F78DA2E076F8A31C6DF6
8F93A7FBD9BB5FB1D71372FD10BF95341BEED1221DFEAEB8F92ADF9E064B38DF37449970F2B
8BF78C14366C49234A155DF4470BFD602B7C604DF0FD30855A015134C633DE54DAA699A8F5B
59DAE1F1BCCEDC4F4EDE5ACD5A02B9A7427AF51409B06EBEC0BAA31B39277171DFACA82F4C5
66C3D2D12E53FA554358AEC7ECE1F6DC70245CD91FDE90EDDFC7DF7E63E97DA20AB2862F303
43DA96424D5862506644D1A0B7E19186C96B3DFE27120B7A9E594C028E9BAD8D784E2A82FD1
0B453693B9B61D443214FB766D6414FAFAE28E0017FECAE36B4AC2F663E5C640FA369997586
5DAFCDAA071557D053EC2684E1B3A2EC4F88243217B752B1AD90B70D0A4107C3D78BB23779A
6EA88F6EB958EECA392B7FAFEFBC9EB5D90F3A83A0E93B3D1465D7D9AA0DF17131351D84443
723BA8EF3ED78BB23779A6EA88F24B9FC940289215B992595984FF9DB6154665F3D5CD3C242
8C87F3EE57C99EF66BB79EE175F08896D2C7450C734583C991B078F69198424FA20B03F3B51
EA30712BF2786D95FA2B6628529CDA33A771F9280BEEC7FB9788D64DD7D8B01C5E1B9ACA5F1
BD6022006B4C941C8391A46BBC21128FFDCDB3F6A56C91C18446DAD904EA6F6DE36CF58894F
88243217B752B128C87F3EE57C99EF1271DD4228034527B93188CAB2E26DB6BADA6C07C6DE2
A4BED8BC2298D889892822CCB058F89B856EE675B72780E629A9663796B4F79AC15C45A8C26
716D06E4FE252638275A09F1281C6D984D8F88C1F2D5EEE01605A89F1D34E8AA9D6D9AC9ACF
57A1CB9222B84AFAF27945E1F7D75368AE38D69B5DF13153569E6E7F39BBD105AE12DFA431C
2825A214D20A6BB437FD97E06479840F72A82AF11AAB567939EFB334DBB6915544CCDE1C845
DD4887F6F801471014C5252EC3F24DC023EF48BF01A4450E183DC5FD68D8B2CEA4F17A33301
902F3F8F6AA0619A4B268F8618D5B251F2F7A86384A682E14DE423B0B326B37CF0D3274DC4F
393BF1F1C1E22A889E85F0942CDED5CC73099389F05C6F2C4B5E70BDDA4BB24BC6D0228C880
C8E6FEE5DC597A50967A56F2D5EEE01605A89F1D34E8AA9D6D9AC9C75B5F078FC9889246840
9C6E10CDE9488C109E7DAC7E9B8E3B44ED3B8EB9D5E256F108668700A699D127435621671C3
8A31F71E21EE056ACC40E4EB02EB539BC59909E3B126D90800B310432360E998DADFEF6ECCD
C192DBFC9D63ABB2235834B6DA2E9D3366EFFDD5C985FCE32A9195786DC3CC4C25969995C5C
1046289884ED6D737FAE2F3B9B9E37CF8D54B2E57A552E5681ED8F926DF21412728E2A597B1
D846A2D574CCB18379B05DEF1FF0D1A8D88F76A2A70C6655FE08BDFC25793C2EF0F4A349F29
9A7295B8C67D0E6C611A66824468D43BAE0CB24ECA7E01484DA66D18CD8FF4E003F49A5B380
17D7C4489BB88931807158DD089E1A56623C2E44226087056ED513BBE40B445BBDBC5228393
7F7DABC4CEB282E1B79381EDA6CE650B932AEE8213FB80229186E342337B89456C61237C5C3
E427B8BF87CD109E7ED4ED055E61A76948AA3166731CFCBA4ED6FD229CEDD3B85ACCF3E640C
2A500B9A5ADA105E988943C359CD8123D15760581440C18A9868A0FA336297E8CCB29BBB196
EBE861020F8ACBD5BE31EAC797DAEDA7FC4EB29E88F805E3DCB7C213A17030C4D842B776E74
0989925F6944A288ED97E63FD2032F6F85EEAC600246658EE6ECAB66986F73C6574CBB159AB
F6594B650A5DA20710BE1992FD1ADF54D801D0BA2BA05E914A9B1F21990FE6E8F19D3A04CBB
159ABF6594B6CAF546DF76854F8C5BEDDBEFF6880EAC37A6DB71956890ABD7B623AF29D8E4F
7893B20BA87F235EF630924BF88B306A63E9ABB7F5C0EAFA84ED055E61A76948AA5A27686D9
93D9341E1DA80CA4E069B31C5EAA2C7A6EFC5245028AC97BABF6FA1F33468081A6EBF511F26
FBF616D17A742A928492445B16C38E7742AB26EE97B99F983DC2A559DAAFC69C03C1ABA9C47
8371E4AB5C09AA3E2A82D9D402D5E09E8D0312FBBB022CD50937F901C288A07313184D979B8
BE5AE5997DDA87BF31D0F99B09D102C607D4D5642EC4DA2766B525056C00C37D06025A01630
5A046D0012F333A27D7ABD07D1DD9802C22EBC5531A9F10FBFCE2A95492A2840D8DD525A6CB
D7C4DF13EA2E9D108623447A00971C638C25C8BD77EB92C548C0D70AF748D210B5149643435
A1DAF504E7BA6D5D53DD7CC8615EBFD74B37FD013952363F7A55DF65CE2C660AA635C5A037B
9AAF8DB921561B48940DCE8055056C00C37D060252E38E45AC558B7EC0E69ECF89681048F60
24C2BA52B9757998632F6910C375A69960926767A1CCA411947CCEBE986C7E1E1DA80CA4E06
9B35A4E8335954B14EBCBB6D6FDAC6C24BBFC4DB2412927480911A1E2FDFAB5976326827112
E102C2758008EA50B2CE311656A1C4162ECBCA04858D3C7BBC3DC394DFFDF90DB9325032451
86F4A132C1CE1693979C2E6C5541ECD7844FC906BD18693EFB9C0241D4A23C8557CE5D89A23
FA6911CB561AF8BF0080197E97A3F3DD7E5887B313587C61516C325DBE48A7A26F31F4AC496
E6811BF89B125E566F0D1ADBE1A5297CE4B0B8EAAA87B67F8A6CC30B6E61FC58DDCF740C4A7
3223F2650944BB0E810BC31820628D899C3BE3E61A4C4FE5652D1BD1C30305F9161210DB5F6
20A9B0585B879523066824468D43BAE0C0CD969DD0B34FABB08EC366B57922146A28EB59EDD
777E023B31CE4FBD8D6B976E1F918F60EC3C60A17255EB6D399689913BCC58789E1406F9D98
234D36A0E0964DA6095FA31372170E3132B276D16FFE425A90C9DDDA2CB7EBED47509AC1C30
D4B45D25E04B2E167607FFD8981A53E98ABCA085FF317A711322106C728C1C98BA4D82149E8
7EFAA0EDC70F22A3886B8DCADEA2B4C7178E997E7153DF746F594B568906094C23BBF747800
0B4EB118640A9685D79C716126078C703474FF4533CAC9B734630E19A3C93D4E379ED214B64
F46662B0648816A303B700BA856392DF51B15982E3F28414D6E60559683562413F2080B6A2E
2D35359AB96606CA193A3F67A0FFE226BD45D9006A4A61037453A8277502EC915D7B99B456A
B2284E1491C5EAA2C7A6EFC52AEC24B307994EBFF2FB438D4C6B5811E3F8E0C29BFED77D9EB
21DFB7E1F1E7D2AD0477EEF7BBDA5F0F65E35AAA0E7FD457349E9AE23AFDB0DF08B077450E5
58ACD0E57C1C75D58203F9BEC3E95B574148E6713D527BC30C0CA4136739734BF8D306D1D2B
F2624DDFB669FADBBC309A3E1E1DA80CA4E069B39E51F4C11E3FB88040F5A5339A8759778E6
713D527BC30C04302E0BD093E8AA164DA6095FA31372172C64C104930E506A9DC683EC03B1C
A5061C9CCF76A628C2E1879D19FEE9D53EFFD75F514A3372B3F645D414E148F37862236F226
A5CABAEA04A009993691042513DF38A9EF4E7C3E6CB23E8C9A6599735C3C73AAFE9C0BDFA54
E146FD6C0FE09B89672AFC4A8868036DC4F30028DA4C43C91019556108CC3A1F2B055FC2480
B8D4FF2FE2FA0A07DE806586F42FFAB7E590B159A8F8FB7670AE7D9108498127D9C48B96E10
23243394BB64DBCEDA344D180DB8AA7CEFA9CFDD950C7E54C381AF5822F6EA2030B7101377E
A6BD41E9FAAE1B13ACD1784C4330C7864C80DB9225A7EC93561E621400F4CB73D52DFF3DCDA
395CA2168E0479B5042B9475A0699C0AD1555B56BB8ECA16180ED8961EC6B254D994A8367DE
186F265E3485E5B1315649198C296E8B2255163906B6E9E29F68EDBB20879679B3644AEE695
345444F162D933CF989855CBE5AF6C8AED0A088AE3EE568A0ED883C733BEC46631C6B38C70A
6C8C2BA2FDABD5B6015FEFD1E709ED92EEDEFB9FF31383DE21FECAD447181FEEB21DFB7E1F1
E7D29E5835EA3BC791CDDF08B077450E558ACD0E57C1C75D58203F9BEC3E95B574148E6713D
527BC30C0CA4136739734BF8D241C9E7E0A8FA749F8F8F64B0C4921CA229186E342337B8945
6C61237C5C3E42262FDC4F8FC0091999E7F5A1DC040C9D7D72DBFD3F1699C94FC7F765834B4
57B9B21BACF298DA5BAE9D0C53630318F0ACF4EDC1C2ED6FB3B5B9F6F667FF4B81C38AC2FD1
970D1F5E5FD3071AFF4C1D612240534867AF4D2B83129CAA1C9E2C4C35C3C73AAFE9C0BD4A3
F1C4A43CBA0BE6BB3F14025F24A1D318C376DC921131079DF591AF1D75A852FB438D4C6B581
1EF562340B4B477B91AFD6A98096035F9B571BC2194854EED50891DFFE53E6495B245882CDD
D8CE693D604D4DE6214416F567DAB8D6DCD9E9923FAE90A8F3BCC5CADF71AC63C4647C0050F
9262024C0913381EA647526A4E4ADE61B2B9DF5A5273F151A5F79482185F33A38299CE49939
9E22B16A02B14CE346D19BB41CB1680828F2AF45909ADAAD10CF8AB5387223F10997D138C78
51FF56B9FE2A6016317FC6381EA647526A4E4AF0B82DE2F2816CD4E3C9C82461E47506DC4F4
EDE5ACD5A028D4FF2FE2FA0A07DE806586F42FFAB7E590B159A8F8FB7670AE7D9108498127D
9C48B96E1023243394BB64DBCEDA344D180DB8AA7CEFA9CF8A5E89D58EC1773275D82FEDE5C
D64482B0DD001360F59A1BE885E4D59BD21C44A17ED47A26D3AA7571BC2194854EED512CA8D
071D8E5BA5F151A5F79482185F362B3CF5B5D0CCC3E87BEBE8550BDD4BF7E9814380E786A88
C3CF436B5C8EAE66E38D330DD0FB35E52FA18F98E534AE3E862E7B364DF7028880F39957B90
23880E76EA22D602516586F4CF2AD941D241AADC05A4DB8CD0229772571E4D3C144B3B31456
44588AE850BB0FA461A9A28B4CFC38B03712893EFE860EDBAC0B97DFD74AEE5BA8B2E708C56
ADE1C0C895200989925F6944A288ED97E63FD2032F6F854151F865D57F9EBB70893F0D51E01
7E982EDFC230C7037D25777947CC03D8F41646F9B1A86B3E7269CC15B13206E51A8295CAD4B
D856684C451CC9451B24CB0321E193BA58F12AB24AD085D045D48DAFBA2086FD22D17E53D1A
2A8CB6DD9BAEE4AD085D045D48DAFEB186E3F9E24A88B33A4F37AD86AB51F7E064B1403EC63
AFAB02BD5425EB567624478344FFE055FF7B177C146A6D96EEAD5FFDA116C3BED04AD085D04
5D48DAFDE3262BEE8FD25518D0312FBBB022CD50937F901C288A07369ABB5C4277237B9634D
52D0371F0EFEEAD3AE7C02C7E243377B3C79670A86021A7AC872C20A7D69BC1EF33FE171F84
8214E1E8B8F137F672A12B51E3F49C45E27C1D839409CAA0C0CAE27ECA315329E355BAE61E2
1A74EB3348E72BCDF2D2950D9CE71F4D25633A65501CA4BD0023E12F5C9BEB2FA4C8D7961F0
64D39361856
-----END ENCRYPTED SCRIPT-----

// Technical procedure, which removes from mask clusters with area less than minarea. 
// Can be used if after module mask2stencil() there are more thaan 32000 objects and small objects should be discraded"
// Removes objects with area few pixels and 
proc TooManyObjects_RemovesSmall(mask mask inout, int minarea in) [hidden] "Technical procedure, which removes from mask clusters with area less than minarea. Can be used if after module mask2stencil() there are more thaan 32000 objects and small objects should be discraded"
{
	TooManyObjects_ByHalf_RemovesSmall(mask, minarea=minarea)		
	While(TooMany)
		erosion(-1, image=mask.image)
		TooManyObjects_ByHalf_RemovesSmall(image, minarea=minarea)
	end()	
}

proc Bright_Mask(
	image signal in "Input image with intensity information.", 
	double Radius=6.0 in "Radius of a ring, where surrounding reference intensity is measured. Shorter values result with more details and higher noise level and vice versa.", 
	mask M_bright out "Output mask of points, which are brighter than surrounding. Surrounding reference intensity is measured on ring around each pixel.",
	image result out "Output image, the difference between the input image and the surrounding reference intensity. All image pixels, which are brighter than the surrounding have positive pixel values and all the other pixels are equal to zero."
	) image filters, object recognition, mask operations
"Outputs a mask of points, which are brighter than surrounding. The surrounding reference intensity is measured on the ring around each point. The mask could be used for splitting the clump neighbor objects and for border detection. Radius of the surrounding ring is given with the input Radius. Smaller rings bring out more details. Drawback is that noise level is also higher. In case of the larger reference rings the spatial noise is suppressed and some details are lost. See also Dark_Mask()."
{
	convolutionmask("ribbon", radius+1.0, radius)
	convolution(image=signal)
	minus(signal, image, neg_method="zero")
	mask(1, image=result, userealvalues=no)
	set(M_bright=mask)
}


proc Dark_Mask(
	image signal in "Input image with intensity information.", 
	double Radius=6.0 in "Radius of a ring, where surrounding reference intensity is measured. Shorter values result with more details and higher noise level and vice versa.", 
	mask M_Dark out "Output mask of points, which are darker than surrounding. Surrounding reference intensity is measured on ring around each pixel.", 
	image result out "Output image, the difference between the surrounding reference intensity and the input image. All image pixels, which are darker than the surrounding have positive pixel values and all the other pixels are equal to zero."
	) image filters, object recognition, mask operations
"Outputs a mask of points, which are darker than surrounding. The surrounding reference intensity is measured on the ring around each point. The mask could be used for splitting the clump neighbor objects and for border detection. Radius of the surrounding ring is given with the input Radius. Smaller rings bring out more details. Drawback is that noise level is also higher. In case of the larger reference rings the spatial noise is suppressed and some details are lost. See also Bright_Mask()."
{
	convolutionmask("ribbon", radius+1.0, radius)
	convolution(image=signal)
	minus(image, signal, neg_method="zero")
	mask(1, image=result, userealvalues=no)
	set(M_Dark=mask)
}

// ------------------------------------------------------------------------
//  Nuclei detection procedure from detection_B-script
//  Nuclei detection inner-technical procedure. Detects nuclei on the input image. 
//  Called from nuclei_detection_B()
proc nuclei_detection_B_inner(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0. Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
int MinimumNuclearArea=70 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
double NuclearSplittingAdjustment=7.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
//OUTPUT
objectlist nuclei out "Output object list with detected nuclei.",
objectlist InitialMask out "object list after the initial threshoding.",
mask DarkerMask out "Mask of points, which are darker than the surrounding. Mask has better resolution and the higher noise level with the smaller values of NuclearSplittingAdjustment and vice-versa the lower resolution and lower noise level with the larger values of the parameter.",
vector ErrorInfo out "A container with a possible Error Message. If no errors occur, the ErrorInfo.ErrorCode will be zero."
)object recognition [hidden] "Nuclei detection inner-technical procedure. Detects nuclei on the input image."
{
-----BEGIN ENCRYPTED SCRIPT-----
472FB3EB7CCE11A1857035135AECC8ADB6244A68D5BA0E786DEF081893175B6D3B7844CFA39
B83AE165B7BAB59F7D8F1E139BC7E20ABB621318292E7DB1DDE063625714815FC5882C7A067
2E42ACF2E1E91F3A17D830A83C594FEE08965C8DF14B609958F28541E7070E4E654A066F764
CA6FBD97236EC9FA14120E49996A189:9843EF986F6E0D6EE8BE2936B8FDC00AF8F1BA173AA
2476DA3DF9BE38614D26271C152C29B4DFDC35B16A41EF404032F27636D8F3EC98C96AD905D
9081CF71EBA19DB597E4ADF00475DF3EF3F670FA75F82FC2FB143F36943216B3CF2CBC6E9AB
88C14218DE1A260240EDC85CB2EAA51FADBFE9A5D3B7021CE7D4DDE474D9F77/E07CA5C22CA
9979A34C9EC2CF0CA02088DBECE2C5778C6942A6B200F0C25248A843A7143921277B6B2146C
FB966871DFAB6BCD1A7DE79A268AA6AC3357211FCBF517B003209B7CD346270FCBCA6FE6B34
B12530D2BDC6CC940932EE67306551E81857A073623219C7DD29B45967E8EEB262AF0685811
B9E53EC5B63F85C1EC449825140F27762C834FF80B3EA97EA101F15F556E69E96EB6FA0D998
943D24600609F63219BE1110892002AAA2ECDD06ACC14240375656DFA17F99B5F02890A7244
FEB7F739E6B64A3EC5B63F85C1EC443F7EA05D12A4FF8106CD9547D8C3029E50FB2622A77DB
E3E949CF5DAB9A73477E80FDE20041398ADAA671AA41116EDA10D3E9397831357E208B33551
1C046603F5FEA0332D5128FC077C5B640DB5C1C86769166CA535DD99A07AB1CB891FE50CE55
84397F4BAE46A1C369211B656A6199909446854857BEE4C053099D443B232234B43A36C3374
A7223D48F7FB284D8E32A0661157469995B86D3BC2583D662C750ABE9808C4069A81C6E990D
B61A837C35B1EAA32F4CBEE79682769D42D358452DBC8C87841549AFC2A7CC78916084865E1
1D28E14C72CD83B7DC51E7B9EBBAB149AC511909564C955B2489576CD7BACC14240375656DF
AFE9EBDAF266801C2FF4E32D5426C39D8D9E832750A5EFED17DA69562FE235CD678E323551F
77237AEAC6BEEC26AB5D34964A303DB29578D59AA7F6F5E843B6CC19AAE417E527A53E7A482
4AA94FEF910552B16AC9914ED259088CF5E9C715DDA742CEC5DA2749DC17EFBA3E07DA7109A
395F269C68FD3EB590B60049C73B561A2B200976B8DDC2A95B92DDB8EC2A1D1CE1A52018F1F
ADF2443C1BE9A78F9C6654DC8CCE63729C4AFB8FDC5A06D86EC80A7AE3E9A314470CF34B94F
C1463E4640F00D1B2566348933F38E338EB5AA307FE8D7AB869B3007F23EC5B63F85C1EC44A
4BEE299F09671342EC31EA44CBBCB2904030A98841CE47AC80EC6F0E147CAFE82513111C7AC
9EB74C82E5390E613706E50AF261DC8C5B5353B70C96AA9C97B2A9B8C27054DE521790BE102
05E47788E8DABD8CDC08E86402916CD98188259B21ED2EF16036CDCC6CBD4D5E91DB7EA7463
BC48106EABC06F7062B032C48FA383E5193FCEAF9E1294E9770BC0F5E24E5D4338C086CB28D
3E84D255F527F751AF3D9E832750A5EFED17DA69562FE235CD6F5CBB09E1C29A3ACC80EC6F0
E147CAFE0C8BC626C9D8DAAAA5AE9F0B414CF63AACAB7410F7C367555E26123A4986A31229A
E52E4B7DEA434B06099C916FB372B1E5E9F73AE964E42B13370DD34BB7F6744D6A29F5FCF93
5898548B441250774FA7F5A589CBE0DF297432F63BC6DC18CB0B17A62B4C742C71CCD0D82B0
A5594CBC34B0B8B927412671F97FC1BFC176695C21C41FBAC1191C5734FE159D63DEE98FA8E
9A505CF01E27944693ECDDDD1CBABE8CED7F0A2AF0C0525EACA2B039FECE44496A3A079261B
DACAB7410F7C367555E26123A4986A312361611B448B020818D577881B61AD461FFB3732C38
F05113CBADAC5B6D173EC7DBA74F59947E1B5557E4711E0CBDA2C6131546A865430814AECA6
166FC8FBD96816E4BA806BAC23A41B66E05BECC59445463A70711A42B062D74ED39E51168C2
E1FE78C6BD33AF9092FB147243BFF10BC160A1F1DC28CAF426A692F71F808A59CAEEB466A49
02F584ECBAEC7F2CB26A0535D6273999C87B723C3EDC4076652C45A8D688FB0B953FB396C04
6046F584CB7DA69562FE235CD670FE7899C70F98109512B1596B660ED7486541BEC7FFCC2F0
AA8DF566684FFAC595F283C088ACCF5BFE03EB7C40D5EE2C8370D8DB2C683AE720B912B0985
B177BAB55027E77277A0B9E6A0C98A604B36EB350C9056745D837E68182D05823FED7A4824A
A94FEF9109350FEBE11C3140BC68C83E0815A43C6B0209F23001A1448CC14240375656DFA18
2606798351C0806F6D481490CE33DD0BF3918CDBBA1FBB53B70C96AA9C97B21189BF6126ADF
E5FB3E3C8148C22150150D3FCB0FDADB2A37432F63BC6DC18CBDD7C755ACD94F731423C3F67
94F60836A10BD146CDC290B9A829F6A85DAE8FDBF1A59297F9118A0392DA6FE64C40C1C51EC
D3D77585F5E9ED4F7748131B5B604339E4D36178C0BA9257D8F769A1F39FCD3A2CC44FE2248
C4F8F004BF7420CABE195356C42ECC5DBAD904B9B1B40A82AA861B308806D18F9916AAE2518
42EC9F2DAEEB8D7695E78E6FB40D5A566B8B4328595EFF9FBD0D395B8C2027BD48CB6F07C15
F9DB8716A02E782C86DC256562A5BEA589144F87C77303005A6FC217CD80CBA5C39FC3E421A
F0EA68063D5B137B17DF46C366EC9451D0DA498E0DFD3D143FC11CB5A7576EDF8F472B33EFE
780FBBC21C41FBAC1191C5734FE159D63DEE98E344A75134CF9A3C4C4425A8BCDD35FAB6F8B
DD29BF84678A1A41D00D98AE8FBD71B480CF91287BC7031E69326876EBFACE39F84E9F5FF5C
DF02093B6A915ACB332E968DF3F983434AF2C6F178296DC8A355164242AA2B04FFF9AA3E8D5
51B39FDCB5B2C02FF1EB173F801BF8092373DC884B0B5724D639BB902C57E498EA956E4C7B4
B5431C6AC93E601F9910B741EC9591BE186A4FED0074329FCD8E1CFFE458D369D6B6180502C
C2F7656968C00C71FACD9A8AB364F85BCA73750995A8B64AD21E91C064AE264C2CC781AA43F
AD098A8F3B7E9F7A39E09354328BE263ED19FBD5352B616174F495755CD373A077100B14ED2
4E8EF3F76AD824C1BDE3F0611D678627454C9C0AE84F98F06B1A9E8A20695A773416587C128
D362A70F385D29325F023FE454694598914A9FD6F8BE99DCCA3B05CF8328136092BC1EF7566
01521A6CC97C2CEE5652C64106E9DB800A63D7956BEDAD96792A54BEBD5F67510B28FF78A6F
B587ABD0887E38B37CF70C08ABDCF13AECF0736833038DE8C2B3E103D26B2355F0267A3F00B
13C288E76760783CCA233B02A5BBB1539226446CE4FAC3B856CF869EB290D6F11DFAFD8356C
D8CAAF8723563F72DE871745FC622310AD4F2304284A900408CB5B4BE5C3BED8A71869DE6A5
CE122886AB1FE7338866478E10568F19902E180C8A757B1AE0C091C8C8D67878DBADC757A6C
59DFDE569522116F6EBCE1D9CC55FE79109A7123EF86C7E52942940F58E1CE3DC6DA17849FA
F90B60049C73B561A2B200976B8DDC2A922740330FC50BCBDF84B8F7C8D4EE83DF22D7932BB
E9D70A0B367B19B2B91BF96092BC1EF756601521A6CC97C2CEE565CF114A76C7DF6D33E59E8
DAA6E2F5E01E60FF19E9DD42187317B54FFDF7A8C5B2C64106E9DB800A6920444096C30F6ED
8D29A33A7613659AC6CF107F83E1CCA1E1741CA3A0820D5DCB5B4BE5C3BED8A7B19C582CF86
4057B63E9561706E246061B90B1A75EBF9BCA21B993E62BF7A09D8CF8303BECD637176D8720
E9A14FBB79FE2FC0D9F8B6D4625332FF443EB58F89C73EB2F9422DBA6016448C3E9B392DFF0
B1A9E70DFF029A929C574DA55D1DFB1CB1193C06A9B8C152299326CBB5D8A00B45C5CBD5C1E
32BFAA8AEC49696EFFA5BA6A74E9DC31574C355C899BC22A38602A2CF454BBD358FA7F3550F
AAA47E2AE7D5FAC9186ABFB3C4AD972E664450B415B58408341E2B88FA2CAD777D7D710CF73
27A21F91FAAFD479B5E4A9129362C741B66E05BECC59445463A70711A42B065624153D973B6
B96B980FFB89922C2B641B66E05BECC59445463A70711A42B06498B3497A4DDE25D5B584083
41E2B88F048313DBE20F7794BE263625177518ED41F7659E2C0F1EC921C4F21B037001F38BC
451B0B9A815E982FC019147B201FBCA32E53ABA3D39DBBD5D3E734C1E351AFFB8E0CAECE382
A7EE4DD6698517281F947874312276BD184A206EB2490594629BB9223C9D93A1958BCF6F05D
C7948C4262353EDD3F4356A0971C8B0F5A747144E922AF822F35981AC14205451B43D8F68AC
7C6C1DF1EA7F04C73018C132A928CFF2CEA2654623CD286BE0AB8A561ED5E67351DE81B84E1
7C8076A64859ADFEAF87441A9D977D1CB1F4A836E91AE15F2E986397DEB058BF97E9B469581
C9D9F89FB66AAD1315DA84A571E7C3365BDD9F4D18E400E95EB20849B407E1AF723B0258234
D8EA3EDB146A0A0BBAE8198148F8677C3896376C626C602420009D20E89350596869E757A75
6074CAFF5BE4507FC6A9EFA17A7939044B8F1C16754C8975FA4EF9C4681ACFB8DD26F0A62DE
4F8EDAB473056575DEDF2E9A10380244EFAF732A4BCEF63893483A98F4223C678AB4A6AD05D
2FB35D599D939EEDFBD2706DFBF00D1B2566348933F38E338EB5AA307FBA68E247792EA7585
6CBE94FCD4487B58C004438CC4154136BC854E6DFB7FED1F2514FC0F224E078F417981D108F
8AD74C770352B0CB4B4D771552ADE31C02DDDE177244E1244DAB5A8D688FB0B953FB396C046
046F584CB7DA69562FE235CD6D35F645634C451ACAB473056575DEDF2E9A10380244EFAF732
A4BCEF63893483A98F4223C678AB4AA368195F05FEE44DA2E8BCD56D349637824E348FF4BB9
9383A2E27447445712C0B5CBE5283AA4508F87BC4611DC4ADC938F4E756913582B809F203E3
B7E0C3A91B0B04E42E60241D199DDC30ADCCEF9EE0AF5923D6122CB8C512929F403AC7BBC6D
E295FBFFAE0C3D1F230B040FC41BF60742796D1B4225A6B69E154EC16FC4D4F38D83B133D8C
D1211B6FADCF50F6264A2EC33DEB0DCBFAC7EBD2FB7067D770D1B40FF5AD00096F6D0C9ABF6
3F807E8324D659A242AE4552FB83DF5E98233CDB3930038C4588251E9770BC0F5E24E5DFA8E
9A505CF01E2700EA505B7D3B9A4D5DE05CA60B2DD9BC41C47028C3B4C80B9A66E32E24EDEA8
C2EA97C4795605D5466A63757719CE3C31C0E556E0B1EABAF95AC434790AEED0EBBD260DAD3
3202957B245EF152AF043E696E5934954059DDA875D5A9D5407BE27DF16D4F08D383ED13970
B7045402FC72E14A3D3BF0B6955B03C2CE8C17D1F85988D0F3FB3ADB326D71B480CF91287BC
2AFF996DF944941F2160E64A5E0E06FC71C3DACFFC782F48D8CC33F14CEB7A5F684DE975A5B
664AC32CAF4F132609C8D2EBF3E552B4D4F964E52ACFEFE09C7605C4E8E341A457375317B54
FFDF7A8C5B58E01C2E6D3089BB03F4D6296AB9037A5B6D1FDEF6129CC8AEAFE730EC2DE2E37
322FF441CDD620954CAA5438D91E7299142FE9382FFB16C79349E977CF6356E604F75B09DD2
2DEB72095CC4BF2DB5D8F1A5544FEFCF04BC9B05BF4E6071045907107CE5C5B715ECF987730
CA157D46388D904B27E9626F8CB8143ECBF345B5C27A5CC0C73093D24C393B3D67B31EAE6D6
3BC6794E8432C7785363448BDF845B56C493EF1E9B4F8BEA80420314F2EFE38A4075F841F44
6C7E94DB82081CA899743E6BBFD8853791C9682D03EFE85BC935365361B8BAB398F99122188
F1F1C7958C0D764937DBC94F8DC15F344C7E4BF75F6A002450AFE92D633CEE444C97969BEA9
D2261541DC9C079682769D42D358452DBC8C87841549A572B7BF263AE2D1491227E687CA69F
7E8CEFF5A58EED8C1A75220DA5C12DDC469CEDF73EE11A8BB422995AB4ACFD4BB0FEBDF771A
BBE7CC46C8728F1DC25D694591DE270CA418170A5F646945ECAAD52BB79010CA946B26E999E
36B8A8B3F3D5319D3304B733FE7A05D0AFC9CC2DC0B9CC1942F11633B6832FC4162CE0885F0
2DA1E0A216BC5C5396E29534C8371872C3177A1F30D781061B1E777435D4AF0071762FF4829
C45AC03E28D49C694C9F7D19BE33EA5E8BBA2C753D4FECB43B914198B88C4BCB9E3AA0DDA70
4155B39DFCDB6D668BDA3BC7CA966C2A0BC528CEF9B1381D1A5E75135084A7C7DC6A84B42ED
86CA21DDC01F6C7C8E93750B816F54AB8BF03BAD14292F121F3F6CE3E9525B9F1F59A4B34E6
5E8A1A3D3446F011FE91ED793864DC23BDE0D3CE6995392984E38CD931A839B4ED697E28666
DB8887E405A6E36BC999F29E7BB3646CC480F3CE28F968FECA40C4B0F0CA8AF21AEB505F3DF
903FBDFDF21979D5C9A1E995E9997E7AFECEDBADF4231CDDBC826F37B67F4A26AF165D6A356
B1CBB4FFD54B7BD35D864A2D8DB4012024F98C2EB53E92C139702ED3E572B02E69FBFF45FC2
92F1A25011ABA169756D658A81FC6D0D230F2DAD149D0E18A0903B58E5C512B07699214B799
B4E4572DA706C52C30F1A9D5DA1516E531B7D3C6E614AB6C13244BDEE877E42D87AF86427C4
26D59467BCE0173EA413E355FE0EBFDF01F0084E9C505938E9E56E2DABFAFBC54DBA7F5A589
CBE0DF2909604C440A141E11633D694EA197AE6D0C09C1E6112BD61A33FFD4AE65F1B8F1FED
3BA9FFD1B61508B7C2663D12B8F87FA826F231F5C135F95AC434790AEED0E42794FB676029F
4A7003C811B62D107ABA9530776C22C3095435419A7B2C30725A59AAD208E91E7C5004E7480
08071A583BFA307F7E6250F2FDA1BDD855932137527F550E8A0B042412E672AD61987460363
209CF7868B94637C136B3A17F122D77DF87F3AA4BEB929CC44DEBB63344382D4FB34E0FFD7C
819F43EE562EF445A570ACCB9171365353D857D4FD82CC20BADDF0795EFB72925FF42814C5C
294F3160F3F0AC1D6D839E42794FB676029F4AC57A63DA8E2BC5B8263D78DF11490472A4119
C75808FAE4A1F5C95904D384C21C6B47689B7A999E3887E38B37CF70C089C79B57B37F811C4
D88E52EF501B0DC865BF2E2A6924B79F3F1D9E514129283A0E1EB9F227F39A2CF05DE69BA84
1D99E23D2279F65598474D39CE2B8E38EA1BE1E35C920AF64AC876A1D6781949CB79C818B61
759D9C0EFD92796F15F87CA91E61BB08C37D3C5C9A4E16B9162612CC8BDA789E3907D67AA1B
25AE4EB998F7E41715F7659E6A0AEF05D5F3B50A99FA53F4CCA32EE209E8734F0FCBCD8C83D
B166D47245D92C9106955806A730885565030730C5553E23F8FE6772C77B1AADA59694DCCBC
0465F78AED34F14E2F539289E8C2EB53E92C139704ED83E18A7A3D55D3994CCEE8C3D1C5E75
3B748EE5F0FDB6B8012056303AAB8C0DFF9DDB88FD241539E833AE112911EC0E07B9E14EC67
D9CE0D69D9D6BEC749BCE60CD8B7517E1C61E903DE301D407350E9182161C2867E144C5A909
9D9AE2E4DBAA124D028F9095BF0BDA0866A4DD8D1FD688AD35753FE3522517F555E576E252C
64A8592B774FE08839B3EF0750DEF60961B66CF189CB88C2EB53E92C13970522517F555E576
E2D7D2CFA4CD5DF3EB6FD67F9C613640678CEFF5A58EED8C1A8CEFF5A58EED8C1A8CEFF5A58
EED8C1A2CCCB660D284F2EE04A70B6F869AD3D8B93496E10A0C3CD695AC434790AEED0EAE68
9AB29456E7BFC40A51D9E8F769243B410B7D4E322A8130752C4A2EB296442EDE4868B0B39FA
66DCDC63EBB8528ADF5B79911978A37D75FF20D66BEEA33CF8CEFF5A58EED8C1A2E890B902A
0F3C11C1CC4AAE4B943C601BD79BD7D2345A98F7207B2755E94FEC996FCEE587460E6A77854
9B4B7FBAF83F5CA527E357E9B6A791B1BEF002A2BDDA5941BE59E8C579116F6096EDAB5655A
90773DAFF7F086FCDBAA124D028F9095A0B0AAF4BDA982DD4A163C69280A599515B97E1399E
741259CEDF73EE11A8BB4B8D94C7260621257CB5D84AAB04895A8D26D457AA3585A221E44EB
9537016419AB1A0705F05B793C1397E809F63CB439EF57510F605083FB451D9CA628F25DFE5
997B79DB81D61268BDDA3EDD6268A2CC4CF66D9B9E21AA2CA327F4E1D52BDD1D73A5DE0E786
F2CD70864031785D5679C97C2DE344AB47F24B7A39291B7252DE409D349838FB85ABF8B334A
E0F3DBC469C6A81436B3D6961C407D0E60EB2844A500BBC65CD7D95390ABBB65D10965A735E
A4A1480DE622F87BA5F348993EE8AA7EDB30F86CDA2B5FD7B6DB295B3F7721CAEEA71DB27E1
66B69FE389EE95D7973B6FEA14F6F4048B687C362E5592DF94709F94275E5938F9D2B200976
B8DDC2A90A4737E4EAF090E5E717194D1A1E7D2AC6F2D2B29C9A89C33EF293C53A644586DF8
EE857B6C50D7C204D6EC44EBE18F217BC8E7783C7B6F5C27730E5E1285D1D8B3D891BE518EA
A94C90537130657EB52F578C8E6D1CAC5BA34AEF660800D891598F46D780069E4AAD5774825
8C235D3F318223DF539F53299B4E4572DA706C5A2CECD23171E4FAE6A8A6710E493F059DB40
D163006439CE0398AB5F3384698F6B78E69FC9F7071BDA789E3907D67AA1AD23A12378EB8EC
DF644506AD01143B8C603CA2968D49B2BB0CD0A6493B3B4BA36A831E6C9227786ED20109535
CD0CA4B8DBA042BDD7C299FF5F4A498EA37E7F7742880F9E4B84722DAFCB5560EF7735A7C30
64041A78F31AD98152138A3FD32BE35ECBF2935A75EFFF966D93F7876BCCF4DEC18A41F4F4C
7F9961671D2087DC284D0494382BA95BB4A293CBB025CCD1C12CA890E01EAF1E60B5DA40470
6487B3177E3C50BF0F08461AF391A47DF89E61E0CE07D633609C873897BEF67F46A05CACDA9
BE63CF1CB072CF13B53DE71AB200A36BBBAE3E57DB3B7BBB1F391ED36E8CAE0CE5791BF4274
E14134EE769B6A7F62882C4717D3925E4BB4A7549DCCC226EAFC1BDBDA8381D4A4DA31E9098
06B283DCD5C799CC7F57EBF8AB7D1A3528E3F2514FC0F224E0786487277A7D4C886C00B6C37
DFE94EFA5C9515A02DBB44D1BBA22D151ACFFDE31301CDB46F79968EB7E9FE9C658BFA92014
7CF240EBE0F07AF968FECA40C4B0F087E9FCAAAA999130D79369C7525CD4F67BAD650BE9D73
1180FFF4D62280EC49C47F22E9B1D2DE6428A1AA4E86A63D119C4CF66D9B9E21AA2FCFA9B85
A5FA1B8EA29A60A4CF59DD469F6A6A7E7F2FD64BF62882C4717D39252511D96814D07379742
3B2CE168BC10824F80A0B95FBA5C9F39132C5D340774A22A7A4EB6256BBFB63AF186C66927B
75C263C37B560701F160B5DA404706487BE5857AA9F66334D28C8D67878DBADC757F40D1414
EBAF2E21BF9B0DC0E6B8EF5C53C3FCB5552391AA0CE37D515D096C4A9964B4107D1A0E4C31E
65E515CAFFDFCB7A86EB24FD5CC5998447AC89C4D69D6D1E8F82FA2E8DAF8F57618A7160278
1344E475E5F30FD5A0F0B36378007C5DA752820124AD30CB1E890B59ACC431E6ECD2E2070C3
DB8B982C64106E9DB800A6D625D946F3DC2FD409A2CE3FD20629DCFB8F59DD22966DC11343B
39A6C198AC43AEE9B9C624E7E9E73FE8A3554D3FD7DC8E46E9875DF342A84ADAAB966017963
CCC472A0C7F346F285C22620DE0492BFE9A0E8A598F1FD3685FCEC53111AFC3FCAEDD03BF38
21D33E5DD0F981155687AD6D2AF3BFA5ADF9F86BAA15AFE2B65D0C6F2D2B29C9A89C3D7E9AE
2DFBF3A822646BC9ADC3EA194E096D86CF61A2EFC0423AE1B1C5E6C75E1FA4E8C3F03884E71
5F35C34918DDF4825F04370F0A763009EE8DBB16BE1831078B2B2DCB5F9A33EEA281427153F
F8986664B06640D551C85A245AC07DE4FFA8AECA6166FC8FBD96992A21FBBA1CF32B3D0EE9E
8E91529CD957EE104027F8497A7F5A589CBE0DF295E3B49956F0094781BE1E7D1D375AA8D8F
57618A71602781F2514FC0F224E0786487277A7D4C886C00B6C37DFE94EFA53D8DC6A0970F2
5D3DC636641303B16F74533E57BD14BF778C76256D5AB0B9B266EAB4A164415CA524DB944D8
313369D9EBC1E3E393996448273DD49844737EEF98548B441250774FA7F5A589CBE0DF29743
2F63BC6DC18CB6DA1B675004F93973508416C62D3DC013964112E9100ED89DDCB933D4D81EB
6811D8C5F7D9BFF9268B5B572188BDFE3FAD741A7F957BE758C76256D5AB0B9B266EAB4A164
415CA52906910D5A83D95C622AE86808D214BB9317B54FFDF7A8C5B6AC7C98F0493E2128E29
4FE8EF4F1BE082BF59909A0603B98233D1FF43B0BC2C6E29534C8371872C1F5C95904D384C2
10EAC966E67A578F8752820124AD30CB14D060F19C213222C6D0C9ABF63F807E8324D659A24
2AE4553D54C86AD5665CEC85696E5AFCE6ED290242F5168516D7D012BB87D8BC6EF0386C78A
55A61B7B9A6A06B1D1667D9A986AE58AFE32320244FD2F165215A6F16FD4B43F1EEFA45C2F5
209F9BEDF5013AD3B219105FA5E231AD8C6C77B7BCE28551F3C75836D84482E8107E69334AE
262BCD1B8860728F4BCAC
-----END ENCRYPTED SCRIPT-----
}// End of nuclei_detection_B_inner()


// ------------------------------------------------------------------------
proc nuclei_detection_B(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
//OUTPUT
objectlist Nuclei out "Output object list with detected nuclei"
) object recognition, nuclei detection "Nuclei detection procedure. Detects nuclei on the input image."
{

	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")
	
	nuclei_detection_B_inner(reference, ThresholdAdjustment, MinimumNuclearArea, IndividualThresholdAdjustment, NuclearSplittingAdjustment) 
	
	ErrorReceiverForNucleiDetectionLibrary_v1()

	if(ShowIllustrations)
		imageview(item=InitialMask.border.mask, label="InitialMask", title="Mask after the initial thresholding. Adjust par. \"Threshold Adjustment\"", image=reference, gamma=2.6)
	end() 
		
	// Removes breaking lines between the stuck nuclei, 
	// Input parameter DistanceRatioLimit is fixed 
	controlbreakinglines_v12(nuclei, 0.8) 
	// Adds to object list a contrast attribute
	object_contrast_general(cells_out, reference, InitialMask=InitialMask.body.mask) 
	
	// Creates the illustration "LowContrastObjects"
	if(ShowIllustrations) 
		set(CL_Temp=objects)
		objectfilter(contrast<=MinimumNuclearContrast)
		imageview(item=objects.border, label="LowContrastObjects", title="Discarded low contrast objects. Adjust par. \"Minimum Nuclear Contrast\"", image=reference, gamma=2.6)
		set(objects=CL_Temp)
	end()
	objectfilter(contrast>MinimumNuclearContrast)

	if(ShowIllustrations)
		imageview(item=objects.border, label="Nuclei", title="Detected nuclei. Adjust par. \"Individual Threshold Adjustment\"", image=reference, gamma=2.6)
	end()
	calcarea()
	calcintensity(image=reference)
	set(nuclei=objects)
}// End of nuclei_detection_B()

// ------------------------------------------------------------------------
//  Nuclei detection procedure from detection_E-script.
//  Procedure object_detection_with_mask_brighter() is called from nuclei_detection_F_inner().
proc object_detection_with_mask_brighter(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
double NuclearSplittingAdjustment=9.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
//OUTPUT
objectlist objects out "Output object list with detected nuclei.",
objectlist InitialMask out "object list after the initial threshoding." ,
mask BrighterMask out "Mask of points, which are brighter than the surrounding. Mask has better resolution and the higher noise level with the smaller values of NuclearSplittingAdjustment and vice-versa the lower resolution and lower noise level with the larger values of the parameter."
)[hidden]
{
-----BEGIN ENCRYPTED SCRIPT-----
71C9B9D7CD94D95DDAD605C9FD627CBB35BA2ED2E5F7A5012D0BD8978CA41AA4D865B7717CA
07222320C88A26B1B7E2664B4BBA53CDA9B3F060ADDA3A2B009429768A626FC20C53FB058C1
D27F4A6A8877751BC0E0FFCBB367F5205BF723276EC210F371CD792F0F927BBD5EC8056CD89
33AC726215DA9AADFCCE0318F421006:6AE238921F7681904BB0E2F831FC2D5B9981204D719
D95F91BECC8DC544A1B1BB795EAEE9E0EE5C9E4172321463B9BABE2E8674A4A1F0D89F91B64
3B255D17CF8E3F89A63CB639344C73DC49226B212BCEEB2514CFD08FA9BBD97383A000C5D4F
8C8E5037E2E2C4E57DC9F3F6FE0C53C6DCA2870D16DE5DC56EB1E4CD1DC3A38/046851EDCE3
D46D5B505A9522988F41134D2B554019711810EAB5B7B2617AF06231E7DB842AA5932E331F8
CF77A4598AC6356FB46F9159E6B26552B23A2E29D2DE149C21BB1DD3CDDF353C725E0C6D7B2
3FCCB8119C0013AAE94ABF388C2F8A9E5A2AAAD41C53B607889FDA6AA6C5C6C48D0A90D8011
9959A4F8E094F3065461C48224CC6663C324B1C9BB0AA728ED129683EF8DDC11590E219E85C
24FCBC99697994B3A309831E38937B50619A635AA65A1C4D12A4BDE743FBCF8279058AE8A4A
86D866C2B49AE6744199F0A46755E91B3BAEBBF37235753FCAF05E213E6C55E4FBE8BD5500C
4EE4E5805F91EC964BD3D14BD8F93E638014F9A1DF183CA77467EDF45DCC9813A1C78118ECE
454D0C922B7EB5C6DDAA0E533FC751CC39D0AE86B278FAA5A6EB702AB6DF5878BC01475CFE4
5BD0090EF5128716E7AE2ABE5ADC6BA93419169A9D03E6883086113A2ECDE108C0C3C50DCA5
3D3F08071ECA4FC833E8255D99951AD6A06502FED7096B51E7618F50F8A4EB1D68F221F98DB
B0BD447D3C0EE059DD5BB308E00DE01BC7648D6C1C7A6F0A94328CB24181CDFE5E957EA42C1
C931CD7D9B46D3D6CBE7DF3B5CFE77D6334BD51D483A5D9421CFE0A4A0EE59DDE36FD561395
0BF82542B70DADC936D2C0B78C26AB0EA47ED2BA091295D291F765684875C88A75B729D85CD
A7B241243690D60B9F36EADD8A81D47E6B779E0E3A4A0C3D974B2DF6BCFCE0DB8B44B6B89D9
16ED7B5B69798B65829A03844B50F6616E9D3E65D6F63CE2FAD558ABC3768EDD4D86CD9C8EB
5FE31B29D3286DCC0BCF3C94AAED9D08772ABBEE70DAB0D521125D39C8EAC9A95FE31B29D32
86DCC0BCF3C94AAED9D088BB15521D4B802691C23B1BCD99F678A5174DB2288FCFBC03FBCF8
279058AE8ADC8E7D5FF537F015DFB0AB341A84AAED821134E4F277AEDCE4D40F8271BDE96D7
E194BF4EFE0C11357EA8302607E0D81911964457D0D8080E55ACB6E58448FF012C646DA8902
BA9A610A5740F2A0EB9C4E9EA7BB6C15EB5CB852E8F336EF032914906BB99E781803370A0F2
BDD8F9B62E04D1E16D8D13BF744B4C0446CA006411D3AD0BEBD9743DF0C72A03AE5F966DCD3
B1A2160688E29346D7F51610D57741DC978ABFC504F0D9397EB8C5E1D6B5017FA606947F461
53FF6BCFCE0DB8B44B654A7099AE8E1F5790B656769CF82A29284580F262A297F7318E1C9A2
54FC94A31CA944B305D3AC6CB129853C0D8DB0550FE55C629F14AF7C5A51A37EC030AE351A1
F4877337368F071A53D22716517D61380E95F22438606AEF8B9664F38971BAFB1FFC956DCCE
FD311A39683472C788820DF8CCBA62C3D36A313781C56CDF680546A11F431DEB88534255418
BFF30F4A186B9182C424FA3723B1815D05B2008E7C1A53F7A65B91ED45E68390AC5BB342235
000507227FC9A62E86E918549EA6EC740692C1D53E57EA0F96E516D586D4493190A6150C74D
14E67F9E42DF38366CF2BED7EB078E9AAE7023E8C65643AF86EC0C1D9AF1C1A460BAC002CC2
4D6333E422E7FCA7FF0D79A359B406D04E5FCF5A6FD387CB63373A0639893EAA2450277D679
F9683A98EBBE8B65A40282023B1E086B66838B4EACB7481B515D3C9D58C88F3C91F5A76FD20
BB483A56C1818A7C6165509E4C195B050FFD6BFBE2C54AF8E7BB7D4A9BD4F22FAD39583FF35
159FF1AE6CD159C85FFA22E58C57B07C4261088991F9EC94D86E88E2370800FA513F9D9C60B
E2E8A1EC5CB576A2EEA3482E87C9D40B1EFFFDF153D2A7A53ADE641CDC8BD36FCD2F554588A
E7B696A52212F80B7562DE86BB7A5EE720E5BB5F763355080DDA0AF68D9B224FE8C4009441D
BC2B7AEA46D43BD18147F6B3F7E3F08B2FB965C4A568E3FD1DD9055BDE3114AA6B605DDD174
CC971DA05F92B4BCB2CF88F529D5223CC86A9F365FB407D3856E22832A498B29630B44360C3
8EE1851B1DACAACCE96A0B3C30D45E930E0FA39FCBB9518992234E440C287B130CC11D210F9
8634978014315FA4CB7EA9657AAEF01CC359586A4F99344B8E251CA7057B505D7D81CE3C936
BE5FE965C6F2E9A12B2EDB6078A904479CC9009367FEE76E81B569A740035E92EB4B9BED09F
EA862AA6E63F3D7E96EBB576BD1144A2E7DF90EBD42C2E8255D99951AD6A0D4621C398B6D72
833B1B2BE97D5F8135CAAE80367D92D0154207F38DFF5B46F6826CAB37F9F4F850AD38529AA
DDCE6B23584A4B39D43FEFFBE2AA8508C4407D5A143D02476F94AFD791A6EB03AACDC56FF40
42151CC4E1CCED443A5DBE89678A07C597B6EB7E329C9FB46D257E66939B98DCF08BC05F4B3
69E12C645ADE27BAAF4297DA3BD6A0154
-----END ENCRYPTED SCRIPT-----
}//object_detection_with_mask_brighter()

//  Nuclei detection inner-technical procedure. Detects nuclei on 
//  the input image. Called from nuclei_detection_E()

// ------------------------------------------------------------------------
proc nuclei_detection_E_inner(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
int MinimumNuclearArea=70 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
double MinimumNucleiDistance=7.0 in "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
//OUTPUT
objectlist nuclei out "Output object list with detected nuclei.",
objectlist InitialMask out "object list after the initial threshoding.",
vector ErrorInfo out "A container with a possible Error Message. If no errors occur, the ErrorInfo.ErrorCode will be zero."
)object recognition [hidden] "Nuclei detection inner-technical procedure. Detects nuclei on the input image."
{	
-----BEGIN ENCRYPTED SCRIPT-----
7F3B90FA0DC5D89F940ECBFFADAEC23CAF4348658FD0B079DDBC57008311792D086CA924167
0F63F18990B6D4B7367B349087035F6E530B72D1578C51C8FE8563DEEE6F22810F51B2D5AF9
8BCF804E2039F6BAAEA11E5A3BE13F3DD38DB0839B34FCDB4AC0A07BAA17FBDAB112C9D9973
873A856395ED56F8781FDBCC95F250D:3F021BDD7C206C989F58027E659887FF167CE6A884B
D52B70C1A17706EE6B203AEB3437C0AD3B67301C86149C162C730409D33B919831A054EAFF2
69C943AF9EEA1DC735C462ADB946944C93D1316EBFBEFCD8E9A9865FF3136EE13CAE4C4AC4D
21885EE3970B9ECC9FDFBA072AB0770234FA19B9B23B3497FC4303803D4F5AD/24422415251
4ADB54277126FD46E04648AF1F63C8F89278536B68472AF6B6ECC800481E0836C68C5D174FA
445706FC94643BA1684CD66106302985ECA09A985AD2171FDC61F426F84B42A06B3FF53A19C
A5AC26F965B9DD186822E41FC9EC97FC3316932F48C52A4B5AC46B4096A267749481C1C3687
B0C688145077F87B4B3306EF1D69A7E1C3D3F58CEC39937077E680AA7267D75CC40976ED683
322A54BB027F2AF2CEC051E21DBCDD51FA140B9F3D2DDDE8445BB7ECFD76712723AAE7BCB46
FBAEB9AAB0A34D88145077F87B4B333391330118C7B9B1E5AFF3738533C676185C1C0B9175F
8C8A3E580F3FA2421D791DD58DD2B7944426FC8369CA553EC99BEFAB3AFEAD431D78D78FA39
D796E94BB0F1A9F82EA6E3E8695DB5CEDF851E592E4634BC48E614D0A957ABC6929B7B73059
67F93E6318CF96E080946D8E23986E907D005EB330F132329FE27E99D006F8AA774BC678367
4D7E941E9417EF2F7EBCB9B3C361DEB3CFB221E765E4ACE2AB3A05654DF3F7B491E2D5282B9
6BCB4F2C170010585666CD28E7E5D531194DCED82609C6C6F34F8DE774687B2911E3DF4B9CA
443811C301E262C9390D7103E1B1C52215C7AB2EAA28CAC009DC21095042D2DDDE8445BB7EC
F350F8C50FDA12A19782720E259BB7ABB7BEC680E83E79A8AACFDC5191BD4AC5D0E7DF354E4
3EF2FC606B81723CF07D3F557D52088BCFFE06C0C9BC11AD63FFEB88DBED7F2F542E1BFA3FF
3AD1124D56327A95CF1BACB5C23AF47FCB89258649FD28EE368CBF00D3AD2C9BF16FAC8913A
2500B62C79E4BC2856EEE314C636DB04EAC84F9175B4315D76DFBBB300F2CF065581C3F7B00
7ACBFDA7C91E394528160029FD1D1593030490B31BAF968A5880D33953EFDB92CB94C96A970
65F7BBCEF3C22860281C55E26FF7C84F7349944DC1CFAE4B8CD727722B88145077F87B4B333
39399645816FEA3388B0146CDA9C3E70F6E26F29D307862B29DDB46006F2AE8D606E5A9B9FC
2CF7CA170DD8B6E8DDD36D2260ABF7DAA5F394488403503958C48B12EB6ABDDC5E54AE97F63
0CF56794309D49E91A2FEACE344006DCDB3349C01BA0792DCD81D59A0500FF6C269F6D73228
E00AEA90F0BB80576E2D89596C709F41DF91F60E40FDD9E8D8E28D078BE4367DC33FA47CD19
95AB84015450332046B7BEC680E83E79A8AACFDC5191BD4AC5D2C968704C01D0963B29DDB46
006F2AE8CD8A6C1821D938EA43DEBCBD42259D1E0F1FD5989F2FC4D9EAF397CEE0646D6EB19
89C4C8DD9604D7FD3FF83363B2755CEFD97D23A648F458187218295ED0B1D1A9FF408350318
3D13F270CE30223A1C1F23E8496770782B7703FD1B3223845123AC8DA6CD433BFDC35BD8A59
9D08B092016D67B17A07940CDD8A54B4CF978D43B90712E9D10D91FD503CEDB46F5B4A79332
F642E00AE5DE5FAED5500D8C1D564CFE6FBD6EA9689EA0CDEB8208BAE1E8BFA3879C8B3739E
D606B81723CF07D3F557D52088BCFFE06C0C9BC11AD63FFEB59B65B39033C4991FA3FF3AD11
24D56327A95CF1BACB5C23AF47FCB89258649FD28EE368CBF00D3AD2C9BF16FAC8913A4C29E
C3A6671ED80CC55AF1BD5BCDC03D1470D33EC4A96BF020FA2993495C0814E701A0876D3D943
393149C953AEFAD93E5C0F9B58825DEB17BE08BA92B963FFF50AE9576299C36A02AC6AF3979
DA4A32BC0BDBE1076414D56600820D8C8821B2BCC5BEF20D59A1DDABF71D08CF3E7F866BDEB
2402EC2BC3D88D30CF5A1645D91C45A05AD24D6BDF5784C812AC57FCB4E57BA7B8E7394A0E5
A70EE0112AA3AEA7A81A53B6881ED87F5EB3663EB842E4AA1BDA0F7570B631261C46E0DFF98
DC8538838D4F439BB99E6BA0548E2F45592BA0FC65EB226A1643B2F4BAE558A9F26617ABD83
671D09EB81290FF75D21821EDD7B76DB031A0577113E0F88A6B3673A77DCFE11D4528952F6F
CA4DD62EFFE6DBA571FC67611922969671341A5BE706BE0C60D2500E5602A86307A40B62BCE
F5A9AB6E625E592DF4492C2AE753ECDA847C38DE8BB1D89C86CF472E779DEAABCBD10046322
83D480BE7AD23906F88B61C5F50AE9576299C36A02AC6AF3979DA4A3E5C5F1364616E7867F0
A62146AF0D452CC55AF1BD5BCDC031194D984D56EE5A1B4A7E9ED150C78A274811CEE02B970
A2A2D93FAA6A6678C0A0ABC11040DE5052A3DB65FC35396CF60DAE1585A9C65E343063A8F44
6CA4A647D009F91F5308C35CC31E0296748F7B2E2D180556221456834691E60483AD0D41312
577ADEF96DB190E9EF131BA1C09B164CB374C601C7BFD6FE8E963BFFF73A17D9785FCDBF6CE
6DF8229972B43D357B25DA7E15041C4C98F612762F31C3A21BAE1B4510B15F104415B32CD04
4E9C226E45BC80615E749E71B645F3F058900D24AE3722BF010B168E9A32C0F30433343CCB5
BA9363F71B7A4BAC1524A203E90BD44F6EDE2068500F2C7206F419CC1036CC7A67E93425AFB
D49A15BF1006F4C6913A7E62535B1A14C6B00282709EBD387F00F08850E961A82FB8EF398E8
86931C362CB02ADE5FC824598E989E698A105AF3DB874A763AFCF2AE908C5C670F0D69DEBF1
E7D33F6B1671E502313FFCB09AF16F9C72D68C1B219332F642E00AE5DE07D745C6AAF2D95AF
613D25BAE09CAD2C9E0D7270ED491868E272BF0D7DACC0BEC741C8C6152F618285CAAF84FD4
CA820F42EF1532BE00E6486DD159F0ED1869456921C950EB7E7FC28BFE83C53CCACD396C6CC
9A2F4B9B04BB92DC5D1467F2664814313ACB712102250434A38864AD9A108E7184418E578CE
93F3D011D0BCABBCD9B034199DF03A49C2EDCED7F6829AB8F144787FE16C0DB003A458702FD
71412A97C4514A5C10A95543D42AD117E6D2A8C32C78AC4332691A64BD2942236A604B72DEE
A9EF0438E907D005EB330F132329FE27E99D006F7C28C4325A6A07ADBD2BF32CF13EF4CB390
CEC3397D7421EA04F8B4E02CBC6298932BF31F56D8831656B2559FBA58646C07F123C0F5364
94597D9E2ECF434BBE8D65E87CA94BBF6691A64BD2942236A614EEF93B12F8C2C2C9234FA13
6CE0B8466B94B2464ED50AEB26E13B4F63B308B833A78CE5541E37C23B9B8869F73627DB432
6394B7620CF715A78508C7B10E06805920A888039D34B58837C7FDF05A18681D2C0BCBB3A49
2B4CD4A7E1B45CA031F5E7BBD78C16A1975B8519891460DFB3C8E2E901CEDB6772403A911E2
8D9A4E2560D79FD2CBB093F8D70BF9492F2A4BAA6B60AC48284523FB0E7175627145E775366
3D1DB09C2B942DB02843806EECD98CE1C0BCBC38FC2E1DC61F419F737E3E4E477B259A44DBB
0D9EECA07F441D34251E12D84C6B1BD28DE3931195AC8B9489CF62F09A89A754F68AF8EB605
2DC038DF0D59941FA6EECE9769B830E0D816E81C14B071F4AADCF7CE686FDDC7718B657E68F
68398D0CFC6E0C5CE2F25775590E6C7CEB1D00ABD09A6B27B58B922096713F1ED1671AF7793
AD34AC36DD56C24203CDC668484E56C93DFCAFFA4DD2522616103EBA8C33D81CB6C98EA93D1
14F4058A8F7239DEEB92F981A92177EEB9269B2F6F6C429C7EBEED4B3340EC26E3960DB24AF
8C9AEEC712D169F94BA6E3ED0634DDEC0E5F0472F984A273F1206B1D25490192AF4E9905D5C
C98D46BFEBF198D6FE8E963BFFF73A17D9785FCDBF6CE6758693A31604CA5BDE9534BFE693E
B57E408F3D585CF8121EA740E4E0769F3C028148139714AD332CE57DB6A544A977915CDA2C4
5225BBCD9332F642E00AE5DE5490192AF4E9905DF19F9B66407A23AA34A962C6C5BF914AD31
EB76EF394E46615B9D6CEC991EA88567A0DAF8150765ECC31E0296748F7B2AEDC3D35E424FB
BE64D5AD2580D7CC5B811EF3B22CB4D75544E3DFF8691D78542321BB80C7F4061C6ACB14197
FF7328A568780A423773001811EF3B22CB4D75544E3DFF8691D7854529EF36D33D7650F42B7
B0CD6C080862E1124D78703F84A7A41D2DDDF157D966E5E33B979CD5807548A72D046E57ABE
D75015E756ABADD208BB2CBE3E7F6C8722EE183296D35F7F0AA4A8A8D89DB0552C20DCB15E4
87801467AA05B8C8A834C3F103C4CCD2D0969DD08E517A46316968150710489DCDCED713715
93D73A4168140F41AE2D714F37BD7504B7098BB6DC987921CA22C42C10CAF18B24F82C3A553
EBF74127FD1BBCD49A2375BB2E4BD63002DDCE763D955E293E0348E4236353006D1FD732D1F
4014352ED36E8AB526DA532FCCF2C9C1C90E5493DF4698BE48265F99001FEF74E7868AEDE42
E3219F5AF167097E05E3201F395387F2200B4AB18D9150A45F851B63863AD34AC36DD56C24D
D5B8BE87A7F561E771428BA84967F8613E331A510BB1CD2FF851A19FC7EBBC66D6E7ADA58C1
961E961C45A86059C1435379BC5BDB5E3DC809082DCAD28D186B4F6C30C76E1B90D54DE9A53
2928D6115B3BD7F5CD087E682929060668CC0A47A5CC79CF804180943E89E2223BD70CA534D
F06A892C498901C2BD211C936BA7EC026E1E33854662811B668C309DE1BB7D2C906475EA445
CB1907373BF2AA5AEB6E39E75151962763FE6A0FC0B73A85DFFC1CB2FEADA5692FCAE97F630
CF567943460560D6C017F439DC08DBEA21A0433AC07F123C0F536494597D9E2ECF434BBE978
59FE1F6477DC7F5D97365939ECA1E30F936FBE93FE73FF016DF9E9BC92BA116EB261F542A72
CB18EA9F7BF926752E32AFAD6812CAB196D6974AEBED9FB880151F52E9F09ECCCDE1344F9BE
BA6FC9FF53034339E2C61D7A67A044BE7AB30441B668C309DE1BB7D2C906475EA445CB18F27
5275C50041DA9EBA7C204D0A0FE5020C8946F5FEC2018DE422ACC7571FB0BCF7BA5A3311106
04262FA487AB92168EF6627DDD4C49A634CFE6FBD6EA9689E09F47C4C39A79FA9F8C6ED62B9
3A2C43357F4CE6420CF71A6675EC35848A2B36B1A3CF68FED40CCBE24775C2FC43430280592
0A888039D344C997CC61A18C1340EE766DC4B180B0C73F1EC744B88146E5760E9FFD0E5E2E5
1FA93FC3A3BE936A4B39F27152980E5D75726AD95DBA0491EADBFB4021CEFDF85FB83B73AA7
ABC67E8368D8F7BD5F4B62AC4B45F924B46C41A390343AFFE3EF771A694689D6D31949A9D98
9D6F5883E213F270CE30223A1C1F23E8496770782B7703FD1B322384517EFD608B94A37CC04
2B7B0CD6C080862DC2245B2B8DFFB2123455A6EBC14126F78D861E5DE57F97349DA8B44BF7D
8D235C230857FAED6F6EE8368D8F7BD5F4B62AC4B45F924B46C4695D3B5E69BED16C4262FA4
87AB92168C22860281C55E26FF7C84F7349944DC1088ED170091079546005EA5F19E0DAF70E
A3D6F98E5C8CD9721C29CAEAAAA58C573CBCEDDBC08093217D1302F1CA3A167C594CCD78A64
6E834B375E9C8E3901AC7B1D212C48E804B147E54C1E142E6FDEF99B6E8E0F0DD98F4DD7B43
5A0FAF6F7969E2E5D688CEA070ABF932DB1155EA5860C8469F24F8F5A12C4EF6111437C86F0
F7B8D5E20945FFF2D6E3D093741542387DA932DA98027BF3568F8E0B24CFD349262BD52F23D
590CD9A3EDB8A6C596101489B52840658051CB4DCF898C18820E8FEE8AA9CB3369F077C80DE
30BD0B0A907CC257F38BBC3242D0EFAF1967029049F40F50390272F04B65A1AFB06B7ACF755
E73F7DFA8DAB38BF597851818D32EA984941539262A3115CB8E07CADBED2CC55AF1BD5BCDC0
31194D984D56EE5A187DD42BB7D96A53B9CAFFB0B23A13AFD4F77A5B496E5C5F5D00C66509E
646A23081EB166B9E86DF3E7870A8D9F1F6538389523966518E7C47E71994D7AAA61776382E
E71C9CB0725A2D931C27DCD3EA46E6AE053D12481C825EDDD163D983D002D04B1DDAE28B55C
103382FAA1E317054E3F99DE128FE73F9A078AC71B8D8B781D2AB8B1989038B40AA32878664
41340B25DA7E15041C4C9AF84DFADF1F46C3AEF99B6E8E0F0DD98040819DA04B00FCB04908A
98A0E58DF1649611E96ED227055CB27AD9568DBBAFB15913C287ACD54CB2C4CC7F6FE77B602
5EDDD163D983D004560A8594ADC728C32B24C5E8AAF35FE57386C3404800A4B255627C6658D
5383C8B2DA00518E9FAD078CFC31DF30D35C304EB967E4E208EF94C02134DD1C0BBF65DBB8B
67866A61DACAD378D09C3F3C664353768D38940814307BE8072A71F3251284997BEC88898E4
A062D3696BEA9F7609723F69F90C304CEE462565403EE2A3FA66B087A0402B889107F2D1201
C6207149B69938B25FEB79D5466B21392D4CBA41C01BF629009F78465C5B4AAFD2BAC675E0A
C5AA09034F37C4306A649E38BA7A928618E28C0E9587D4F4D0361A7EAE97F630CF56794309D
49E91A2FEACE3612418A16D283DC262E6FBE3AB247F67A67A044BE7AB30441FA21A3B185AB4
886B85691A5D7D3A57C7154A33A8EBC8C1A7F8679CF0672CE778CD828FED93E724FF851A19F
C7EBBC61FA93FC3A3BE936A1675568B553788DE9CFBE020E11810B8C587335C71219E83CEB5
5CDBC24C3B845A4DC34A33F094E58F43451CD94B9895346FBD1014E21CE7F2A3066D84E35B2
E11369C69368F20D5CA9A641B632EAC4408963F62A96CC836E3FC6497359AA272DF2A44EF5D
3710EEFA9B9B959ACA3FE4941BF9760EA46224339A3C1FBB7815E96B1BD9570950A0A12E95D
55FB93B9852
-----END ENCRYPTED SCRIPT-----
}//nuclei_detection_E_inner

// ------------------------------------------------------------------------
proc nuclei_detection_E(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
//OUTPUT
objectlist Nuclei out "Output object list with detected nuclei"
) object recognition, nuclei detection "Nuclei detection procedure. Detects nuclei on the input image."
{
	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei. The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")
	
	// Inner-technical nuclei detection procedure
	nuclei_detection_E_inner(reference, ThresholdAdjustment, MinimumNuclearArea, IndividualThresholdAdjustment, MinimumNucleiDistance) 
		
	ErrorReceiverForNucleiDetectionLibrary_v1()

	if(ShowIllustrations)
		imageview(item=InitialMask.border.mask, label="InitialMask", title="Mask after the initial thresholding. Adjust par. \"Threshold Adjustment\"", image=reference, gamma=2.6)	
	end() 		
	// Removes breaking lines between the stuck nuclei, Input 
	// parameter is fixed
	controlbreakinglines_v12(nuclei, 0.8) 
	// Adds to object list a contrast attribute
	object_contrast_general(cells_out, reference, InitialMask=InitialMask.body.mask) 
	
	// Creates the illustration "LowContrastObjects"
	if(ShowIllustrations) 
		set(CL_Temp=objects)
		objectfilter(contrast<=MinimumNuclearContrast)
		imageview(item=objects.border, label="LowContrastObjects",title="Discarded low contrast objects. Adjust par. \"Minimum Nuclear Contrast\"", image=reference, gamma=2.6)
		set(objects=CL_Temp)
	end()
	objectfilter(contrast>MinimumNuclearContrast)
	if(ShowIllustrations)
		imageview(item=objects.border, label="Nuclei", title="Detected nuclei. Adjust par. \"Individual Threshold Adjustment\"",image=reference, gamma=2.6)
	end()
	calcarea()
	calcintensity(image=reference)
	set(nuclei=objects)
}// nuclei_detection_E()

// ------------------------------------------------------------------------
// Nuclei detection procedure from detection_F-script
// Nuclei detection inner-technical procedure. Detects nuclei on the 
// input image. Called from nuclei_detection_F()

proc nuclei_detection_F_inner(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0. Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
int MinimumNuclearArea=70 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
double MinimumNucleiDistance=7.0 in "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.]",
double NuclearSplittingAdjustment=7.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
//OUTPUT
objectlist nuclei out "Output object list with detected nuclei.",
objectlist InitialMask out "object list after the initial threshoding.",
mask BrighterMask out "Mask of points, which are brighter than the surrounding. Mask has better resolution and the higher noise level with the smaller values of NuclearSplittingAdjustment and vice-versa the lower resolution and lower noise level with the larger values of the parameter.",
vector ErrorInfo out "A container with a possible Error Message. If no errors occur, the ErrorInfo.ErrorCode will be zero."
)object recognition [hidden] "Nuclei detection inner-technical procedure. Detects nuclei on the input image."
{
-----BEGIN ENCRYPTED SCRIPT-----
8D13CE0A15D113D3E15BC6D6B64B14D257365D68C7C87EA99F5C99CFAE7005833D0E1C9534D
C6680755138B902D5F098DF56E009CF9621DA3AEC2DC85D92713A8104A5607B4E763E0EA744
CA0C6B69CDF86342B8178B4E8D53B2F42AA87097D672C3FD7B6C308E71A7BBC95C9C47C91DB
6936FE54B49CFE0673058D25FC562FA:2FA70ADDD9108FBDBC4056C2D03612F3D2D5A370840
5BF71A53C50B2CB378986F3BAFEEE7A879C915D1E7E968F024861518D82E690B93A91C617DD
CA6E78436788F50C0AB4BA083C0F4EA76459196DAE25060D5505404FCC58DBCBD1648A108C3
E8FE871F5D2A2CAF0CEAE3F05F956F6149AC5BE58FF9D187F02EDB5FA53F11F/6A4905A65AC
80D918BA70ED19B0D57BB7C26E9F0044F7A1B8CAC61E555370EB9178D685E94DFBF54F5CCEE
18675E95D4AE49A11507B7A9A11AEE4AA968BE1A0694E8DBF6CAF1DE404912A7A2B80F59E02
FF0F1752A3297A307C6E3DCDA45918DB2883864FED911F9ED1CABC1008884D329E24CFBE993
E9C7B4265451731C52E7C28ECB3C970CAAF27151F35E029A42808EDE26CCC5588AF42A4C360
842400FCC6E49B658CE9FAE0AE3630D70A8542A1F3E8CC7A7B0D447419CA7F5E837DCCAA50F
7DEA96E002007FB4265451731C52E770F14E6E1D4790364BFD0ABA8F72E87300CA151B721E9
75FE272EC41676DFDD15D5DEC0F09F15D4B46331FF2ECAE07A40ACF870DFB40D4AB1904A7FB
4512EDE2913E0E2930DC5B7AFF5D48913871286596EDE528BF84186F479E3701BB2E9DF5C70
03727295CFA0B1DA85041065FBC00291DF3DCB6030C6AD08FEA8F5F56E0F9FDE9BC5BF9F434
13D9CAFFF78207585D800542192D4B8C6E6D634BD1EA5372C8A7A4965DA641B608EF96A77CE
226154D89F419D3520EE9B40FB0E95719F824E8F4E5315040C648E369BF6785CB23D996391A
FA6A646CEB46F5CDCF2248DB17BB6EE2F362BC79131E5C040F385B3971E23E8CC7A7B0D4474
1DFDAFF7EC226A623E6AC0A904E5AA1C001874F822A51385622BB923AC08705450C8D2AF0D5
D910AC5870AEA13648BAD4BA752786269BE4A750928C090D3A7EDEB417A44DDA486DD5540EC
1E0B203BCCB6DC973CB2CAA4C98873B354B19DB8B2EB5F0766993F52D03569C3B4C964FA069
DE59CE3E7ED78748623D7AFEF839D26F66D36A2C7B15764DDE2A8BD285A70A569E6697AFFD4
42410FFB762E5B6CB4E99A97454C664D6A67E5F348CCC02177A5182A5682D1B263E14D92E74
B2D17E523C476610B5C9B7FE2EE6709F53E3D716BDD6DA99C1275BA306B4265451731C52E74
55E5505020398C2AABF0DFF5A7420B0E88BC815753246FE11510509347EDD632A4FC56C5BDF
8D95EA41EF9D38BD71696BAEC63C36573827F7D11E8D75630F4C8E85C279D443BB03B73297A
D43D65BC42B2E89A9411679ECBD3EB5953BDC23B89F0DAED42C5881B2AB8397FCB74869C6B2
7C177B945FCEB45B43E66FF6E92495AA681B12FDE8A20A8F87E023F547742A64D6AF45D1F6A
DA635660BBCB4712AFE01874F822A51385622BB923AC08705458431B4B01EA79AD211510509
347EDD63429179E4489DE7D9D99B9B48E58C7765558C00B3C2D58B672A4C92070A9B27FD932
10466EA47068A1F290873CB83091BA5E142A3074A190D23524CE169AF8CD7DBD4734C2F53E8
8863B553EDF92F7EA54D763EA15D1E32C54E1184564BB6A2A2132BA4F75AA06C61DF5E9D279
899684F20829DD61ADB7D82A553822B3BFDFC4B4E43080B99D70A4F673F80C28AF430174338
EEC310123BD0C374377F3E48817BE3CEC064F849E2216BFC73BEAA0A19F7A0AD6C72C1419EF
55870AEA13648BAD4BA752786269BE4A750928C090D3A7EDEAF02491A63F8E3FB540EC1E0B2
03BCCB6DC973CB2CAA4C98873B354B19DB8B2EB5F0766993F52D03569C3B4C964FA06915DB3
608B5361BBFF5881123ACB1DAEA4A1BAD7CC1410AC7C65345B1C60F40A92B6A3A1A85D288FB
66610B948DEBA42A9223C5C1F742A54EA75F52A32C1A32E376EA612722DD1552FFA68D3A21B
AE22C24286E83B9C1020BC4BE8C6991E7FAE4393C4198C2D6639E680232FF06B609D7B417A4
4DDA486DD5540EC1E0B203BCCB346BEB6EA349E169176DC6DCFFF5AFB6193221366AD6B03E3
E8CC7A7B0D44741AFD3A83F110254782B371BDBCBE41BB209C8F570CB57A162555AE3EA5BE3
A576720FC26553463FA82891EF7DC31E2987955CAE53D8495E3E723240DAB7F09FA3D4696F9
6E23F997579F328C5A82FDABAB572B3680D90AEDAB9C7678B82D7B2AB5B43E66FF6E92495AA
681B12FDE8A20A8F87E023F547742A102719B4F18FAF593BA70B3118852B3F6C89D16F8922E
C4BE555F25D28F2E2017FE5900F5B50F9596ACA42C8D07289D98F844C711BD2AE537D0A476A
37803B78091159BF301620C5CA85287F98DBF66A22BB923AC0870545B1A0CE7385594424E0C
AAEB3489431BEFB8BA037DA3FBA6877BF5426CCAC523F6A1DA982761C54936B4D9C7A0358EE
D29F8D44EBBC768032FFABC3D8A3CC476FB4265451731C52E770F14E6E1D4790364BFD0ABA8
F72E8734603A2610CB86A1C0DA75DDCC29B908D555AE3EA5BE3A5760B353D587668D94ED0DB
C506A54CB09F13DE995EC5F0019FDA36763CC78F21A8E969187E7738E105177BD8002865457
4E390E374D55C7D5433322A06A14128C3B25367021FA463D96F551420ACBA3346180197D9F5
5436645DC2D16D4484C9BC396C7CD7713DB6B763D756B38BDD0877DD1B7EAA5DBDF82BC2D43
6F1288804435530CB1261A09038BFE8DFB3847EFCB0197CC4D5DE59D27831129F0FF6E8EC11
E945AAC1C5B4C44909C8F570CB57A16296CB344F0FD006CE6ACA42C8D07289D902AEA9572D4
3E9AAB0A35B00D33D0D11D11FB2E95DD7C9892D44BCAE72EDB6068D7F6DD2D18B6F4123524C
E169AF8CD701B89E78B28F660A859CB7FE48334F58F21EA58C2255BDF3F79BE56FFCA1E8B20
12F855A6863527595B657A72533338B31FD1F021788DFD82025CEEC905E34B9AE50C0097AE2
6EA94BCD5A2E735D23ED067D51623DE61FA5870D3EF8743FA5D1C44913F83E9D2950F588112
3ACB1DAEA649E70854964F73A8EF95FB1F3D70862BC40611DEC34780AD330014531947BE0E3
69C43A6417B8D36032CD1042FEC9A846B03871CD38EBB2D4F8CF5678F9CE8C3DC1BBC05FE5C
C94C0173CB42C9669C05F2A75699242D2A2F37CA83315C471687DCFEE5CB1EA8C7D26283207
79B1C051074FD271A0C199867CBC2A4D030FB15AADCD9AD1A9A99BB4E852338A2363C1BA95E
C7D6F85AF3D36E6F3C4C97682859ED8D4CBEDD6B5280F912BEF4F6FD2921377CB0194FF8154
58EB572A8BC0BA41307055E8E5AF98C0B0E848E933C55BF4206971455480A3B511B73297AD4
3D65BC42B2E89A9411679EC10417D7CD3347DF68237A886F76135BF49F32FF38FC53C2EAEC2
6E88313EC743E3D396B0844220A8C8B18C7C585642944AC7184FF034D46378ED2DEAC7694F1
ADFC0D909D079EF50ACB4CB385470C8FB1ED598F46B817535DFDB8752E2444AE61E77E5394C
6E7A4FBABA4ABE69509573234679F97D13F47A64D32B1CDFDC015BC1C2D276009E0B16FAAED
7DF046E16A483FC888F30208B8B27E086663CF40C3DCF6BC2AC4A681816B129C58D94F260D0
8E5DEBF6478B14EF4563136BFC9B4E0092DA0AB63B41A9FA560D5AD42A596D12C407A6DD440
C8CDDAF994442FAFD95CC649EADB96CF4E911A0A4B623E6F39E89014CFD3ECF7420D1FFF0BB
6A35E0445C673F5C3DDD9ADE9219A2E8DDD380637DFF53BA0F60BE30BEEA33B9F702A0B6AD7
3C9D0C397B11359A637B4C567235F9BA2074C56A5047CEA75CDC32DE6F928CDA3CDC64BDB92
696B51216C0135A203C3D3C9A09F38B7C523CCFC0BA7FE3EA07A377E1800444F2022D10F36E
B673872B0F06C39345BB6B2C1A4E1DBDB03EDD3950099C831648D1429A637B4C567235F9B5D
C11E4F2CEB178BDF4816D5B8F67F182D9EAEBC1E03D93F3D56C5E2F69C8CAA354DEE752FF61
BA94623AF2BE1A6577962A65DC0944B70B5545B67EA09616C5214A4E191F5369FDC307116A8
BAF7EE41B31B67C91B655F553CEDB2AE70E943013F0D009D2919362E9FA606A31891998D66A
50B5E868802E9C33B17F71D40CA3827B092B9523D8876AE1B4082F7EB7732992A02C17527F3
4C05A17CA437BFD9C62AD47BE4E86DD088626BBF5AE3958B8EA8A311E0299E7544A42EE5874
42F45558A96F335FB200E9E013C2CBDE206EA5E5FBE5159A2B07BCE7E22E1DB90D6E952F9B1
E872F0E7DCA96F368626C4AF95834FA8F96494C7BE80FA0EA0C047D3F18906E1C29B4B48553
1FAAED7DF046E16A477291BB1526AADC4D053D6747396A9459560A7104A3368EE38678E00B7
F992213B42D399C84754A6856F7183C596408D43747B8BDA810F7901E5D66737D1C43AE2A00
BEBE8AFCA35F76DD066F6665734F82716D6CE7FA4C81B01B3003D81B09981A2214B701C83E9
80EB2120C4057631E369C43A6417B8D34EE4B5346B3E985EAD9B4A58BE971D7B9CFB6FA56F2
4BAB3EA3B8386C4E747B93F1C8E67482538B07096276BF88091528A96F335FB200E9EAC2AAE
9CDCFE500B7E2502D10994A72A6D279C1056A2501E8971D2577D18A91BE529B6997253BDE2C
E0C0167358DB0F281CEF89E0B7BCB6D62F8BA40B7B77B4C16768FDCD9EE7BE17F57DBEB7BBB
A24A37097D4D0E188AE8D3E67CC6E6196AE5D732A577CEA26D724CFD4B3E06B75BB8C19C38B
2662F98AD5EE40D3D3D212FD11EE92BFF73722E73BCD0310829814B8C01E01376122939B3D7
287AA8AA51A4F00208B2886CF008409C1F5FBDA384F645FEAE35C26AA2F2F3D5ECBAB178F40
9B1396B07E3C2D756A1B71D431865E7878B45AAF73DCBB798A8A8D17F67B14172A8B2F363B8
F63199F1690DBCC7FD60F4F7CF9A77C294BEE5A097BEFCA64DCCCD5FE8FF8BE01A55DA74690
DBCC7FD60F4F7AAED4ECBAF4C6B0FE03D9838F76A4AE98D1A8696DF20EAD7CFCBA1CF63EB06
74D6A884E8F675CB53AE397AE76B64B350AE0466493B34C044E3CEC064F849E221AC30E5125
2CC898AFD5F5838C64FC7E52E7A26E334F0B069AF994442FAFD95CC68BAF6156A9C39D48043
59AA9668AE5F85A207FB913A15EFFB1D620F8CB2BEE62E15012F7EF5AA8D06ABDF504365893
82B2169029CEC73247068A178F2F1DC825565A67B4AF381802C3321D99DDF6D4D63B553EDF9
2F7EA54D763EA15D1E32C54E1184564BB6A2A294ACBB68A8E1E331558C00B3C2D58B67E8718
1AC2DD59D50B28F72B5CDCC457B27E086663CF40C3DF5AAE5D3C2179827444FB7F2ED5C6433
957C52A8A2C70C91F1128967153A91E0CC709BC7D596856B5D2172A96CCBDE9030CE048F2CB
43C85943A6E31D09F4B43E20A1BF95CF85500BB79F281D8E26F9F9E36D1FCED9FAC66D7A2A4
F62EFCCAD86FFC1806D5E77A1916AC2909053F57D0B73297AD43D65BC42B2E89A9411679EC7
D4ABBF4907F24A9AEB3AA8FAFB7B96E3209984ECD17AF197015CBD81888345D8E3072819FA8
743CE369C43A6417B8D3762ACCC68F2425148C9CEDC70915CC426E64F2BE5887B1DCA42EE58
7442F4555E58B2992241AA0E65F7BE14DDD10BB38
-----END ENCRYPTED SCRIPT-----
}//End of  nuclei_detection_F_inner()

// ------------------------------------------------------------------------
proc nuclei_detection_F(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
//OUTPUT
objectlist Nuclei out "Output object list with detected nuclei"
) object recognition, nuclei detection "Nuclei detection procedure. Detects nuclei on the input image."
{
	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei. The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")
	
	// Inner-technical nuclei detection procedure
	nuclei_detection_F_inner(reference, ThresholdAdjustment, MinimumNuclearArea,IndividualThresholdAdjustment, MinimumNucleiDistance) 
		 	
	ErrorReceiverForNucleiDetectionLibrary_v1()

	if(ShowIllustrations)
		imageview(item=InitialMask.border.mask, label="InitialMask", title="Mask after the initial thresholding. Adjust par. \"Threshold Adjustment\"", image=reference, gamma=2.6)
	end() 		
	// Removes breaking lines between the stuck nuclei, 
	// Input parameter is fixed
	controlbreakinglines_v12(nuclei, 0.8)
	// Adds to object list a contrast attribute
	object_contrast_general(cells_out, reference, InitialMask=InitialMask.body.mask) 
	
	// Creates the illustration "LowContrastObjects"
	if(ShowIllustrations) 
		set(CL_Temp=objects)
		objectfilter(contrast<=MinimumNuclearContrast)
		imageview(item=objects.border, label="LowContrastObjects", title="Discarded low contrast objects. Adjust par. \"Minimum Nuclear Contrast\"", image=reference, gamma=2.6)
		set(objects=CL_Temp)
	end()
	objectfilter(contrast>MinimumNuclearContrast)
	if(ShowIllustrations)
		imageview(item=objects.border, label="Nuclei", title="Detected nuclei. Adjust par. \"Individual Threshold Adjustment\"", image=reference, gamma=2.6)
	end()
	calcarea()
	calcintensity(image=reference)
	set(nuclei=objects)
}// nuclei_detection_F


proc TooManyNucleiCenters(
image SpotImage in "Input image with intensity information about spots",
stencil maximums inout "Input-output stencil with local intensity maximums spotcandidates",
double SpotMinimumDistance in "Input parameter SpotMinimumDistance",
int SpotNumberLimit in "LimitForNumberOfSpots",
double SpotMinimumDistanceCorrected out "Corrected input SpotMinimumDistanceCorrected"
) nuclei detection[hidden] "Technical procedure used in nuclei detection library. Please do not use this procedure in scripts."
{

	if(SpotMinimumDistance>749.999)
		error("Number of SpotCandidates is too large. Images are probably too large. Reduce the image size or make the SeacrhMask, region where the spots are searched, smaller.")
	end()
	push(d_vector, 1.0,sqrt(2),2.0, sqrt(5), sqrt(8),3.0, sqrt(10), sqrt(13), 4.0, sqrt(17),sqrt(18), sqrt(20), 5.0, sqrt(26), sqrt(29), sqrt(32),sqrt(34), 6.0,6.3, 6.6, 7.0, 7.5, 8.0, 8.5, 9, 10.0, 11.0, 12.0, 14.0, 17.0, 20.0, 25.0, 35.0, 50.0, 75.0, 100.0, 150.0, 200.0, 300.0,400.0,500.0,750.0)
	set(DistanceVectorLength=d_vector.length)
	set(DistanceVectorLength2=DistanceVectorLength-1)
	set(epsilon=0.00001)
	set(aa2=-1, SpotMinimumDistanceCorrected=-1, InitialNumberOfCandidates=maximums.itemcount)

	while(SpotMinimumDistanceCorrected<SpotMinimumDistance)
		set(aa2=aa2+1)	
		set(SpotMinimumDistanceCorrected=d_vector[aa2])	
	end()
	
	set(SpotMinimumDistanceCorrected=SpotMinimumDistanceCorrected+epsilon)
	while(maximums.itemcount>SpotNumberLimit)
		maximums(SpotMinimumDistanceCorrected, image=SpotImage, mask=maximums.mask)
		if(maximums.itemcount>SpotNumberLimit)
			if(aa2>=DistanceVectorLength2)
				error("Number of SpotCandidates is too large. Images are probably too large. Reduce the image size or make the SearchMask (region where the spots are searched) smaller.")
			else()
				set(aa2=aa2+1)
				set(SpotMinimumDistanceCorrected=d_vector[aa2]+epsilon)
			end()
		end()		
	end()
}


proc ControlMaximums2Objects(
stencil maximums inout,
stencil RestrictiveStencil in "Restrictive for Centers2Objects()" ,
image image in "Maximums are found by this image",
image result in "Objects are built by this image",
double MinimumNucleiDistance in,
int MinimumNuclearArea in,
int NucleiNumberLimit in,
int ClusteringRadius=1 in,
objectlist objects out
) nuclei detection[hidden] "Technical procedure used in nuclei detection library. Please do not use this procedure in scripts."
{
	if(maximums.itemcount>NucleiNumberLimit) //Bug fix Dec 4, 2007
		TooManyNucleiCenters(Image, maximums, MinimumNucleiDistance,NucleiNumberLimit)
	end()
	eval("centers2objects(maximums, ClusteringRadius, stencil=RestrictiveStencil, image=result, minarea=MinimumNuclearArea)")
	if(errorcode!=0)
		set(ControlFlag=1,  minarea_corrected=MinimumNuclearArea)
		while(ControlFlag>0)
			set(NucleiNumberLimit=0.8*NucleiNumberLimit)
			
			TooManyNucleiCenters(Image, maximums, SpotMinimumDistanceCorrected,NucleiNumberLimit)
			
			eval("centers2objects(maximums, ClusteringRadius, stencil=RestrictiveStencil, image=result, minarea=minarea_corrected)")
			
			if(errorcode!=0 or ControlFlag>4)
				if(ControlFlag>4)
					stencil2objects(maximums)
					calczone(200, stencil=RestrictiveStencil)
					zonemask(-200,oo)
					stencil2objects(objects.zonemask)
				end()
				set(ControlFlag=0)
				
			else()
				set(ControlFlag=ControlFlag+1)
				set(minarea_corrected=minarea_corrected+1)
			end()
		end()
	end()
}


proc CreateBlankLists2BlankImages(
	mask mask in,
	int MinimumNuclearArea=1000000 in, //Bug-fix May 13, 2008
	objectlist nuclei out "Output object list with detected nuclei.",
	objectlist InitialMask out "object list after the initial threshoding." ,
	mask DarkerMask out "Mask of points, which are darker than the surrounding. The mask has better resolution and the higher noise level with the smaller values of NuclearSplittingAdjustment and vice-versa the lower resolution and lower noise level with the larger values of the parameter."
) nuclei detection[hidden] "Technical procedure used in nuclei detection library. Please do not use this procedure in scripts."
{
	mask2stencil()
	stencil2objects()
	calcarea()
	objectfilter(area>MinimumNuclearArea)
	set(nuclei=objects)
	set(DarkerMask=objects.body.mask)
	set(InitialMask=objects)
}

// ------------------------------------------------------------------------
// Nuclei detection inner-technical procedure. Detects nuclei on the 
// input image. Called from nuclei_detection_A()

proc nuclei_detection_A_inner(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0. Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
int MinimumNuclearArea=70 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
double MinimumNucleiDistance=7.0 in "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.]",
double NuclearSplittingAdjustment=7.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
//OUTPUT
objectlist nuclei out "Output object list with detected nuclei.",
objectlist InitialMask out "object list after the initial threshoding." ,
mask DarkerMask out "Mask of points, which are darker than the surrounding. The mask has better resolution and the higher noise level with the smaller values of NuclearSplittingAdjustment and vice-versa the lower resolution and lower noise level with the larger values of the parameter.",
vector ErrorInfo out "A container with a possible Error Message. If no errors occur, the ErrorInfo.ErrorCode will be zero."
) object recognition, nuclei detection [hidden] "Nuclei detection inner-technical procedure. Detects nuclei on the input image."
{
-----BEGIN ENCRYPTED SCRIPT-----
058106CAEC31C8DBEFD800008FA28582850EE7756D2315C7A754959AF62EB9740EF54D4CF5D
36FD8DDB517BAB996C06614579F7699EC215ED839227F8CF6A975B5AA0C89F2C9E7E4BE3263
572C026AF4E36A44D75AE0DE082023D106A21C07D5289B6C0B53A182C5EBF593D3F688E32A7
3DAD9C0D5DB0463BCA5A8C0E4A23360:56E2C81145C3B9846730B2FB1B3EFA99ADA5EC508D6
24D22BEE7EEA4C771D61BC5A334DBD3140CD694639DAC87DD6796CFD96CB238E3048BCA15B8
3FB36FE02CB0AFB18F0530AC7E2BC29E36C9BF16CC4FF704492F3B2E60DC7575E14D5D0BB48
72150699FC846BCC427A80C854DD184D241D4BB50CA2DCDD9E39644C492ACA5/36BAA13FAB8
081F7FBE8F2387B44836070B7C87ECEF63B5D2DF2026C4914277FC672942E7EFA2A2AC1A0AC
90D3CE53A373A091D40273349CF0C231E9C77FF1D2C030785BCA12ECD1D2A6E2284D5F37D4A
EC4C612B3FB2CE2258ACD330300DACDF151A53D83C6C8BDACEFB5FF3FB257D81ABC0DA34E6C
2B98022C37BC0A1AD6A1851C489C5170766F9D185AAF9D586DA84979CEA3BAC979D35485617
EE7C4C27ABE267C01F7EA952229E5D5B61CB5DEA4BB1839FA9A57402B068CFC75E1FEE83F89
CC188F6D3B9EE9022C37BC0A1AD6A127B230E299839728F35C5E4974B728A47492F445AFCDA
B8305F8220906A7732C2BF45740B0D4FEB64B5F5FCBA3671369166143D4A2DC5DCAEA724050
09A9CF1EBCDF029ABADDE661B48BD72AC2AA17B8859DA768603DF88C0CE4D382A7C6D023CA7
6A0A7C23F3AC37D30A3B077075EB013BE51648709603971420D76A11823A02DF9AB93052DAB
C0E9AEE9240AFA00DAA139078B1497AAE911F06F8AA5798BF0D867A9F30EA65915F6AAC6A63
5E7D0ADEC625407A57798CC330DAEF012F5FBB1645CBA260B4C62E110C5A7F2C95EEBBE7254
1EED25B8A94309866154EDF05094729AEC8E71B57C8B6DFBA91DD36FD399BB1839FA9A57402
BAD0544D899BAC5E6F126E1FB2C2EA4FC501B79AF07DD4D1036E8E3D2986D9BD21059315B7E
331D4A6F5B89526E5686B6EB6297AF72F1087C9DA708C97E9A114D9E0C323F5700922F66483
6767BE0EC25D5C8ECBF32D663CDF993A2F409DEFFC6D80EC1DA60339AD17AE4FF313F252C41
55FE0D23683CCF7285AB2130592CC15F81F12BE027DDFE725D4676828A924CFE1E22EC72078
55A98639382C8D1E38DB3514EC67586CC50444D8E4EF6E5A392B772690D227E15E3D5488DBB
441E77DD2730A7E8627B3D901891F4AD9BFD31F6CCF869705583E6BDF2872FD44145977684C
E0873574400BB05E78622A1DD7DE8BC6AF0A48A6DC9DF54BB1839FA9A57402BD28D754112F2
579EFF32EB75F464CE9A8FE00FE6423AC928485A6DB1976C6333E9894592A217295C0F705BE
443A06175051A95DA4DEC062D25F0243BED2BF0AA8AEA2A8F7BC2C24B31A9363D4E44AF9156
C2691E69D5010539A0A20E6D0C50F17AEA37084CCF0257C7E2D3522B985164F706B06378DFD
13E06B33D97B02E5C98501B79AF07DD4D10106D23B7565832186AF0A48A6DC9DF54BB1839FA
9A57402B068CFC75E1FEE83F5ED48663B44277069FA6B46651B32F1AC5BE8D3F9F424D10CD3
08A1ABB97BC48C9EA7E37A4ED7554A0D31FD1B63CBDF1EEC1150DA57E5FE17CE700B2E7EFB3
6EC2673FFD66BACB4CD39C327762E66D595AC0CE0F19A1975CF16DB632CDCCCB0BE853FDDD2
93BB9882B35A8F1F028C8274167EBDFAA6C8E55B14D084A51643DC39066A9B8A05FB98D6C82
99451315202463B1DC20591C0D933D2961FCDA768FEF10100C1A408048DD1059315B7E331D4
A6F5B89526E5686B6EB6297AF72F1087CD1CA6E3ECBDCAF8F9E0C323F5700922F664836767B
E0EC25D5C8ECBF32D663CDF993A2F409DEFFC6D80EC1DA60339AD17AE4FF313F252C413ABCD
DDA1831D5C26C2F6B7CD90C779BAE3628B8C4719D1DFAFFE56C8529CCD30234D7FB154A24E4
EEF8A7FBD2472EAE79F20570A764C08D487D66DF1A1F478FF9DB636802D6861475AB7A46A75
AD95A1368CC645A24E11630136006B55DDFDBB3DD0EB9049C597DE9D40848A00086209E0C32
3F5700922F664836767BE0EC2507292F6C5A8097C85CD43B059D4A0311022C37BC0A1AD6A12
7B230E299839728F35C5E4974B728A4801DB286EE3BD5FC7C569D2898732946A96B549EC7DB
98C945EC5F2B0EB3AA0E6F98F00338DE64BE4F83701695467C3B7AA59461A2BCA3667190F40
1181DAE56748CC5E6907A224574368784C44C5ECFCF8BEF0979F2D07539A0A20E6D0C50F17A
EA37084CCF025744BD7D23CD5BEBE31368CC645A24E11630136006B55DDFDBB3DD0EB9049C5
97D5DFB15959D381B0CB6B4C5F4C829BFFD3F73E3B110493C6CC6A0576DCB9C10E4206452FE
0D18FF9DCFE8C93048E41F2032A6543DEA76B2EEDC31F0D6CDC837B22291EC4BFB51A22103A
1E8D201343CE311B01ABC4DB83B58CB5FCE69F21AEBB29FA6B46651B32F1AC5BE8D3F9F424D
1085C9F59127D18594DCB8713E35C2B21CDB8AD2958F1CE49D6D994047F0973FB4FE8E863F7
5392E77F63554AD356CDB61B0D52DE17302C7817AE4FF313F252C41149E9F7730915D63D9E3
ADEE8F399103E239AEBAE919D5E57556E07157A697590678ACFCB880B1C1A9F5833E66CFFB9
3B8C3C5A292413AB81DA6D985A325563C110F558BC2744121627CFA9F05B85736DA695945BF
332D1957B1A4874BF869FEE21814CFD2E01DE015A145DF9B661BD0DCA6C4AA016719B24CC36
D5AE66FD181A2497F822F6AB49EFDC74F830AA4C1320E34BC73E2CC7BDAC902E56D782161AB
4F7D5F12BDDD6DB8D80EC1DA60339AD18532CC6618F09F541864D2CBCBE52517A2B824E441E
1D60C1BBEDFB5FE8BB24E754A484F0CD44BFF0C5EFF93FDB0DB298FE00FE6423AC928485A6D
B1976C6333AC9AAEFF563F5B061EAED273448C19BA9A44598804992ED2DD0A69E35CCD34FC3
9A0A20E6D0C50F17AEA37084CCF0257FD72E48BC0F1E24E86946BF2715E6352D4291391A93C
0C697F089F60E70C8AF8E1B7EA4CFAE1DEF5089EC47F837299F11B3ADFC2D2BC680EF4F459B
B642FEA9D094B3FCC3BAF9FF82D9D005039999C4E8846AFBB139FB7B053A4D8EA5712ED926F
13D4381330832A8974ED2DC69D77A79F1EEC40A7FB9F51D1D1673A5E2E7971C2FC646956B0C
035D6E156AFE8697DE7969C0B93F8BCBE5CBE40F82E4CC920C1BC956D61C8EA89551AAE09F3
26CC962FB741FFC76432363675E1E09B0816F5087B40EF4B13E2101E278314D64570E75C51F
B67ECA7AA31920F705BE443A06175B4EC6B2B89B6B9075393D1F02220409BFC7A596151C496
C4EA7916AF371597C7CB156233BF78A7B1CA1AA5B7E4C565038930CFD7BA4025BD2A3C2B30A
AB02773A57FF798EE80BD0CF27580DAD0EBE1E126813F4C6DA9812C672C44D35D16E26DE1B7
EA4CFAE1DEF5AA6126A6DEB146D7AAB2C6AB2B4235C5E8C42FE64910B6508F452A5DF5C2D92
B11DF0F5B8370BD743F73E3B110493C6C17E4071BA3C65C0F02D0311D181B85F1C15AAB32B6
FBDD54D80CE8D57B488786FF2311B991678847B064912254D90E5027BF94864B8E9D9C0F624
139C59B27711EC27F150CA9637FC84679C13C6A39ED36297FC8C69009E66A653F2163ED3269
543B53B4EAD360FE7127CE8A759DB5CB093CD9AF30DEBADB742AB0470CDEFD678E9C55530FE
53B37D02AAA2869F5061462E7D739EEAB304FC1B135461008FF46EC456C3B1CC9EF878E81F0
1CF325D65984AEDF84B3EEA998AB9A767DD529E9CA540430E69D657BF141DC17C1D36D486AE
DD9AD119DDBABE1E2C9706DBEC7C4C38B94627C171BAB5CED807CDE4A40E125622BE7615E43
E4EED3070445C1B5E87134E7C0E5F67E2DBBA57FF798EE80BD0C477254D65E32A52ADD364BB
F9EFE1F849CF6FFF88F32B5F888172F3C213C4E6A898E904425857DFA849EE178DD117FE150
1B79AF07DD4D1015203AB6AA0DAA04D55E096E893BA1E3A85CFC6CCC0F0794CE68716B9F995
A5ACAAE466800F16070E46793FCAC25CEF591FB8FCE5CCFEC9545484127F1FADE6EE3ED1FF4
98CAA7EA29E5D5B61CB5DEA471420D76A11823A0CB5E623550DC5ED4D918BF6F8D74B601CFF
F96F78023B5A73C550E514A0534EB25BF5FB3C9B40E8DB6E19D9EC9D56146560492E56592E6
041BED0E732BFDFC1C9AE185FBE01468383F8FB9A3EA36CCBA92C4B7F7B3A0B5C8F1E307318
AF86E5745EC5F2B0EB3AA0E6F98F00338DE64BE4F83701695467C3B39BEB228C7837B9145EC
5F2B0EB3AA0E6F98F00338DE64BE4F83701695467C3B28B34E321BD0084D210AE144911C190
82BC76079AE91512B3C550E514A0534EBB2BF5A62EAF721A679B05BB2CC81D4EF0304D68D2C
B6FE3A61B160D52A78F04991F8258DC9791F7019DB8D8A546F08E189D443BA640D75FF23F9E
8A10582631BB7724BB27F741BE93EE30A695A379AAC97807B2207C78BDB79FBD9716344360A
A8C7E98133DFACE570F631C326EFF3E91DD561B4BD79F3C1CDA3229D96B461C6567B97B6A74
A9F39E426409627F72ADB4FFD153319AEDF1BB51B2978BDFBF959F60C2354D976C90969D579
FDD57C7A677E9DBC76F5D6F4FE45A4C63823F1907E531A783472BB513BFFBCCDA7A48E44BC6
09718CEB324DB39528D6E6D6694053F45B6CF27AAED6F5494F9A11D386870B88C88389C5FDA
6B6A40369ABDD985C7C1F059ADE1D3935D03649928268AA352CC25FF563F8413BD57FF0F373
DE0552C31ED68DD4CA056573990D919C43C55B5FD661B1B807A232EACC7E2D3522B98516423
55687D28E9DC9C71EDAE988A489903CBFDE98B8E6A9261E1B2FA87F7DEB5684C33F109EFBC1
CA2E231F78944B91183E7366491E3A8262D1EA72996460D3B0EC515CA2604A763B5BD88CE31
8C655B60BEDD7DE46DFC4FFED55D006C2BB8E44080A4BB77FE85DCED2C4529CA45CB14CDA30
8990DC5F4C1D047EEF59237B70078555AB030F3883EFB2507768F652548B2336CD092D9C7A5
E0012023674AB979581F8B1EAF4664C1324197A5716612FA52E46793FCAC25CEF591FB8FCE5
CCFEC956D75BC4D2EB42E18C9495B5AC0138CFE6363F2CCFF93533F2A71F2E10CDCECAB6C62
21B6C0CEDDFE6ACB7972FAEC8D1270EAECD9757C24FC9307C383EDF59FDEB0D9AAF97457773
98C72FA7F39D72A5349786DC0412A093F4A3A4D6255F5221F7BC36A243BCE0A8391B38A4B68
4C148ED9F55CFF6DF84B8EF213996F77544EFA9805A2DF37B4C47D51140EB96EBD3FC295EE4
E4F59CDB896974F466FD66E8B3D154CF0C4DF38E1E5F809A6A2D9795D93A45137E3AF2BB629
3A3254A1163A0BB57E12B5FECA2C9C9920C1D72E1B0DCCE6F8C49CE5ABE492B7EBE0F9E0BD8
16668377F2BBB8F45911C293E37D4A629E80AE363A3ECD268E680B6E19D9EC9D561462C0EA5
63DA3C29C1193CBE2F2D1C04D09FA8FF2A251546A451140EB96EBD3FC2CE88A96703633A45B
A2749F055FFEB6B0A834D8EC855C58920C1D72E1B0DCCE659E5E677BFAB83B7EF1486048608
1FA67F1398DC7B389134E64E47A4EC362532631B07230A02112A5969442189EC7BBC95905BB
853E9FFE3119E4BEF0ADD28CBA98A11F388C856E65C717B61A4F28B1ACC945D2E69BD5B1230
2F96444F364216F86C2838EEE8D87D306E50FE2596103064F73CBCF43735805ACD61A7D639C
412473D6F6119199D18D459215B22EBD763FDC52CDF67E11A556162CB0CBA4A60B4F764A69B
595D46E1CDF20ABCA5556293315220973322A12FFF2311B9916788474DC20F2F86E8EB94F60
C2354D976C909D3A27045E95E4A47D75F2E06A1D256EF7A1E052D1F2881E44E1134F0814205
245C0F094EE8DB2D51066CFCDE5DBD748D5442CC78E30DA53E2018B477EF18358F17C09B22F
ABE2F6FE8B497FB345BA812D3A27045E95E4A47F4F8A452E9387377B21878535A04B8D748E9
EE29BCAEBD5F793D67096B86BDE9F4C728B1091130EBC0B692BBB5369C667EF4109DB811E15
16DA5543DE6777BCC9DDE94F64EA288E2FF2311B9916788474DC20F2F86E8EB94705619EC9C
DDE06F180F66877BBBFBDB453EA0EFE088AC49A0AD1E83F29418B5CE68716B9F995A5A80ABA
C23F831FB08CDEE65DB3B15F9FC4FE43B17A4B33B1165E1E963F6C24234F8FFAC012FD9EF0D
428B0D27DC3B10FE2B69C5E952CCF88EC0D95F65E32F9FD2F7084A25A7098A51C758F4119BC
3C51D99AE6091CB5C83C730A7E8627B3D9018E3C10A7B0CE46AD140628F2A28C21D2253880F
EBB4C3C90A8BFD167A5AC97EA6EAA34FD2B667499A949D62B1238A9635F629E6709B13DDC61
813E72D4461AA8C94680FAF601066D0CFF79BB69BED0083180F66877BBBFBDBA4331E47344F
321729A9CC825BD15F7377E6DF0AC8CD959694F0ECD0822ED21AEBE0F9E0BD8166682F30AD7
D4E158F7816EFFE7B7EFF71A4286E7782ABA5E1007BC36A243BCE0A838473F184899C6AC9B9
FE8F59AF95324693F992B12C574269312BD5209F170544BDF28CCA49329026C5A69ED302C8A
241EABFDFCAF9986F86A1F7E4174710D46D9EE1CE550C0898997ADD521257CAD50FA7AD1E30
512B3E078F73F4BBFFC2395D6FFB6C9F14F43A43967754074251BD5CF6A068980EC5E856751
491BF77BAEC537859F9B55D0E59E84AA074B4F2C2733A8A54AEA7422231D795D9734D95EA1C
BD052A9265094C3C082D9DE279F0525852800B74B9D434E546E53BA44E9BDB9C985CEAE166A
BD4DCCCD0BC31BBD5D0A7A0F9ECF3D4868D96F963B1DC20591C0D933D2961FCDA768FEF5880
41992F12DEB2C5DAC11284ADDEEB377F2BBB8F45911C1F989BC8DCECDDC7974F466FD66E8B3
D195D3A9F3303A7B214E8C16092F0A1C3CF1AD31CF1433B3BE51594A862827C37146277ECE6
523170414F2CAC9866F7DE949F000B377986F39AAF3832BD46CA4AFC4ECB7659CE5CAF3084D
392473BD48F48C56D54E9983AE8E2647A9906CF74F6EEACF9D9D65C3F5F74DA05E7B6A76629
92E4E3513FAC657311B96F345C61071E42CE694F657DF490F6018FBFD178BDF0FFD1ECFDD37
E84C0C3C24FF0E59ACE96D5DD48F1466F84DE21DF6E1148A0518A491F9E18FAF7423E253B63
5255E0E16CE3E986467520FD96B7D334DFE2E725974B04D6F992727EBE445073B1F8D514940
25FF52BC6CBCDC1D5F3C69A2EBF38302007E8750E8493B02E9F8605EBA76ACB2EB3A78375BA
5FB84193BBA5D250773B45A4C63823F1907ED20F1AD0283F3E1D7BBCB43B6AB018568E28CFD
A73571D3C0F4C480CAFE0B20467DB527DC3D726D1D55D006C2BB8E44005A95C5C3A7D462662
DA9BB57979F7F613CC087ADF76CCE49D796BE7AE2B7AC74AFA9DEED3B6FB5C56F3536E93CAA
110AC6A6FC00A5676728579BCC9C9981E82EF2EE2E6F81CFA78A0B9F6D414B7BF1C6FD3CE93
BA496352EABFDFCAF9986F86D165FD28F91D1DD2E46793FCAC25CEF591FB8FCE5CCFEC95374
B01CA4B534540366068CDE2EB2755316CAC0C35F9BBD362AC971D4C57D81440539CA06168CF
D1E033F972E9592CD17F94EF06585F96578544775566867F61893CD162BA688856064E14727
6CE8F6BD3CB8F18B25088E0B121B36FA8268E6258CBE8A2BFF2E3D23084D392473BD48FF756
F39AD9F17FF67628403CF994B4547DAD9FE3378D866CC74AAD38CC6F2004B0008C96BE4801C
98CC4720577C1A2F3186A7725EB87C17016220C813F76D898B3035FB23B441846119E4BEF0A
DD28CB6FD3CE93BA496352547E4B610678CE9ACE1BAD70A09793FE094C082C4D4B39AFBDBBB
602D5A3D3CB5466EE72293985C60AE43D8970B1C34309477B36B0E01D7474DA05E7B6A76629
D7F11513FD85C0287BC36A243BCE0A833BCB4E916C02318DB9FE8F59AF95324693F992B12C5
7426911E002196A142864DEA1A8B67C13AF842CFA81056495657A33FEE8A6EEE19399B212A2
2F1CE865877F3D53AAAA31C7EE07333848D5061822B6FA2A1F6864B9DE377F2BBB8F45911C5
2BC99AD7A329C5AA2C984B00231F0636F825B6B537D8238CA9980958E39687E4CBF7AFBD566
E12B70674045BCCD6921C0AD74A3FC6EE6400D67CD289CF8ED1A90CCF6255B90C7175057DBF
B1DA3F26F16C8B181349A2DB7D4701FB2DBED567CB372E73090BC42EFD91D145D4FFC84D4FF
A211AF2EC0672E86F337AFBC4F09878ED92C45113F60942CD7FD0CEA8DDF8A96EDC38F9C896
A4566848C70707B10993ED15C53EB9CD0EA62EA51E799426B006AFCEB69AE7F2033719B6A03
544189AFF04A2009C53773E7C3C7BB50B40F0D3FA04CA0929BA75F193F8FB9A3EA36CCBA979
961613623083479B50F78A77B4B9BB81B3BECDE6BF00F453EA0EFE088AC49057F34D7238CFE
8AF60C2354D976C90949EA2A3F0641D59EAE77A1C7380D7E74675419DC77E7B39C81BC54B01
B1032974BCCC70CB21FCBA307AABA30D3DD6056193AACA2795B4792D9EC2F1DB02F407AA0C2
3196BDBF75D8902ECEB2D7577FAC0C50AAA819FE05B1D3A27045E95E4A47D7B0EBA659D0235
A37511A9ED771EC7693FAC37432ADDBCB3E0A784888CC5FFA20ECAAB6C68AFA904CE397E859
65E4B72D9DE279F05258520DF57CA9E5CB5C736931FA8BC30DBDF4DB16F2DF4DC303457F3D5
3AAAA31C7EE2E4AE9350B1392CDA041DD9CC198AB4C5466EE72293985C6802FE333D1FB627E
FA067A0F951807F75EA94BD9014B03357295F9BB152B6CC37EDB35C6E5BD06E4B3CB7F06AD8
A8DF9080D53677735C73C483E248B2AE9D7A1437B63850745C992A6455E1C08745CFF29A9CC
825BD15F73B359D5EB9086B4C642C223EA5E3818E6E9720EB71455E73FD6A68B9D4E77CCD80
E4D29DD99F9ED5D317C5BDE61E759B792BDAB58D82216A11574963E0F4063BA30A7E8627B3D
9018E3C10A7B0CE46AD113D4FB94AA8B5B173D41C069F564630C65A205A017D45A39C515CA2
604A763B5BD88CE318C655B6073A455D2BF9E058243A8A3F91C891D409D2DCD660335CFEECF
6AC222E2BA43CE7E1D00CA2668564A0E440E912B93C1ADC32C6847E528B2AFD0540A2C1B089
B487FB92482BE00D4310A039EC03F46F205C9BDDC311EB61351CDF05EC96B36C3649E002D19
8B2B0284085E33BD5BDF56F3B8DFBA67AD3B8578A8DF65A1CD3172B8A6D1F6A08AFC7BD6F78
97E028B0528277D9BC55937205EC6811C127780EC51324AC3C1A424CC6F2E445073B1F8D514
94025FF52BC6CBCDC106DA4387F062DEF476D1DCEC4AD9D44CC270DB61ECA8801D48E9EE29B
CAEBD5F2F0AA721797C617B4E1134F081420524C54EBA2B77137D55C7502C6E9A5AC4D735C0
79CD53C80D30942994824D76A5BCCB83BA820F46411D443741571C6B9FDF47EFF6FE543FF90
990C2C9D4CCE25166E7410C103AAA4C87CEEAD3755EB62958EA0BD645A611A5FDE801993FDD
50B745C494CA0797CE6754C3991875BCFDC327C05DFDC4DF86E713F40C7D016A0AABF73C550
E514A0534EBE253402394EF1E9639D58F7FB81A7F07E621BF8E9B987155846A739C9073D959
806BEFB6A5CFBFD591799C9A92BFDD715ECE7CB956CB51C5AE40F0282712E3B88145CDA9E1E
18F9217D3F2D8328CD0079327677E62F8BF4B8E931F57601C02A2AD5281C5702BBAF8B9BC91
DB6A9C525858F75B82D4744BF14484C85D744C12DE5C795BEC60879172A948A9B29D9C0F609
251F7A0C4D82D2F48B2CFA095763D3F85749B1CB362453AC0295189663B82568DB942B93472
2A166E5F69D9E75ABA952CEA3EE303A032A62CF7FFA864B91101D23B6648B1C6E0D22D9DE27
9F05258520DF57CA9E5CB5C73DBEF262CBE4E3DB0D3A27045E95E4A47A7F79F371388311A64
F78C4CA5CBB491B1D4FA1997ABE0AFD021F92B690C8A8A6E00E84EE47BDC65FF6A151205053
5E1F764A69B595D46E1035EF8A625FAEBA8EC5C9B52D14C587EFF2311B9916788474090C455
3F6F9A4439D58F7FB81A7F0771591DBB9E30C3340F800EFAF8335D5F5549D85062B3E006E92
B116AA636C4092C6873D874B7542F2E3EE212EBBA0AD9E0DE345A90A01C2949C1CC0BE1D58A
9521D307F841E5734DBB0EEB1CD982BF138145CDA9E1E18F9245D5828262AF56791BCC5038C
3E3FDA5EB697862FDF98086AFFFDCEDD99CF16464BF8CAFAAC667C7799ACE2E311D82B8220C
28D1BC39ABFCABF599ADCFBC0E8ACC20E9BF824C5BA132A18D679B54439B56D22F78C9A370F
CD880E78F078287D163E5167AEDEF5165FB3B93CD13238804564AC39CD386349599850603E2
776ABDABAB9E080FF22A4E9A1CD015FBBE7DE5F6A3F05DDAE4D75650E29B7C31D6BBB268942
88E06839A582123AE24FC112B24550730CEAC926B778E8F777EDBAEC646F8E044CCB81EAD3E
24FDBEE0781E4B7EFE15409A57EF8E024860C5400289DAD64EE12BA9E7A8E68D79B50F78A77
B4B9B1F5BD3B7B40882EF37511A9ED771EC76A3E7FABACAC8F82E602AD7439E08B666E36874
56397658143EDAB6867EDA9CC1913014BDE6288D113C5583508286B2236AF0A48A6DC9DF54F
706B06378DFD13E06B33D97B02E5C98501B79AF07DD4D102BD663A2862DB051206BC19E01C1
5BCC75AB7A46A75AD95A02C5BB5E8F4859F90388276F4CCF5B47B0DF5E3A26EB1055AEC2010
35FF55C52E3687456397658143EDAB6867EDA9CC1913014BDE6288D11DFCC105EF149297949
26CFAD097C321E9B39CCD51B3C487E001DA150E223006848E9EE29BCAEBD5FDEDF9A3AACD33
9E93D532B564C03D9FE2E872F7803FE6B4764A1628BEF03D3543C550E514A0534EB100E70F6
F54A52EC5B33E0691DD202D26ACB7972FAEC8D1270EAECD9757C24FCF2EDEDC0224887588C3
684085A99498825F6DA4D7DB56742BEEA42DE5E7AA3727761FFAF1B816F7E41EF1BEEDA9E80
2F1321DEF04C2540017A1ED47585FF5B6B545AFFF94A394F5B317D8E9A70F2641904C77F004
AC482B8B478B89E3252AAFE
-----END ENCRYPTED SCRIPT-----
}//nuclei_detection_A_inner()

// ------------------------------------------------------------------------
proc nuclei_detection_A(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
//OUTPUT
objectlist Nuclei out "Output object list with detected nuclei"
) object recognition, nuclei detection "Nuclei detection procedure. Detects nuclei on the input image."
{
	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei. The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")
	
	// Inner-technical nuclei detection procedure
	nuclei_detection_A_inner(reference, ThresholdAdjustment, MinimumNuclearArea, IndividualThresholdAdjustment, MinimumNucleiDistance) 
			
	ErrorReceiverForNucleiDetectionLibrary_v1()
	if(ShowIllustrations)
		imageview(item=InitialMask.border.mask, label="InitialMask", title="Mask after the initial thresholding. Adjust par. \"Threshold Adjustment\"", image=reference, gamma=2.6)	
	end() 		
	// Removes breaking lines between the stuck nuclei, 
	// Input parameter is fixed
	controlbreakinglines_v12(nuclei, 0.8) 
	// Adds to object list a contrast attribute
	object_contrast_general(cells_out, reference, InitialMask=InitialMask.body.mask) 
	
	// Creates the illustration "LowContrastObjects"
	if(ShowIllustrations) 
		set(CL_Temp=objects)
		objectfilter(contrast<=MinimumNuclearContrast)
		imageview(item=objects.border, label="LowContrastObjects", title="Discarded low contrast objects. Adjust par. \"Minimum Nuclear Contrast\"", image=reference, gamma=2.6)
		set(objects=CL_Temp)
	end()
	objectfilter(contrast>MinimumNuclearContrast)

	if(ShowIllustrations)
		imageview(item=objects.border, label="Nuclei", title="Detected nuclei. Adjust par. \"Individual Threshold Adjustment\"", image=reference, gamma=2.6)
	end()
	calcarea()
	calcintensity(image=reference)
	set(nuclei=objects)
} //nuclei_detection_A

// ------------------------------------------------------------------------
// Technical procedures called from nuclei_detection_C()

-----BEGIN ENCRYPTED SCRIPT-----
9F201763F555D4419C709BEEB8695B7896EF4CE7A96D777F69CC5FB5477C53460FECD15C1A0
DDB15C470A72BAED17CD85FD9AE5984A529B4331F97B6D1C71DD093F1F201AFE3460562DE71
1D06A0FE6D1577B8F3FB67D2C879F3F46401E6BF1A1BD3AA266250BF984E601CFAAF927DC4C
FA01153CAB20647B4B68D3D53CAA76B:3726EAEB5BBD322D6433D06C1A9E99C95BFFFDC8A02
7EB5C2F2C89DA96C59375D99F26A0E273F2144F5F9AA8CE69A4B0B2BF931CDB2CF792BEE21C
37C30D30DB02AC04419E16F1BD3BB4FB1520B6049077EF2E110D06F1DAC13BB32B334F1164E
8D594A8ACCDF1987B24DD20150ABED9B94466D32E99221DA5825E369851538B/E7F0E6D7CF1
8672CDC2C31A7CF76DDA28280B5A808B11A902520BE6CDD6FBA7D329A59408D717085DCDFCB
4D5ECD364DA04CF279667CA15F4AAF16BDA31FFA7039089505C527E1D145FDBC553D0B901CE
3C62FFCC225A99DD06F11F694885B499C94906D4F016786A0D9EA43B9FA3FC3750D041B1861
1CDC9E28C4FBCD19745A967AF0829E622FE429F33E6C93E650FC2C13B629042DAAE8E5D4BC0
3A94C53CC52F8E405C924F7F62E106A7F216BECA9EFE58B54E6EE97DB9AFB57C01D504DCA33
FC340A2D8D595E5967FC871CC187B8D2A3C3194DD6438B347ABD5422B7BEEF9308C81B41232
9C8D4F080943F92DBB82E0296129A796CB29AB2B3AFBCDA901F4E087A1E68CC5863FD3A38DE
758746B9BBB62B801CE0DFE4346C9D51664B2B1A117643F975FA740FEF1D07169B28CFC2B7C
3EE57A7681A73DF79A0DE722DB7DDF63C698770F56A18A20FBD178E6B1DEE94348B25DFA171
764455ADCE3747CBE026C9A6E004EA04A470D379F5172A8C481E6B7E135E67138BC6CDBF562
CB73164894B95118376ADE784E9ECDA3F4B5573DD049F5C98EB54AAF917D55FF3F342732F4F
55FA4B33DB75E1611C8ABED5DBD35D0E38820BDD8A8B089AEAF6E9364A5C32BEBD79E9E5F0A
D6B0532E80B691CE875BBB6204DCB818C737BA61EB693D00E9C05B803368C3A525C3688F50C
0B2DD685B2D20AC28373D27820364472E1B0B0E19663EFC1BC085097BED1EF4618161238AD6
5D6100AFC82FAB4B31CF9DB136B81D7FA451E2E42D052F8E405C924F7F601A054AD1FCD1D8E
4D566E8FA571A0454351F5E9690390D7AA1FBE420F5F7124C49569377470CC334A8723DCC37
151C81A261B115D5200F1142AAF3136909B4EDEDB50B3DBEF2B09D2936D1697C6A00ED31E7F
03B16A8161883451B1A073F59624A086D28D988E891C543722370CF4D4C3B36E40F352B75BE
FFD65D03D7B07621BCA06704AB116DEB5D743DC898BE839325CA51F2E4C5E3B3EF02D833E1B
1331EDEDB5B9B6AECAA66C24FED84FC18C189AD5C4ADDAAFBA95329EB4FAE3C122ED55CBC32
7A609CAD274787535DBBD46EF2A34C9ACEEA316F788882BF0CD8E3B473E974D0E11BFD72E37
B1274FA9A6996D1F1F0CE83E51FFC7205A426A8FEC72C7D69B3B7027B86119353FEF2A562AE
979398C784F9844A2377FADB6030FC26C0BCF60E841CE053ABB7483379AC599CEED1735F677
25E1365617591B8454759AB9ACB553AFA0B60101436607C12C73BBA34E56FBE78A256921491
423479263474233FC340A2D8D595ECCA1026F7FE206CDF93BF2A7041736577E22A5B29F8D87
4D414F4CB72E35219604C4BA17C3DED33B03AFCE316CD609601D5405781931B84B351D70BDF
E98A857B64CB785298277F297BE288C755C899D4DA1E13DDF026A97BD6911ECFBAD58E1CF99
58E16DC41A3F463CFE6CD51683EEA0DC46DD799031FE51D2E9BA1C54B2816351AA0F27D8DAB
8551BF9B74CDCC2CC6DB69F7E47C194488EBBAEA71C3C2C34B6D74ABD73BE74B12DC641A1B5
FC1C07A56EF720575F42959449A2EAF8BE170E70E3DB26500DC9D6A4FF3CA416A731DBC7732
E60005201BA347ABD5422B7BEEF247ACE7F1FAC6B245B12873E6D9D5028339635D6E8AB7154
4652371459EBB4BC6C066B3AE61F09009DCA9929EF16E65B5A79E9F3A60E594C49F7EF98034
C5B4632FA7A8BF6B280BD1C0F05CFEB9501446C20EF9434939E5CA309E5F20709B6E3F537D6
16E96B02C4D197D90E15CCFED4C7A4B6224508873AC7A4B6224508873AC7A4B6224508873AC
7A4B6224508873AC7A4B6224508873AC7A4B6224508873AC7A4B6224508873AC7A4B6224508
873A12F4048368C8AED035BB12FC2790101D09BE41C852F95BCB9D27259F13F98BB8436E4D9
59404B27E67A80EFF929C1B61F929ECEE681B773026A7EAA100AAF0A641488FB12EBBCC0560
B7C576CC8441706361B5EFC743593AF1FEC52DA24FA5F8E4685928CB5404E80644738D35CEA
1E5E54CB6D8D2B22AED32FA46CCCFB81196AD3B75A00E829DEE27BE44CA16EF951710537FEA
5816D2C501A143F32373550E9E60DE2D3A825B898C547CE63C54D5CC8D97762FDA1A55C55E3
8953C29F6F7ABDA6384DE5CE12E7DD49AA290E9353856C10A4D7E59CF9B1374FA1BE2B8B696
5FE458E39E10C45C157E23D93277043538307798C0FEC678C58DB4BED30819E54724A086D28
D988E894441503F06B173C130A0DD464B51A6A7139D164B4874F0603B6A3BBC4470BE8C7F4D
1EDA1A5D048A4F4EC2A5F5580D2E8A36C87B1ECA3BD6FAC4E972D1A4C9F4E694229CA69478D
7B2A8CAD5B0D7A34ADE3054784C02574E3BA925C297F06C7DF568A675EEABF15F5C8B919478
3509F8C56468533D6662D913956150320F1AD2D3E997C5653B01C044F9A4FA2A5DA4A28F37F
CDD94A646675B2C3AAFCE10CD81FB6CBB18266BABD1C49FC51501C2468D9FBE7D602CF95333
33FB052D0506D163DF633F540371D9F91C215C189D0B879F3EB1E2351A8F1321D31E7F03B16
A8161DB02C704324922A2EE40158C8A0B18A3C43627A899F2711F6F9DA22D3501DB3C86A2D4
D7B643D438C3B36E40F352B75BEFFD65D03D7B076236D08544B0AB90F175EACCB9B926A6F69
BD3F3977FF499A5C7ADCF483BC988A50F189F1E7893875BD8AB1774998CFF826CF15231F716
ED926C0C6D6C166C891D722238C66BCF0D6A2DC641A1B5FC1C07A56EF720575F42959449A2E
AF8BE170EF378BE30E6D4E3004796DA7BABB7B001049A7E9CC4E1396DA7D7A0F6D7A8A6413E
E73A69328D2607B126E3330E22AB1DA518A96A5CFD8D7E5C8A92AA50924881E8D21F887C82E
028500F75C29ABEE49B0A71D1BB3D889895294611A57490144C4EA3981B1C81E229397DAAAB
B58637DE35AD20A9E29A3E5BB2E11A6A6D20A0DA55EA39E66DF819FC4862BFBA48EF801F6D0
19C17B18DEA459B37AD5DC63FA6C5C7A4B6224508873AC7A4B6224508873AC7A4B622450887
3AC7A4B6224508873AC7A4B6224508873AC7A4B6224508873AC7A4B6224508873AC7A4B6224
508873A054E91E0B5CE131ED223020E5F0153BD70857B675258ACE8B3527CCB4A8EBF257FB5
D2455BA5D52C4633425ABA750956365EEFC6F6556EB1231EB409BBB49B912DBFBDFD6E9C052
1E18EB91F3891753D7F8C298E663487957294CED9124F7AA34B6A37AAD8FCD0964B073B4B3D
8720A514619313CABEA3F9ABF6558CEACE99FAB5FC8FAEB86DF17BBBB62B801CE0DFE459DB5
68B177218957DED1DB7E9EE7B45DAAD48D919FD80526804B0078B4A08C67F0B8595B81C0914
7C6188872CD139B08E076C1E921B72D92B184FF45B1214FDB0F86AD125D34699B8C44FC0A50
857552DF278F0EB796CC0D1BB972F5291EA177CAD011D08E9EAA8482B20858A703D5E5A342E
4F9A791411C9A5A839E0B0ACC8B9C97299AD52B838004819FF8B2625537B69390C86C81B021
BAF9E17B87F590EC31B2D122D87349EB37FDFDD87FAC3BD5C8555A495A5FAA8630FD3DBD1B3
0F0C50AC007600F3C34314B02443FBBF7B4A91EB84DFA650B37DDD87BCBFEC1F9538B0B0BC5
11700FD27DDC2D0939C6AEE4547B82BCB8B86645218014D0E99DB93010CEE46BED75EEC6B63
4B59604D2CB6CD359B6CFD606E0EC6DA440D6DD658528A80BFBE5FCA28AA357E8CDF298E627
59969C93BC92876D8655C0BFD31202934FD8385B48A4DD18C92E834B4E8446E7C8D02B51890
8F9E7920D5BFEB39CB203324DCCB53C8A74E5F9C81D842A7881405A1CBBCF54D456A799B998
E75BEBD6DE390AF91D354D2DF33D99463A8CEE49D9E9B70CDD0D37BED4A42B0FF81EE9CCF50
F5E2E9B6B3A1A3B42928B44FC103BB871C19A6CF110A69396E60AE8DFAA3A157C4393CB04A5
C86219EBC20EBB564B7FE992319D6CD26DBDAD4E22D1D36709A93106C65A1B3FD13D102BC7C
2234E5EDC9E40503C64199EF5F50AE5D1027DC37FCE375B74104E8E994EBEFEAF560A9DEA7F
40D877FCAD3961F7F52F40AABA21594DFDDAED5FA79EB382F87218B2B187A02B5F54D0C7BEA
D84F2892E1072C52E1876CA2670C44D0664376556129FFD4FD37CCE1EFC67871D78F37E528D
B60F5811E0494038EB54DD6D82BCE98D8E37A352820454857730F309AFE5176840011B284EA
830A4F2606C8AE1F6F3B72C4AC24707532516FC08CF16D4EC107EBE2EBF35422129898E46E6
E5A0C824FC74A5A3D8C3CD1C460049FB9144191B918E875C33DACC0B8C577A6E12BBE2E7799
34EC1FFA06287B4C79C3C4BD0703109A3900886CDBB132F058D085B0588700AAF8489E9E1F8
5A86AACA6A9006B6CE7797CD0F0194888220B56D65B9B0FD1D15320062BFDA6ECA62E2E9509
FBE2B3DD5BCB2EFE5378A57A91E2B45A197308714AAAA670BF8161305002932C19DC5B504F4
ED683B202BAB1158F4B3DC8870E6946B8EC857B806E9074A6CFF113C885A86AACA6A9006B7A
C858057D18156E6B93A6A663D05B1D268E687A0C45261F21D3F6C52B476D6DEC0799D8E82E6
B4877345B3FF9924C153318AB50CBEABEBA9CADC74C6521D929771F022996DAC272B27EE0D8
7376D4B9815A3EDA28301DA9BC2573E848ED87DB83919C3CB85BC55EAE9DA212A87D9547E43
E75DFF9342B707E17C51AD665FE713320A04AA9647EC0FEFFC92052C0452AEEBEBC9A151D7D
15E2E309FB8D54D8855DD62A4FEFD9737CD70F1B0108C485867875B78B3BF4784680CBB5A8F
E7B5E205B6EFAACA6A69C12BAB02C094F3501240B3649AC049A390FE7A7C38A0DD3B6986894
CE54B73E4D6703C2078B850CDEED2F6F710305EF7D416C9B5A4B38004BC6898AECB80336473
D9B10578CBB97EB0DEF47001D839DC075AA7F2931B23D3F1135581E1F01F4E9298DCF8C1BFE
ECFC1C74C3B6D1878F02C6CE38BBD383A0BC13B54D90257A8C7436888C45F1B795F7CCEC9AD
C03DFE99B2C1AEFC92447FA17FFE86C1E676DFFB9E5F05CA367CEC60D9D4D5339C77F22D17A
31C0108788C0BAE4838E9B8162A4ADB1A41511E3FA3A8B4EC571AC47DAA9A7CCC406DACDBB9
FF9696DA5D06B6368A81E271D7C5DD8B1B60813BB78AEA24A07D13CA8F2333D1B2E345EC19C
F2F8F33D74
-----END ENCRYPTED SCRIPT-----

// ------------------------------------------------------------------------
// Nuclei detection inner-technical procedure. 
// Detects nuclei on the input image. Called from nuclei_detection_C()

proc nuclei_detection_C_inner(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0. Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
int MinimumNuclearArea=70 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
double MinimumNucleiDistance=7.0 in "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.]",
double NuclearSplittingAdjustment=7.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
double SmoothingDiskRadius=4.0 in "Radius for smoothing disk. Nuclei centers are detected on the image smoothed with this disk. In case of small values InitialMask is split to larger number of separate objects and vice-versa.  Adjust by illustration Nuclei.",
//OUTPUT
objectlist nuclei out "Output object list with detected nuclei.",
objectlist InitialMask out "object list after the initial threshoding." ,
mask DarkerMask out "Mask of points, which are darker than the surrounding. The mask has better resolution and the higher noise level with the smaller values of NuclearSplittingAdjustment and vice-versa the lower resolution and lower noise level with the larger values of the parameter.",
vector ErrorInfo out "A container with a possible Error Message. If no errors occur, the ErrorInfo.ErrorCode will be zero."
)object recognition [hidden] "Nuclei detection inner-technical procedure. Detects nuclei on the input image."
{	
-----BEGIN ENCRYPTED SCRIPT-----
A11960FC1F57A3CF3C5457F4E032E309D6B6AE35DA71B5787E810EC577D4872393009792BB8
1FB434C20D34CC3917DA10D2B14A9A5C8F6E728257595CAE59E31AF05CC603635D60B0A975D
0980559BA38BF6B33CA50E2C6C62749BCEF901D97614EC015D4FAAA3E52E747CBA40DDCB98B
246B10D5476D794D9B15B93D9F318AF:7133FDC6BFB302CD0859147932515250B5EE5B5AC2B
0A33371703082098F66B0EAE51FAF7040FBAA709284B9802C6B7EC68F304EE8D41027C9D57A
FD8C40D52A8ED7F82D9FC0F9946CE6442B88D69C0BB0C1809AADBF3497621B8CDF57A017D42
515A8B09D204F280FEB1B556AA9A98BFB713E92638036443E0156AEF4E68927/D0632B2E7DF
19A5634457F99317536271E0DB86DCEC00E82B185F2FAE84A8B7A89B254283E98B1E0EE1C24
C2F64CC6E83CB06A35AE2345CE3D884157C4CF2DF7B57E134C15BB3614EBF5425DAB64B3256
16DE08AB8AFC933090CD5CED421030EDE0AB7011D6B038B7E1BD978ED17D9ACE8262E02F318
614E26379C630269C9F6ED6C8C5F807EF05283843A2CFF3D23FBC9E229EFBD5C6568105357D
A277D3A7FFC2ADF9FC4D12FDC4D9003A60380A1DB293DA25976271778947583204114C521C0
5F5CEFF57E580726379C630269C9F646744D2B3C84CF55FCB10F9473DB8DB68AD304F062013
90DED52C73629EF6F564B812A220A5D0649286C7477788DD476C843C1721D791ABBEE6D7628
E7624BB34186389E9481001AF446CE0BFF1C2623174DD62AE26F97D0A6D929E4F91043CFA5B
6A256774F52CAAB2BA2E489BD1AD7BCED088C523D23B75973E55BF8EF2F360B9C64C1B4A363
CAD7F8FF13631F745884F53C1BF0C99CDDAED07EBBD3E70C3AB2B1CBD22C25DB7B3833ABB02
E254CC867A31A68E44A631A1D135EB96206100D6155B7993B4A7C5F73155BF4401CEFC6BF58
39EF2546EAD1383D2D2AAB66A0465F060BC3C63E41B6257B5553B28A7002293DA2597627177
820575AB3DE50BF06BAC5A6F5340E9FC9F0BAB29E0033E372E92D040647FF353F61C26D8CE3
3708C1933EDB62184D9EB7D98E92C0FFE74A668F5C989734E939CA71C5F0D180549D52229D0
6516518CF0B56EF241BAB20583F05DDDDD304E9FE76F54F0B96FACCC16B663EA96A8142A578
07CF2AAC1441D913FD636207CDE50D68BD9A21F7CAB89419D8A46FA4E716E37F4DB69880516
0B398081F5ACDAD4F85390A52046E9C6A8CC48FCEE3B1F8F23F2097F60D30C0CE9BF969D367
B71FD7797053AEBCDA5C4DB65439B0B0F9F88175542F3FD9F866D4AE2826379C630269C9F6A
21FB2FF4A462F792142039487D05CC190579EEC2AB3DD4C84D8E53D528E89EF3223115758D9
585C4240E399803B6F143D82C66AC3B9C018BF466FCFEA78D2B365D8D642DCB7A9E5B43AC61
2D1722EFE09B25D46419E93361F8118C0475D500D064DF05B59DE8D78FF85EE78B10338F524
DD1A09E912657BE876B62D85A9FF174789CB3A977C98BF1DFCCB7D150A80368DAC006D988D8
A159F915CCE21E352D8F0BAB29E0033E372E92D040647FF353F86A9C0CD028757FD84D8E53D
528E89EFEDF490DBB7092DD8E513811FA4D2430E6DD53220A36E7C9B024D632B0E909600671
C9FA58CDAA777FDF186FB5A21A151A9AE01B027C9733BF47C67D70BD0771D6C1F710FBE76D4
59B38C9196C528EADAD3080047B25CCE423A5C899140583A8A182C083E6A6F9A34FE89978AA
597229DD236A1F88DC470CA7913E4CF9FB2374B4EA5A16ACD160AC15A3772856032F6B82E30
D597AD2514F1E3455AAFCF6924ED07F10136EC9C3AE136EBFD2249C10295FF88ED8438F1220
1933EDB62184D9EB7D98E92C0FFE74A668F5C989734E939CA5C9EE90C418AD23E229D065165
18CF0B56EF241BAB20583F05DDDDD304E9FE76F54F0B96FACCC16B663EA96A8142A578FC74F
C73ABDD5BD4C493CD4941B7F700882695739B3080C3CFA88FD827F6845C44E83F1EA536A364
591FE0D7C3C42E7130120523C39C6FE1DCA64CA287CA63BE8957F73A674BC7F13EB29417D88
F89DF6BDBFBFAF6FDF291E1E0D97908058ED9492EB874DFEE3660EA8F478C8CE02FF971C5F0
D180549D52229D06516518CF0B3954E8E9D3624594B8F0483119DB23DE7C4C4AE84174DA9B2
93DA25976271778C5F562937E200844B1F20F96D5E794DF262686940A1D751D4F5B96084790
1B2FCE37AA734CF837219859C85721068DD8A5D84FD1F4322C0462421A1883E62C76D0A299C
9FBEA52C689F08F907FA06AFC65853AC6A0B047FF1051A841D661D3ACE876B62D85A9FF1747
89CB3A977C98BF6D16A13154D614B15B24365699C34C13E2C49741B52F3687684E8A29D3AF5
E2886A9C0CD028757FD84D8E53D528E89EFEDF490DBB7092DD8F038324453FC3FB76DD53220
A36E7C9B024D632B0E909600671C9FA58CDAA777FDF186FB5A21A151A9AE01B027C9733BF47
C67D70BD0771DE43EA2F9E891EDAFE2C49741B52F3687684E8A29D3AF5E2870A73E1E7F980F
994CF0C54FD85DE3D6840429AE107619F9D47CDF1062AA753FE9E86B1CDF6C13DA0B1C32928
0AE1A9C62EF1DBCF8FEA7845953FD1ACAEEABCFCAEE21A6E4102E985B907DCCADA7906FEA29
A4FC31EB9AD7A0EE0349CDE643C41C1DC59584F22137B72C27BCE63BF3D14159F273EE1A227
FE1E0D97908058ED9492EB874DFEE366075CE6A5531C9B4AB01E567FB91371A5FE06448F198
CECFDEA3F0914193FCF0EBDF6150003DE8B000BAC01CBB8D72B1EB2FC0240E125A3481842FF
5936E31197A6B92720282342693933EDB62184D9EB7E5A3FF9C6A9F71C7C5EE4E290413E0E6
DE50752752C9087126F2EBEE7E125788A7F5A49E178F0ED74D3F9D281D1BB1BF2F1140C3F32
9A56A0FB3E84A0090680B382CD7564C7145D578014CA5785ECB995D23D6214B446446F9D09A
CADABB451C4A67E6838C878D895099719859BB3DA8F1DB52CAFD66294518B8978CA325C24B9
0180408A5DB43521B2FE23183A01A1D0917BD86CFFFC7AC464D8E85AFFD18DC9334242A7A6E
ED40CB0DEB5DEB78A27C1204B388536165E8A31AB4C05240B7FA11F7CC7491C80EB696BEDCF
16492DE6F594FCD58976DDBBAAF88B47E820607E22225460C6389FEFDEB2F512F530CDA01AA
F1450181CE2D1C4447A8B8978E9348E031F0269DE9AFA2262686940A1D751D4F5B960847901
B2F0353D142BFFDCB9BA2F58013A8908FF6EB28EC108D320726D70A02CF02197A548FCEE3B1
F8F23F2097F60D30C0CE9BF9CBA26366AFC9DA37FC5EA4253490C30A9CE13DD28FC3D1BC07F
10136EC9C3AE1DF05E5E7353842F788281D3CD08557DD134681AFABE445550E812F0A52DA5D
9F00993C0503FB7E6A837C47FF2DFD159A32EA5D7A221FB3043CDBA05F2428C97E054FAAB8D
2156C13BF2D39643902F3869F9BDD29023D571F005893298209182B94C51BC102DC43104118
8E18657C66A79A6724A80886C7A79C8CAF88625EC0E43783590299B4812DE06448F198CECFD
E25285AA46723678084331A3D04949EEA3FBCB476409CE8E160FAAF7ABB90602897F222BC4B
E04CB43E62E77683CEB5BAA8C7109A600655613A750FD59E15FFCCEA7A0C203C66B1ABDBA0C
BD9CAA6B8CEA50655CC39DC2F06D3654F7D62861E053E1269DB349C55E0A0BB44A12DB845C6
AA41ABF79B736793B87362A4663C5D647D952E4D875ECC678957F73A674BC7F13EB29417D88
F89DFFDF20FD4D8420A9C873842D552132C5B9D5171BC9CE1AF665EBD198444321CDCEE740C
B1B799BEAD11AE14F728E546571C60BE2A0B79BE6E6374E0971B05DC4F18CBDCB656C2ECDFF
2E896E45E67694D5C2642403069E63790B7667D13557DBAEB12370EC824DFD12BAD344CFC03
15AF04E47B83E4724C822AE09F0FE870494F1303CF72B29DDC9098DBF03B576AEA8759689AD
4B51825112F06763504A0FCE55FCF7DF3E6EC800EA0B78DB6B9F99F2E2225460C6389FEFD4D
B7CF0269FFEEA314EE7B671D59DC6EF92E50DBD67F4904E1E0D97908058ED9492EB874DFEE3
66052BE7040FD898C69CAA532A86F1CF61102AECD1EA6CC34891AD039C8F27BA41D307D4DB9
9AD144CD449A7CADBA18B3AAD36E9A33B7C9A6760560472F075FF1427EDCA616D07DB0BDB52
AF2527E477943A5B781D9F8F967AFD5CA8EE5BF320790FAA0F977FDE11DC920D5D67B02431E
BE8F67F32928A2D8ED1B9D9B0AE31511BC9CBD51EFCAFCAE127183BA28F2D152F57EA998290
DFC077030B1DCC29C83DDEB3FC0EC988E588C38C8687920893CD3CE7BFA8B44438EB8A68EBF
2E6674B1D9401674CA0A13614C0997E276F8D3767764A9D717ACB1998B33ACE933D3E0FC1F5
C055E3B6C294219EDB234AA512815D53F22766CBCFD1CD8841553D4A0F703E9DC6A357B1199
462E2FEE638C5FCDDEAB409F9190B06C13B523F2C1D98784D4FE8F15261B308EFEECA6B0D4C
769060A7CB057772338F1FEA8F8A98373DEDC2FB46F7F215C2035E284582EC4811819FD7A1D
6036A49A6598FFA2D4F8F05156276A115AE688155EFBE2C64E4A3989CEEEEBD27D20BAFFB21
BAE32F8B7477AB3C2B8F1785AFCFA39F8E2657FAE68662A84EB399272FB5FCC7BE6F7EBABB0
F266330928FB45641F51E78A84DD6A12B3B7D084F8E0E6ED3B2E1D53B3941FB01A0DEE6584F
EB0847BD18591C388F193C30E31BBD784C3D56D2EE4AF0FCE4FCD01A18BB4E6F8B2D8BC60A0
5080DB6701808C4E0A523F1DE7160CCAB82195E0904EB621CA53DEB291778CAFB4031DF48CD
DB2D0D0B450D9F32232F75AC04DBBD3821DA9D22CF72B041E56E1324F26262CA71454C48A7B
7805F2C15662781D443A3D1F267D17AB91B6223577A98EE90D106DB7E824D4F9B54F84F2F54
8F29A7023270035893C328914311AA88ED0023525C8D0B0D18ABC5F9FAF198521AD385DD311
E4B0BCEC5829BEF57033EC1116C8B972BC00D23007B25399FF33A7A7651365FA948C9261406
6D1D08E188EDE1BDFD28A90484CD9A746BFFC4334412202161470436AD0A87BD2D11E356143
EC09A644BDED998E1D7AE686DD99CBFA539ED85035CF747FCC79F1C87D81EE5F4290D998AE6
9BC0DBC76A3313B7DFA081B7B099DF011B96E2EA07D5811334BD6DA09BE47C9F1D4C9B9AB28
DD2BF4AF62B272B86926DE6816EB910D6C143E51013FC0D20B553B993F3147FFB236BAD62FF
32F5135DEF428EBA1CDBFABFAD83835F9268990FF9E1F58DBF490B1867C36AB447A2AEE116C
EAC6C8ADFA58479C05BB89B08B5523FDA6E64A427272DC9833DD69C14D7BA72880363BC220A
DF95CF5537351A0EE26CC3D8B29B959E4056DD70F55428D3DDFBA7AD2B1B2E9AC820B89ACB2
FB45641F51E78A8441E3536C801F341C3B927F9692A4F4F5290CBCB6C54338E801B2B73FFF8
AE70219317EC8D2CBD2B756E460387FAA49EBABD6E6A8555FE27ECD5E599F1576DB466D5C85
A85968B44248C5F921F5EB5DE205B1DE9ACF98DC5837CB8FB308994C0CDC2730D1727D0419F
662811BFA67B9A5431229CCD34E8B116BBD58AEF543A441172F31D2383FBE1BEBC168FA6BD7
56ABE87D593A8B52FBB28365D011010FFDCC01B170B9DB92FA56343DC8C12B30D5074238B20
6F50F5E5A2D88503D04BE23D4E40DE5AACBE0EA49DA8597B19E27935B3F13E73726F5CFDBC6
E7BC7AED1657B67E6284303C6A062F33E59196289FA13A793DDCA244B09C04A458F101482D8
6C8B08B5523FDA6E64A427272DC9833DD69C14D7BA72880363BC220ADF95CF55373D58DE321
19ED219ADC7F56547DC94487AA483E826E1C3DB76ECDFEC59508694701E04B1D750C84542BF
421E8CB8E0096A2C6082372801B400708D0904D38E738793DDCA244B09C04A56E6269CDDBF4
A8D277405F99189F836BEE5BB68B858764011CBC45470495CBDC480D01B3E81835A8625342F
BE72438BE523968D9960FB54110CB295413E7C378F96CEE5F25BD83A9CFBF00D2D37435A790
3C977A6F65C0ED29E6F7EB49CFA955E5A05F1B2498475F5DF0FB7A8C20DA761F580BFC0989C
8AAC9E5E52F2E87F87BB23DEDBB7F09EA1885626CECE07A5EABFBA7CAEAC0C61B1A8198105D
383D615A8EEBB5BDDE17A6F65F4D1C847716564F5B960847901B2FCE4D962B1AEE1B6712B7C
315CE24EA3762F17AD3178280042DF9D8600E7A2290202BDD00BD1DD96888F193C30E31BBD7
663A3C85C3F1D28AD91C0B00730D3AE22C489FDD69F3E7B2E5E785599CA1C8B709BE47C9F1D
4C9B9AB28DD2BF4AF62B226BC0DC61364B7139CE27603666E411C4DB7CF0269FFEEA314EE7B
671D59DC6E88B67BE05A124C8271C5F0D180549D5225AF921E64AE7D3CA56CBEE4489621A5F
56846269819AEBC44446EE81C5F20C4640D4B04497A86412E30D597AD2514F1486CA1D76C01
8AEC1AC17AFFFFBF42743AC5D6B2ECBB471A5B103A7EC34BA0E69CE27603666E411C4DB7CF0
269FFEEA314EE7B671D59DC6EBD7DB40BF1FBCFFEC829F173ACD2B337F031D83E1FD0026100
EAC796C4B5ACFF6F12B61C2A860356A4CCAFF881BC4FCE4ED46626E559309D0885A32BA548A
3D269E875021398A461CBD3168E3A259F4990D998AE69BC0DBC941FB01A0DEE6584FEB0847B
D18591C395F3A4E525031F6396F5B12A129BF9F631E24FDDC8E24C5480A6092FA831DCEC3C9
2F2992106DF7D
-----END ENCRYPTED SCRIPT-----
}//end of  nuclei_detection_C_inner()

// ------------------------------------------------------------------------
proc nuclei_detection_C(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
//OUTPUT
objectlist Nuclei out "Output object list with detected nuclei"
) object recognition, nuclei detection "Nuclei detection procedure. Detects nuclei on the input image."
{
	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei. The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")
	
	// Fixed input
	set(SmoothingDiskRadius=4.0) 

	// Inner-technical nuclei detection procedure
	nuclei_detection_C_inner(reference, ThresholdAdjustment, MinimumNuclearArea, IndividualThresholdAdjustment, MinimumNucleiDistance) 

	ErrorReceiverForNucleiDetectionLibrary_v1()
	if(ShowIllustrations)
		imageview(item=InitialMask.border.mask, label="InitialMask", title="Mask after the initial thresholding. Adjust par. \"Threshold Adjustment\"", image=reference, gamma=2.6)
	end() 		
	// Removes breaking lines between the stuck nuclei, 
	// Input parameter is fixed
	controlbreakinglines_v12(nuclei, 0.8) 
	// Adds to object list a contrast attribute
	object_contrast_general(cells_out, reference, InitialMask=InitialMask.body.mask) 	
	// Creates the illustration "LowContrastObjects"
	if(ShowIllustrations) 
		set(CL_Temp=objects)
		objectfilter(contrast<=MinimumNuclearContrast)
		imageview(item=objects.border, label="LowContrastObjects", title="Discarded low contrast objects. Adjust par. \"Minimum Nuclear Contrast\"", 				image=reference, gamma=2.6)
		set(objects=CL_Temp)
	end()
	objectfilter(contrast>MinimumNuclearContrast)

	if(ShowIllustrations)
		imageview(item=objects.border, label="Nuclei", title="Detected nuclei. Adjust par. \"Individual Threshold Adjustment\"", image=reference, gamma=2.6)
	end()
	calcarea()
	calcintensity(image=reference)
	set(nuclei=objects)
}//nuclei_detection_C

// ------------------------------------------------------------------------
// 6. Nuclei detection procedure nuclei_detection_G() from pits_vesicles_detection_v2.script  (Urmas Repinski) 
// Nuclei detection inner-technical procedure. Detects nuclei on the input image. Called from nuclei_detection_g()

proc nuclei_detection_G_inner(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
double ThresholdAdjustment=1.1 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0. Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
int MinimumNuclearArea=200 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
double NuclearSplittingAdjustment=9.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
//OUTPUT
objectlist nuclei out "Output object list with detected nuclei.",
objectlist InitialMask out "object list after the initial threshoding.",
mask DarkerMask out "Mask of points, which are darker than the surrounding. The mask has better resolution and the higher noise level with the smaller values of NuclearSplittingAdjustment and vice-versa the lower resolution and lower noise level with the larger values of the parameter.",
vector ErrorInfo out "A container with a possible Error Message. If no errors occur, the ErrorInfo.ErrorCode will be zero."
)object recognition [hidden] "Nuclei detection inner-technical procedure. Detects nuclei on the input image."
{
-----BEGIN ENCRYPTED SCRIPT-----
0F9C8D5CBC7F067C97CA44250E29EB4B5773EAF406029F9F43C0889AEBE8C977E6335B852C6
B6510ED9FB9F86E757BAB558B213C55923FA1100E9873FBEBA25F757965F45143D2DB9AE6A3
9187E20DCD7EEB83BA8FD1C255238B8632DF29B99EF79E1303F2DC9A06D3B1FB0061734D604
D50D248F9FB22A9D9A85478875D29E4:0320A9810E007FC0FE23F2072292338135EBF253971
4BECA5C51D978D2A868F00ACF89781293F8B06C9E9AB7692DEF31CD42C612F55B3EA202C70C
0F0F303133FCBCE7F708E85E139D0C718F87ADDC319E6C824E2612AC94BEA4D09E9290BE43A
8B1576174FE4CFB260FFB9964608194CCA419959A3157378B98BBF16E611893/B24132F942E
999318BCA1FC879F559324DDF820CABB29B44164934C45AFF2D9073200EEF4C67F12281B644
6088F8EF7498D7A4BD17C4FDD00D0B685B0B604A5938F8B9E2AB653159F8D2D20AA552136AE
228E9CBC21DA22CC873014CA4F4FE3BAD54E4E1532D26FAB2F804F43574F4454D2DB7D7DC78
A10D4B2CA3EFC8C540F95D74AD83D4AA19804A12CB2A556E1F4F447883338FA5426801AFC82
FC38C5195148C08CB414688D260DD4EFD65DFDBBCE3575FE1791F60C196394CBF7F836BAD08
8A36D2CEEBB2C24B2CA3EFC8C540F9907652EA799CECC29DD9918480A5815DF518F64DA120D
0AAF3C8E3C01B64B88414B2285F8F17899DA97C51EBAE5B5CCFF9A09D0163B1682501A7DCA0
79799496A217DB4B7B99E24D652E8F514A1531F115C42392634497BD5B50EC057F9F3D46971
5CBE18035B84AE98BA68196947FAF4D19BCDAF8EC93A9971EB4D9757D4663A80F1230916230
C06338FFA618D1BF5621295CAE76CC2E1E8DB4B887FD353E809D2F582069B5F373012535B2E
C7E48A08C96DE287A958FA995757CA5FE37D4B4C8D0162A3611976DA3E84AA0DB0EE00BA437
EC456B6439ADBD1F5C9723389A1E31985FCF7376305893F6E3EE8282E00EE3575FE1791F60C
1C1F4209645C19B45167FB2FD9D83F7F33CD3EF3DC2416962A1A6AA15F3C0ADDC275B5799E4
167B6365AA703E054951A3175ACCFE3C0CEEA2BDC0F6494B5CA2AC2D25CA9BFFCF2AB3573A9
327A760EA62ECCCA730529E701CFA1BD9412EE4B95660E461CE1CF6725F8026BFF0F381616F
887CFDA71646695E7C46BD41DB1F8A3206140F4C5FE853CD03CAD889CB2E0A38DAEC879668E
C29FA492B8FFE2D378CC84993C193F21B3DF443300179A1A3968F03817FF367E1BD0A2AB3BC
65B0FCADCB7D8582D48DA98B895B3611FE609E6789023FD1C601EA9B314B2CA3EFC8C540F90
16815CCDF5FC5B2B741D40D5EFEA013F3E0EF05B772DC95E1BBCB9D24FB4CE1311C7C8FC2A4
BC0125EA51AD044503BBC41C41B66B7AE3CEBD8D092DC8183AA0551F8CC26A24788E92E4519
026D9BCA1F4B3B6392EA50A0E9C9A27172638BB05DBC1304FDEBB0CB0C7475B43613AB1F995
B6BE41D9C4E3F0A3B62BFF96C84E2741E1FAF32DBCD734CDA3BDFC50AC6E0A2676B80441D58
3349525ED5C4E31683903C12B07594195E3551E1A8C4B759CF79023E9A6ACAAAF7CE3575FE1
791F60C196394CBF7F836BADFFDA977EC908218119F94509116242B0B26410D5AFDD7254912
D0A7F56ECE0DCAF92ABE50586054D3294F834694E9AE95F275B731B7C4527065E960DC6680F
99E4F427D4E336532650BF5D1B070018643DF1DE995A4A99460AB6599EA2AD0F452F4E8F519
E1C14188DA0DB80787713C0AB4B9AB0B79FCAA986938E7D8E5A383C290B42556519BF890D8B
0CDB27F258706694D8E60F4FC69BE4F427D4E336532650BF5D1B07001864ED8376B97F6A272
41AFEB92B95522DEF65B4AD7784DFF61AA9D5EDD21DC3C9944A9E95290CCEBC13694A5082D5
3E9FE0AE2B1619463255942A2ECD32FFD1D5ABEF0AC05D24C5EEB8327F99920B40467593543
9FA82BC1932A0170B79089CBC5819F94509116242B0B26410D5AFDD725492891805C1D22818
A37A01EA1A94BC3D65AA703E054951A354AE14FB0C664128C4F8C75B2AD416FF61E1FA78BDB
6EC0A1335EFAD6590D66C509C2268E52562F02FB505D5293D96EA43CC2520A6771B90558850
98F43C0F3A416866EDFF6D312E31AE084E43AAE86C60ECCBC076913F9171A7778BCC771FDE2
27FB6E757CD61E9ED19849A2D04EB3348E3266AB5EF9297BF4A91A46AC872F4ECF59D9CA2E1
4C092D301079CFBE3BF50399E73B3547B3659BDF87DBA76281E1E833AFD500649F19505A891
5FD30A20E916B3D2EB604350ADC4A98EEADFF7D9081B6FEFA7178DB2F62C74FBE394D2CC165
FCE076B8E39696CE62F72CCB46B2D7D4A90C6B21310355DC9F3CBB2461846EBE9C2866CF87A
3F30B50837D6E24FA25175F97D7EC3384F51F9772A0D0E464496B183AD6C3F9520B3608FACA
C6CB3D044EADBE0816FFC749D65B7D077FA3C5E5BC95D11685A5499F43300179A1A3968F038
17FF367E1BD0A5838DDE275B14E392778ED1EE17497B2185D378A63CBFD0E92E4519026D9BC
A1F4B3B6392EA50A0E2F359B47E0BE4B79BE76E566CDDC48D665268B6EEB112313E5200F927
4C103F5361A2BE98A2CF5C5D8C70437ADB93CF6F6D9D2E92D8AB02E083429E7B738E2A849EC
CA5EFF4D42972D39D53A141D2D0BD9D0FC114A153C5681E41BDF5464CE9ED20FF3B0B47E613
724E191A8458A58CD1A24FDB6C082CBC960DD4EFD65DFDBBC99209426A920834BBB7826B567
C6AED3B1036B94725F643F4C5ECD3BAF1D4E29BF4BC1409223157C0EA048B4CE2870FC26BDC
634DA563936C4846C00131BF86BA9020744975E554D870ACD31D3B3BA676733A86A5930D86F
2EFCF114C24A3CE53D8CE02253E6EAC386938E7D8E5A383C290B42556519BF89DBFC5E53DFE
7EB989767EB6425FA8FE4F6F3717747F51E408C08B6D92B03301952E15F3A0583AD48D0F379
2538BE3D316EF52EF14CD35447A3BF87194F0A0B45C40C60F4FFB8772FA6DCAEE0DDD26A626
E07BE49E845F02EF3AD0251E4BE40FAF4810DEC4695D2E1984F7728D4C4C7E42192AB8ED9F1
0E37C1E09626D18F541010843D1ED87526FAAA88C9AFAD4C84E5C654A2CFFC1C64027EED639
58B34B021353D7F4520978E656E07F4906ECDA0CE4B10C29C5748726AD3A940E9CB3A44AB9F
3962D851BFE592E08CA90FD2F2258862E5B6C83E2719B67AAC27E06CFA2C2E990D980E73B81
72ADB9F10D84C4B9B2D8FB64C35091AA633FF3B36567406C203D2865439F2B9FAC5AEF3C0B1
780B3A61135DD3874577160F0F003788274E47D8421EF884C7B6479FDD0EEE04FAAC1F36A54
2BCC5C91DBDC63BC49D87E292AD3B32B513662AFE8E11B07F837C130F9529B6608F58FA7EF2
050C98C271A455AB56EA20BDEC329522FC940EA41A095D8E7DCCAC0056BF8E46CBDC60855E2
977B8AEDBDFE9F5C269AB35D3F9F9602E73C742912E681E0F4F1C5F76977755DB1A64CA3E29
654296DC12ABDFB6838030F4670295862BBBC447DC1309BE96399B5DD792DE6DE6B46D7F8B4
B84FC245E04E3985C53127D08C95441E42FA3024FDD77148CE6A1E9E7FFB40B06339DBB7233
CF4FB105B8C48BF507AE83FD69EDD047631669279D17CACFDFF386401F403C0EC1887E9768D
FACED963BCA4645F1CC3A528660A5C66B5EDF1305A5896F8381BD5705556C74E5AE2C55D3BA
12EDBFB13354C2B819B68F9305BC9CEA17318DAAAA5426AB99FEA1AD6BEA71E68A3D50A5F42
AA89D309BA757099A0942262A4866D2560324837D641FF65347058F049A6CA3900766C4C2DA
30E037CF3582E1A3D8F933F3C260DD4EFD65DFDBBC971EB4D9757D4663D2E040B6126AA87DC
B7AF5EB38A4F1003ECDC5C6ABD915F916925BA7CC23D0D9A976ADF56F18986A6E8860C725CB
1956BE3A9A54E08C47B365421BEBC1EAE6F89525ED5C4E31683903C12B07594195E3BC2C0D3
35A7B95230BEDC9C5297265ECD966321EAFEADA99998A6C9E73AE18F013FF421D87AF12FBA6
B86E027719B56D8AFDB7CC8CB38190A6E83766059AC2C327F7A733BEE45B662ADF8D47E34B1
1FEF76AC8795166E4C5D10CC1FFA3298E61DCACB9382847C9C07E364CFB924FC9DE8EFF97F8
48AABDD8C19B44AA0730A3EDBC776889F4A2F534D20FF3B0B47E613740EFFB3109FF993A1AE
00934D82CA87741AFB1ED5C7FF97EF5C0BDF31C9601D6B628BB795B52D1FD0C91298F9A4F96
D5351005B3E1A2A3A4F9FE65D52DB9A03E24E191A8458A58CD1A24FDB6C082CBC9721375454
37364F2CB85EC73FA15AB7B377F9199856DA368A4CE34C75F16AB939842BF0496636C97A97D
A6824F5B18753E25951189A42AED7558BABF7303E9EA87ED46D25D126FA1B34111171495A60
2A5BDE071A6E5A5EBB6710FE51ADE3385D3E5D3D9670B33B55E6C7565DD9520E46A98A0CE6E
6F2356849C29DAF8B9593D1A7376AADEC7C0A29C0AC6CB71248CAF6DF9C2CC905BA597912E6
81E0F4F1C5F9F5925A64DDB96FD94161BB3276F6F93522E67770C67A4709508663EB6C4B307
6770A9E614CD95407881BE0D82152C62E88C249432A8F4AEEB23F421E29B56509842BF04966
36C97B59918B793CCB6F0A29BA493B164E40008A7D5A2B429B14AA88C0E31A081A64BF2177A
785DE55BF8A88C0E31A081A64BF9ABCC460F70B8D6CE0A2FF34443DD9D53B786FA7EA2C4567
A0B4D610EFFF70428EAF6CDD8C8953F26BDC634DA56393645CC099B63EB5022F4792E6C0411
2917F598504F1A13C9C744E9FE4CC1CDA12585485CA4903000F7EFC4BCE6C0A3B0F75813C21
9E9773A39E6C27D27A07FEDB75D06307A38834DC80E3F733689E13F6D56B2222AFE87DED16D
BF20EA5C50F8731015A2D40EC7EA6AF2177A785DE55BF8A88C0E31A081A64BF9ABCC460F70B
8D6AF254212513CA3BD24A4F683E71E2E4990064A5B64A888F292E4519026D9BCA1F4B3B639
2EA50A0EB7B3A35ED0EABA23DA81BC075BAF628FD4F75EBCDD97A1112DBEA21E8C6EED12DD1
93334BC2CA8A2518267809746A3CC45AE7878B6B4C58A9B9B9DA51679EF127558BABF7303E9
EA43DFD5383ACC473BEB286C999329F36C838ABD959A629C999A17B11C1123608BDD6C6DF53
C61D5D43CCE2E3A14771FD153B26C54FFCA9345D31280A41594A9899842BF0496636C97C9E2
9DCF338D95B7398FE9EDDE0C5BB282B75D19497945CA2DBEA21E8C6EED12DD193334BC2CA8A
226D44C41AEDBD22BDA81BC075BAF628F1F075F193BFF198622BC9BE2A14E65EB3888A66E0A
E405E33A81CC95C08AC6B82D5277410849F16A9DFEDCF4CB3ECEA9E783166E282C3E94277A2
3B647F72CC864090F56925E01BCE5AD6865B03478DCC7626154A52810FD6C5C485F47CA9CE7
313638C851F19DE78C08B6D92B03301952E15F3A0583AD48A91FC5C11530AA70D8E5F7876D4
6A3D4715002DFB94E8ED21C24CFCE1CE9B438
-----END ENCRYPTED SCRIPT-----
}//end of  nuclei_detection_G_inner()

// ------------------------------------------------------------------------
proc nuclei_detection_G(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
//OUTPUT
objectlist Nuclei out "Output object list with detected nuclei"
) object recognition, nuclei detection "Nuclei detection procedure. Detects nuclei on the input image."
{
	input(ThresholdAdjustment, 1.1, "Threshold Adjustment: Nuclei Detection","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(NuclearSplittingAdjustment,9.0, "Nuclear Splitting Adjustment: Nuclei Detection", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(MinimumNuclearArea, 200, "Minimum Nuclear Area: Nuclei Detection","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")

	// Inner-technical nuclei detection procedure
	nuclei_detection_G_inner(reference, ThresholdAdjustment, MinimumNuclearArea) 

	ErrorReceiverForNucleiDetectionLibrary_v1()
	if(ShowIllustrations)
		imageview(item=InitialMask.border.mask, label="InitialMask", title="Mask after the initial thresholding. Adjust par. \"Threshold Adjustment\"", image=reference, gamma=2.6)	
	end() 	
	// Removes breaking lines between the stuck nuclei, Input parameter
	// is fixed
	controlbreakinglines_v12(nuclei, 0.8) 
	// Adds to object list a contrast attribute
	object_contrast_general(cells_out, reference, InitialMask=InitialMask.body.mask) 
	
	// Creates the illustration "LowContrastObjects"
	if(ShowIllustrations) 
		set(CL_Temp=objects)
		objectfilter(contrast<=MinimumNuclearContrast)
		imageview(item=objects.border, label="LowContrastObjects", title="Discarded low contrast objects. Adjust par. \"Minimum Nuclear Contrast\"]", image=reference, gamma=2.6)
		set(objects=CL_Temp)
	end()
	objectfilter(contrast>MinimumNuclearContrast)

	if(ShowIllustrations)
		imageview(item=objects.border, label="Nuclei", title="Detected nuclei. Adjust par. \"Individual Threshold Adjustment\"", image=reference, gamma=2.6)
	end()
	calcarea()
	calcintensity(image=reference)
	set(nuclei=objects)
}//nuclei_detection_G

// ------------------------------------------------------------------------
// Nuclei detection procedure nuclei_detection_H() used for pits_vesicles 
// script before the version 
// pits_vesicles_detection_v2.script
// Nuclei detection inner-technical procedure. Detects nuclei on the 
// input image. Called from nuclei_detection_h()

proc nuclei_detection_H_inner(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
double ThresholdAdjustment=1.1 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0. Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
int MinimumNuclearArea=200 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
double MinimumNucleiDistance=7.0 in "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.]",
double NuclearSplittingAdjustment=9.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
//OUTPUT
objectlist nuclei out "Output object list with detected nuclei.",
objectlist InitialMask out "object list after the initial threshoding.",
mask DarkerMask out "Mask of points, which are darker than the surrounding. The mask has better resolution and the higher noise level with the smaller values of NuclearSplittingAdjustment and vice-versa the lower resolution and lower noise level with the larger values of the parameter.",
vector ErrorInfo out "A container with a possible Error Message. If no errors occur, the ErrorInfo.ErrorCode will be zero."
)object recognition [hidden] "Nuclei detection inner-technical procedure. Detects nuclei on the input image."
{
-----BEGIN ENCRYPTED SCRIPT-----
10DBA26FF7E25EF489AEA6E65343A9164E58FFF52F551DF1347EB1C812B8A1604379245733A
917C8B6CDED0F95A6A9A710E6E9148FF0A72F66EDD0A0A226C92E8F1EB80263B7D826AB5BB3
BCE0FB677C0E18A1EDADB3563BC1258B234A19EFD8A65D8AAE3A29D158E0011BE153D11A421
B0BE8BAA6E52BB81B64F0985DB6E271:6624D80A64C0678AFB89C43124DA82A212ADF0A3F2E
37D73815792B02DA73D19007174D072AABB97A0A4AD7971AE123DD3CEC45B0EAB9DA3C90C6C
701A68A4BB66E1EE8D9CB1735B7BFC8885C99F14BA9FE35825D1E21BCFAAC2655FBA1127137
D0477D532B127FE0E39D74D50E1BD75DF91826887FA30015A58A2CBB48A08E3/068BFDDAD2F
4F48C7E4D034879A165F625C1B644C0F1F2D28F81278420CB3CA4EFC0F26A3C7321B9F6DA12
ACFD317CFD606F63E398480A6E15FCB900F35579BB6A796B9CBDD6E54D6B1C6704358B933C3
A2C8BCF524ADCE6FA8BC98F56792BE01C6672B6B87EDC2D677A322A769CDF9DBE0BD398BF97
4DBAC37D78C1B3D95CB12CFC397828D7608F7B7E02048E7258A9B27020C28B14E2CCACD3FB7
B63BE0C9E6B0B9BBD4BFFF215F1B7E53AE4F82ED68A6B81B97516ABFEA2CD1A24EA91BB7FA8
BA9612294B6EE3C37D78C1B3D95CB1B5528EBC0C375FC5B6205AF2574F01A812FD75E221A7C
2E104552F47C50C27F2E8AE8BA142023A1743F33F939A61E330EA6CBA9F6C4DA1C19AA698D7
4ED3DF4B264EB0A521C693E8368DD27F8AB11B521CE1E8AD58F404B16552D4B51E91FC165C4
D2C4F906606CF58A776A52EE931506B61DC337F15481F2DCF51465B6FDCFBEBEC8E4FF55CDA
B613C67C3EDDD8E6BA6101614258F6F1F60E558E54154A45340A152DEEA1C15F16347234BD3
2E6D5477C920BC577B09E6B3B734BD2189AF5FE3492A2725DB7D7B00A6B9F69D8B973F84A6E
5E3877457AFAAF722DCB195CD75AE1534D32D6D7D945AD3E8A1F5D773B348A6B81B97516ABF
E69BE62D6D28BF6159836101D7762C218B2D27DB025ADEEEE2A3947CEC3F80206F14BDB65F8
E3CF004F9AD1137792CC862130B331B41C4BBB0F6E4AAA08006AD963C8EC6344D1BA0EED88A
2B18848260779A60B2DB2A7D9D7F4C5C4904AA288477C0C79A2ECDE41B4749DC0DFB69C2E9F
5956AA352BD02C13E792CAB0A2CAE1EB3D513B0F187A8FE306E214E1EA4ACB8322D14441E21
6E56C7C351AC861559B4BEEF8CF7BBB701D6E0DDDCAFB5C5DDF519CBD85D4A4C6053BD9BD1A
0834C2989427351A8A303F356DB41285AF227103DB80879D895C173E95C37D78C1B3D95CB19
7049D3F80BDE3D4432A1B125D0419B9EFC30299E46E4AC057CCD12DAFFDFEED171389B642F9
A64152F63DC52E831922F20FEB2F24AE9FC4CDD350607A2256274758A35E7947757BBFA104B
4EBB10AD13E71B5AAE9EE9E745B639E5DD49A15D091A5AF703BF75AE22C89909CBAC12F17BF
48D31301B6BBD6947A73C0995454A830EE59EA628C9038978FAE15FA9A492ABBF573C3C16B8
D768B16E33CD328BB65B2D27DB025ADEEEE2A3947CEC3F80206312EBB10A6FE200157CCD12D
AFFDFEEDC59725EB707BF4BEC75E5A1813401F57343BBF79CDA8E6F61F0E1BF54ACD122C278
6B2E6F2C49B7487231BEA848F987FB938DBC7A0E154B74A685ECE0C5BBA99E6EB5721DD8DCC
6C38AD842FB6E97989D9886B09D4EF4238BC7D074A722AA85FAFE37807B3E431B5E42AE58B6
2D24B9CF2DE3B9AB457D8DD51F96B646FF757A7DB6E4521C21BA3B67EB5E3718ABB11D20764
3BC24CE1AA3C1D06DC7BCFECF74033200E44A5315FA10BDC14733609E52B2EC9736A4C16801
64F9AD1137792CC862130B331B41C4BBB0F6E4AAA08006AD98A03E36EE5CC8977ED88A2B188
48260779A60B2DB2A7D9D7F4C5C4904AA288477C0C79A2ECDE41B4749DC0DFB69C2E9F88C0D
6BAD904FCAE6D1DA8E74C7833C9517AB6982E3F0427C0FDEE608126CF990C7E1EBF35C949CE
8BE1E4B464AD09A44D7AB08C483EC5CEE0F580925269D6E1F019956CF2195E810105FD87779
4556BD85C27C76EF7319D3E2B439EF6CF80DB87F6D371F99A1A245E778E29006970B663C8EC
6344D1BA0EED88A2B188482607C63AA30606AA85777DB1C00F6F4C7893FA9DC8B019431DFA8
A6B81B97516ABFE9399805DBB6FB6629F9CCD7CA87898823E60B2C47EC6A49FAC23A8D7EC0B
3301CB85A608E9FC308534C35959F0C47A16C280250556E5EA7C1E81F57E1F3FA4DA85928A6
A1CE8D25F542BE49A9D36EEB8864B01493BEEDE964A30D2524E251D59947A73C0995454A830
EE59EA628C90381C58AFC5ACE22F8A1D82761922F7AC1434C35959F0C47A16C280250556E5E
A7CA59897F5236995F8EF9ABAF58136C2D866576400F5F05EC2155E8D2C04621C8C561D0A18
2A68BADAF79163ABAC55C380CE8255494AF4729A3D513B0F187A8FE33EA26E5515B6A5F1330
95C604CE79E93CF6A0AF3CD1B93D458EF47C871006969FA9DC8B019431DFA8A6B81B97516AB
FEA2CD1A24EA91BB7F823F6E2F059ABEF612CBE125BEAFA5E0275E31133C01DD161378CB44D
9C26A920EE3798E29959EE4D7D2E0172C753BD84A685ECE0C5BBA9939F2E63DA4255060A94A
CB0CA2089B014C4D1D7CB064E20E2A3947CEC3F80206D167A0A15DE60A014F46A56578E7816
D06E214E1EA4ACB833ECD9CC1920E83EF04FBC306FBA043EE83C9B008C54662D6C23C7DAA4D
9B917D94169D92255811A253015AFC4D80365F681E8EAC3F1ED267C7E4F7CDD421D8E1BAEA1
FF7E7346E694C00C625FF319452806B6AEA8B93315148FBD256E224E8D8BFD6A5E4E90ECDE1
865A59E41D6651E8D517301712A92530978B73428D05BFE666576400F5F05EC260CBD12EF54
0BCC2DC853A104B37B86D537694AB78D63761FB053D14A43268BDC027A2DC10817BD9749DC0
DFB69C2E9FC944F4A7F99D76477FC8D8626AE6AC3AE8CCB164C9575155E5CFB7B9B1462A8A0
B88A54545A5466A4B7EA5B2ECE48EDD7019E7EA032F75A9B2079C9E2F0B33FC19AD94EBFA5D
FDFD10E245B72756B5673616B1BE9CEC2A49F00D4BFC183AB7809C87A80E5E12935367F899F
91AB0F0376391074907A8060DD053D76E4C4B0CC5EC02B1C410D514D3ECD28EF02C30E93995
9358A6C7F80462609FED60A9ABFF69A14C350D7D70937EEA39D735BE6C871A96BBD9A379834
05453044C801ED95C17158D02E07EB981B8F4193F86390CF6E33859D399349D29556A2F3A76
6EBC2CE0F1821AD1D3861B984380A2844E60E1A0879892701BE6C25C2714AB5458251F8D727
41963D65FC90A31B13060EB20665BE0C20892F674D1D189831515B276ADE0E3338122EDD632
11766BD79F6E0EFFC0D44CE3D7CDD72E78F537832B8A596FFD947A73C0995454A830EE59EA6
28C9038978FAE15FA9A492A87360909AB9FAFF688760CBD0A5636B433200E44A5315FA10C3F
C9AC9C7709488C6C4B13680E640C0D7CF2046F939EC2242B72818D587B14EAD7D0D94D8C112
CE0E37EF93EAE4D5750F718DB484AF8FA0CE2B645C01970292F35D29D9D657C0DB625F17BE5
5344D51CED60CC28C955C39D94A5C596F65CE783ED27B8A93F2DB029FB661B3C0ACD1C7D7E8
4EB455975BBFFBBC96F246E25FB59568DCABC1ED843AAB54FADC99E8F2616192CD13DF25C9A
272AF40BD1F6AFF1BB8F8FC7E8717920B091F7175D738CF6F89E7EECA8A92E1E60611BA5A21
E94EBA84F23CE117080154AD926F642F3BDAF41F769B2971EB619D71AB46E08BE0698B6144D
5D012889F1292D3996CB4C1B27C717D1E85CB86DA4636DA799B5B06AE73AA9690D52C32ECC6
C95FFA3DB12218AC3CCA57B94BC1F0BF8A415E1F895F8BC67E35D47842779769B98EC0EAD21
EDFBB5D2143E4D6B29FB51728EB6E3F12CD642DD16BFE04EBEC5B270C1E6BCBCBFEE0ABEB1F
502D74B6159B38889F9853F0CFD4ADB36DDE6CA6FEE943C77098516AB212B5A81FC2BC2BEAD
AC4BB887441460D9886B09D4EF42380CE12FC697A8D811E5E42A86EBC482783D8FB32953FD4
730B82681FF8C341F2509EAABEF0D307A2B03C44DD2D71777CCF2F9D8CE849D3CF7EA5EAC9C
569633862A78633570324D8AEA2EE272A105EBF2F44C68B38FD52EDDCD819F0B6C2C028FD98
86B09D4EF42383D56B7AFD4197B0DCB5A0129826E30E5D11CE001785706E8393FAB736758C1
82E53102E0FB0757BDC1B831A8D7563A5FA6DF552E4638A642437805BBAC55026CAC532B6AF
AFC8B6FE899A43615BFEE9C08EC5453119FA1210CC14AAF6BF5344E1A2BFD06AD60753307A7
58C46D75BFE03B9FEE935DB407864380A2844E60E1A03334D732C0FC5E3731BB88FD4313F09
8F3BA0A57B027E3F5EEFFE3081A992BB56E1C768CBB7416EF770FB002BD920A0CEF4A7F2064
2779A13C8EDEA9B055D72725D3BBE8D9AB2AC452D8732A7275C9236F10EAB651E8A94164F15
93B3FA48656D4F24776443DB6F8978D1EF6E62B31A02CC4A761B5CABD86126820D831A54605
DD8317E7E17EB9E7E5EE3CA7D3EE1FF1F1B7E53AE4F82ED62DCF51465B6FDCFBD68F787EB07
CF8BF1DD702DE6E204392D3FEBD1AD154235BFFD0C5840B891117E9E3E5E4362A2E644CBF23
654834F26657A6EF2DDDB432C953BF1C69C1E2D4E6A702CF0D7C67054ED1C577D627C955D61
04A9A987B3DF71DFE50EB0B0436A44A94B0C5C738ACA49B8138E1C18D71366F68D01BEB24B0
01D1BC7D074A722AA85FEE67743DFB8379988138E1C18D71366F68D01BEB24B001D1BC7D074
A722AA85F1BDED9E54B0182A0104A9A987B3DF71DE1F5D4225B8613B00FF9FCB9CE3395864A
DDBCF991492AC39A8F2FFC09C3033D5775250CB4AC7D5E70297284B20671C16E121E8459217
E26A602D8BBA613E99E3BCAD46232FFA68A02F6313805F5E402E1C24055645A79CBC947877F
5C9973E5D8897DA8390E6E82BB8AA26F95BBF8C3E78434CD80CB1CBF45F6644F00778AEEBA7
DA391174F604070FADFD9C8ABD45745488595C7C4EB0667A489BA23D4BDFA30A1EE99099FD2
44D83F129B9A80446DE46678D34770BD83722D9F6EFBE9FC3A3492A2725DB7D7B0D405B17DE
A4258A8B7181E14CC9B090EDA545C4DA6031DDFF5C3079B34EC8200162C8E74AD9662BADADF
F15320F6BA90E86A442D61CD0288D82F9BF65C59E788EAFDB15518FCBD9413035E92DE0D8F6
5E4D6E44155D21998614F5E943A97E0C36DD8142F48DA6F7C26EB9691BCAA802BF55A59E8DB
0A83381D7115E7A12F03D17B52D50116FCD6379521463ECDFE62730240A2C4A1E5526769962
634758CDC141A8068C48D4C9602D541DEF70ABC6D339BCCC9F40D228CEF790E425F225A819C
C6EF6A91DCC521505106919281335A6DCCEE481E8FAFC2B804F38B56C942BC298FFFE773CA9
542E22F10F7E80CA8DD29178806F1BAE93CA0C0F90799DB0E1FC42CECDDD76F7080455D9D13
07479EE6850FF9FCB9CE3395868EEE486E071B50CDBB88B32CAB864921F3D360CB330D46B97
DF3163CBEF3E2D5828A9401901FB02D49A3FAD52E2C7ACCF2A0183EEC881ADB754C0CC5CA8B
CE94B642083A2C08547559922A12D28BCAF589C506015417C6DFD8F5F440C485A5DF67F985D
8C9793A349BCE169185D55A09BE572468F2256FED1399A8DE042813AEC272C1D35C9CF6A7C4
6124D28EF8173A222DDBB401E55A9993D196BE92481F7423100D66F13201CA89138CE22A7C9
D3B60C50FF9AE91BC79E34FA2D606D3FA0DD922923DC1AACD280964DB3D0DBF32E98BFA4790
5B147DFA4300AEEC2AB1A8F5B0D285EB0C147E91704753CDCCDA7B197B51E8D3930186D0080
CF5051F035C23A5CAC05B75549FD807643BC24CE1AA3CE98846C83DBB31BF31AF067224FDCE
89BD8104D10A196B2E0FAD6CF7A5B0E7D59550A0567B010176DFC036D0766D42D164F1593B3
FA48656D4F24776443DB6F8990F752CFD8CAA3C037271CFA20851A46FE3F7BBDF7835A683AA
86B51652E6B35EB0057978B5C33D5BD5A5047290848E9F061409CAFE843092EC6EBDE0A1BCA
1124B1CC1475E9B5D1D7042AE50CC2064B60A0A2E994E10BC11C5849CBF9EED74C716C38CFA
327EEB6B07E42AFA156ACC9D23254F88FE6BBD846C8821DD478A41AF551B2C76F1C6E23C15E
A9C8DB210A4F8600CD057C77BDF5C152D9873AF1B12BA528042F39094C6A13D4195D7174B5D
22A849CF5D71B8502F0EED575791E1562D4EF449EF394AF7CA0F75C40C8E9F36F91FB1BB037
E7054F7BACB68D3D090FB2BE68C5F7D51B362C1DFC1F99283B459EAA997CAA1C8D3E9C71C98
B3637BFCAB5BF3BA1726BB2629355F5B736EA175D30566BB8314615B8E3B5160C6EB3F19B33
76D33FBD91D260B2D58622D15CB7CD7CBDFF0840C13EBC5F359999C4452E505F16E3E620062
C5CF5A7932906917DA1630BC5D59EAE2535A6240B5819FD1720A683DD16DBFF49372D1D4ADC
798C0EE9E23499A8CAFCBE1B6B645DEDC822EB912CCB4192A7C515D671515E0D870BEF2D8B1
8C2B60B523E2AC717EB6C3D913E9BCC68C86EFF2F31FFF8FAA412FD1CAE1A5CDEB2565A9BA6
C4E3A68E9637C055F1B05818F94C5AC2A2232315030076DD24CE479D1E273C0DCD1372D89E6
A85CED3F990F752CFD8CAA3C18B80786403D4752464F306D21AF85F0417785F3CAB0668FB69
1D86B44DB5A4543658D991008AA62E8D41EFC747EB9F6203C689C94FA0048CDBAABE0F9C0C1
B8D1C577D627C955D6C0FA61369C30344ADF5A11E4BDCD342EB0ABE561D9CE88106465D1DD6
B1B6427192E2717BB635E9B6DD4C8C275AC2539FBBDD16CAC912911DF28EEF8CFD39FBFFAEC
A3D2CDD597DACF5CC86C13421D12C87C4B316F57E8CF5F46FB5BA950D162CBCB94816F3EF00
E0FA0DF46808C7059700D3D7D109DC2A363EF42E015F4841CCCF334F997753E12282A45D6FB
3F33610D0D31CF7039F67BF47BC69B526858E02343F7BB7DDC6CBBBF9341892B273B8090CD8
F59EF93704843658D991008AA62D3D4041299A3C56D259AA093A3B80C3E1ACB4740E217177C
F044250CD1D387450E1B47848ADFEEE18CAC7AEAAEEEA6212F5066CE0F06226F6CA866CB436
C3AF1D505A4DCF49D3009AB197CD90F1E8ACB8E784CC62D2FC05C7B2C9111A0F175AEA0C561
4F257030F9973FBA10C88D96B9999D9297B32127046440ACA87C4028DE4D21E1E5EEF5E9342
46204EDC7F401AE43E08A6B272F2C98D5497F255FEFA35A33200E44A5315FA10BDC14733609
E52B01FCC9ED7B72284D007BFCC453BA13FD3C7F07545D42AAA1AAB54FADC99E8F260EDE122
80EBC10F60BA8BB647B2E69A333B80B4BABEEAF9060982D3DFD423F1A8084628EE857003A6C
C1DA14EF1148B1EA28D9C8C23D825D0D7BD024C447116BD2420823609614A3186B6F1180E59
306742E633B38DED62F4F6C9BD8E103F65076AACF72268C3B69429162C2C56A52EFD5822B7E
A2305AE733200E44A5315FA10BDC14733609E52B97A0BB186D30F7A4B06BED474595DDCC3AB
305D71DFBF003CDAA475FBD4C2B0038E7ECB3C37CE239C1BF65F51ADFA97AC067841EDE91CB
E80FFEC7F65B62A527594D8AAC49EC1E078D728C6509447E1C4909DD9128DDEDD06F38C6585
BC872EE59908D6A004689A57370BE5D4C8985C5729C19D847A97E748254AFD05878A6A10FF9
ED08EA438189644E7B55E33245615A3B8713AEABE87EA523973484378EEAF733B807FE3A911
D007BFCC453BA13FDFCBA1A49099B71AD0741F299CE4BCC25999D9297B3212704CD1F2D2C19
F63643A2EF920E929F92D8E3204A2D40DA99218F617C7AE16996F518C595AC7EB563D068606
B937DB62146CDBAABE0F9C0C1B86E0B4CCC7B98D3598BF49D3EDE1AB6C8C2B365205CC7873A
E2F729D68D931B10A848EE628AA416408680E00E789BA66BC2069A4BDA74279B7465DFC8569
4B19F17BCED96B0534BADA93B9EA4778FB31E3ED7BC4DA489702329E3DACD63D01032040268
F607CFA1ADFB36E6CCB3E4D262A8A23E1FDD023DE9EA155B3FC84101BE2D0CCF703085B7C8D
5AB7DC23665C4E2C45348E696FC64B6F4F9610775C33733ED939359928962FD4822051A741E
492BDA9D4052BA690D52E5E7931349504ED7D35BEBB67C0408459D66DF113FEDD0D462AEA9D
EE0F3E3627D35011880AEA5C6EE9B70503BF8D9EA6A8DAF377B057330C1AE06956D9CA89FBF
8BE1465CC410446F10EAB651E8A94164F1593B3FA48656D4F24776443DB6F85C990E53978F2
D4C2A21424B440E5882CF46BF1398CB71C368D553897F90A604B4720B211043C627149D7516
8E028461C8DDB9A46179E5F80741F299CE4BCC25BDE04A285D53012A978D1EF6E62B31A0E87
737F8B4D4363D8BF49D3EDE1AB6C8463F6D98681671C57A04359D70F68C5AEE917936129EB4
3E2281B7B7C64288CE422CF3274195A61ACF1D839D2A69088F02B01697D329ADBCD9886B09D
4EF4238E316F63FF7F04C664680938AD2716B65B39D1275D1F622FDCC11A8E400530F999246
BE9439B3739DD0739DE71E8AA4BC23499A8CAFCBE1B6CCACDCFABF4759EDF9FEF3A99F7C117
776FBCDF7BBA48F57E363D4DDF4E04FFF4B718107E24783F3DF8BBD47E5678ECCA657C948AB
E365E659E23D2A5680931F40C5DB759849A3566DEDAE20B66D8698AA3358F93C86A4F04BC10
36EEEAED4CD27E8E63B214731D1F7453DEE167DB34AE2DF2F3B7AFEFCF6E73527E5582B4660
E703F0A8D44E90708AA025B95CA6AEA3B8F55252432991F9AAEC07085A9C11166290DFD9455
A7B915DA39F0B63CD9D4AB91CD9C2A126F5780D3C76C60F64F6FE4CDFED66D184917A6A958C
33DC3467B3DAF13E952D09F4644B4054D6697E41717D00BF4956C8F6B0D6CFAD250BC02E317
2D2DB97921FDFC4CA12272DF806A5DD1D95D745C918BC4C2C21B7E253446C53CCF334F99775
3E1287D94001AD8D5E082A650523E99A22C63C7F07545D42AAA10CB27ECAAC2E3B30C435BD2
41F410F5EE6A10F165B08CC9BF304040FC5EFB0F82FF6CB9BCAD687B40BC119F7A6D6E74BCF
B29CD3297CC05B0D39068B6741FBADCF6E0DCCF195A18EDF0F6D6F9EBE1CB27465DFC85694B
19FE5117A0F75F1BE27E56D6C12F62826544D9322650E2B3DBD0C4963D84E63D1A2478104F3
4D14B1798ECCA1BAB5265B3B4809CFF5419EEC5977B532D750B6B1583C7F07545D42AAA1A79
4134B776E10698274ADB7FABE859991E6E14FAB2E84566DD4C8C275AC25399017D90841782C
29C6560F3F347C012BCCF334F997753E12E242BC227AAB97C218B6C1B7235808218F6B9FF41
F1D4E4246DEE190447FD9D28D5BCB246BECC3A41AFD519A133BD9FBE4EDAB94078D28026BC7
8D228A73CABD1BC8DC6F1C063D29C3182E613DD50BF44E1A3FF64D53B0A5E204112F5C7B944
E74DD879A6DDE98C8C5E48013F821BD49CC95A46A87A25BFEBDFFE063C80D9B40F205A381E5
5BC2B0D779B7EF3833930200E8161773260A3A549F46E24D47A1FA2C4A5AC516371D80C7B79
789A25B3E9022AC0421513D7E59D5D290728B548728C3A4E57DF1CCD8857B70CA33B5B6DC2F
74BFC6B63CE2AEFB7DDD6A5B57018C7A0BA9D36294AEC8AE6C12D6F053E38AA69C5D8AC9F01
BA0584AD0B106718BB5C1B217A12D69155648043FCAE5872C062B342A7FC99FB931608E1F48
8CFC61359667653EB8B29D9A6EC45348E696FC64B6D01C2E2F37462B4E11F576A4E73D3C545
96AD03176F9680D9485833A06E6333F42B0FAD437B385232125AF686095B12294525B85D5CC
15DC07B682379E8F0C5DA591BA02F18E9B014572471B931272C8E28693DE026F4FE5EAD3117
13F8EFE5C2CCEEBF1AC2693294B4054D6697E41717D00BF4956C8F6B0CD398E87ED513BE2CF
1D839D2A69088F02B01697D329ADBCD9886B09D4EF4238808CD58AD641642048109037D9B3F
1F4FB053D14A43268BD0848DD5517340B9A6BA939281D1F575F8147910E58BF7821C49A4DF1
B1E06F64CF1D839D2A69088F02B01697D329ADBCD9886B09D4EF423897956AED72045AB03D3
B686FEE2C5FF9FD0E7D9F05C77780BA5B03A062B0B92E7FB20A164FCE77F0582468CA21B571
F1E72C572D5FA1ED36D6733401D5248DFB9A0538507424C7910D6FEE507617651E5A845EEC0
D807FE1C09B234C3152231C7B3CD023E2BF0453E4BCCC9D56448781E792CAB0A2CAE1EB3D51
3B0F187A8FE3238D9F910676561694A1CD231ABC196D5174AABE1531C7924DA22F741484388
B49B21F89A9D2AB6F52FB15DB02E06D13A49E897B1445EE7A02B01697D329ADBCD9886B09D4
EF4238ED81753222C46E704AC52D7D9B7AEA5CEF6ADB9E4AADC04AEA2EE272A105EBF2E20F8
06C97DA0AB143409A02D4223A0453044C801ED95C178899782DBDE122DA0E271CFFCB309F49
9CAADFC3D8E227B74AFF288CB7270987CDA0FE6AD37E3B01BCAB07FD2E7B2D5270415114212
A94D530BDBA5D4EB67C5E007BFCC453BA13FD8ECCBD28FF1506E19EA64AE737C0019A32D29C
3D28A4BA3B007151EDE0A5062DF6434B17F7A25F0EC1F24114FD033934C8CEE45243FA03FC4
355F3B7065928DE18C3D213B176E058B339DB6C0BA33A82781158A0583754AAA9D116B36A64
E6F2B720E36B404217D9
-----END ENCRYPTED SCRIPT-----
}//end of  nuclei_detection_H_inner()

// ------------------------------------------------------------------------
proc nuclei_detection_H(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
//OUTPUT
objectlist Nuclei out "Output object list with detected nuclei"
) object recognition, nuclei detection "Nuclei detection procedure. Detects nuclei on the input image."
{
	input(ThresholdAdjustment, 1.1, "Threshold Adjustment: Nuclei Detection","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei. The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment,9.0, "Nuclear Splitting Adjustment: Nuclei Detection", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 200, "Minimum Nuclear Area: Nuclei Detection","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.2, "Minimum Nuclear Contrast: Nuclei Detection", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")

	// Inner-technical nuclei detection procedure
	nuclei_detection_H_inner(reference, ThresholdAdjustment, MinimumNuclearArea, IndividualThresholdAdjustment, MinimumNucleiDistance)

	ErrorReceiverForNucleiDetectionLibrary_v1()
	if(ShowIllustrations)
		imageview(item=InitialMask.border.mask, label="InitialMask",title="Mask after the initial thresholding. Adjust par. \"Threshold Adjustment\"",  	 	image=reference, gamma=2.6)	
	end() 
	// Removes breaking lines between the stuck nuclei.
	// Input parameter is fixed.
	controlbreakinglines_v12(nuclei, 0.8) 
	// Adds to object list a contrast attribute
	object_contrast_general(cells_out, reference, InitialMask=InitialMask.body.mask) 
	
	// Creates the illustration "LowContrastObjects"
	if(ShowIllustrations) 
		set(CL_Temp=objects)
		objectfilter(contrast<=MinimumNuclearContrast)
		imageview(item=objects.border, label="LowContrastObjects", title="Discarded low contrast objects. Adjust par. \"Minimum Nuclear Contrast\"", image=reference, gamma=2.6)
		set(objects=CL_Temp)
	end()
	objectfilter(contrast>MinimumNuclearContrast)

	if(ShowIllustrations)
		imageview(item=objects.border, label="Nuclei", title="Detected nuclei. Adjust par. \"Individual Threshold Adjustment\"", image=reference, gamma=2.6)
	end()
	calcarea()
	calcintensity(image=reference)
	set(nuclei=objects)
}// nuclei_detection_H

// ------------------------------------------------------------------------
// Nuclei detection procedure nuclei_detection_D() used 
// in detection_D script 

proc nuclei_detection_D_inner(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0. Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
int MinimumNuclearArea=70 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
double MinimumNucleiDistance=7.0 in "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.]",
double NuclearSplittingAdjustment=7.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
//OUTPUT
objectlist nuclei out "Output object list with detected nuclei.",
objectlist InitialMask out "object list after the initial threshoding.",
vector ErrorInfo out "A container with a possible Error Message. If no errors occur, the ErrorInfo.ErrorCode will be zero."
)object recognition [hidden] "Nuclei detection inner-technical procedure. Detects nuclei on the input image."
{
-----BEGIN ENCRYPTED SCRIPT-----
7F23256AC624B199C006E24EB7A33EF0D550050BE739DB24A9360BF9FEE7B9F398F2730549F
87953F97C71228999FF61605A502A1361963DC4D86109A3CD931DDB25C53B2EFC51545113A8
827FFAE0D3EBF2BE70E2041D67BBC984F4D10EAD09963C31ABB1A5C27F8235BF7097A2014DC
3EC5F98C172855BE486D610CA12E533:00413C70FF887DD30F1DA4475611141BDF3C706A61B
A2E45CDD292361128FA263EC925360B636DF57C8C43740415B32B42DC2FFE71008560289EAE
E9507F21454215003C8AACB435B3E7F391A038D9C10C9FAE3DD46A79005E6A65B6A500D47F8
3F4B40F1F785894E5E23ED69DA446385E121D0632D61EE15C3D7E87E3AB7523/909BF62A287
AB2B757F4CD484255B567CB486F317DEB6B038EBC3B9B87E297C5A5AB87C4FA046AB251D0ED
9CBEB588BE57510B985FDC4911DBF4F3F871011D8551909E2142BFAD6E5596DCF25D27BBDEB
51D3A597953C5B5258459C6FB672759242C0ACF47A47036F5EB3B36C9FF1E514537D1EA4647
F2CB49C0423ED2ACDA0A0D6D6F4F0711DA62E8E06C263BBC132C4CE2AFA9AB485B09877CBE6
5A08BC72059B2BCCE3C1C24DCCCD94768A1B7A4EFE8CA6BFD1FB1AD7CF72DD4613668FB9B1B
5DA2E46FB4955A49C0423ED2ACDA0A340870FCE6BC39ED4FBCC71EBD16156F71D401504D8D9
44FF8BF052EA2F6ACA0089DE4F87FDEE7B103598045A9DE607BF2F47F9D3B6E14E89D1AD060
F1D5C118FF84F16882D5C237D9CC6EB5F3B9294141450E20AD3359B75C8DF8B9BCD6051DFE7
EF42512942F67354BFEC5442BBEA052102D7CA299F393050A3DEC8ABBE8B48784D1E7D586A7
83C91A030D17F18D55DF3D478A16F8E16EDB21F9B083ADAD67C0E8C78B7782512B2EF6C506E
E44497847C367F143F9827840C26D3336E393841A8FFE1805266F776614099AF0E68B5D0247
71C2E87AA4F39CA906FC5236A487AD175D482BA3DE20B240D16C5002A950E8CA6BFD1FB1AD7
C42C55DF13421861CA7D22A5FC211A883E93B1F82142790B013422AA940C35BD8C3F6D313F3
916C2D62F312B1B99FBFE0DE042B136DD49D16195AB24781570E9708ABB1F79CAFE3D9600BB
D541FFC874F50F7345B521A93B9D1D195807259734CBEA6CDE52685486DE2A5FBC59769A792
BAAF1E563CECADB559A6A78C9E47EBA482A608FE0D6DD7FD384DB92747EE48F7CADCEAB4D8E
583B4615C9CE4447A5DC79D795B57EC7E69A2D32F132360EEDC574EBA4BF470E91C4666A119
BCFDCCEEB81113E7A268308CECE13263F4DBE5DD62A931E8DCC7229FD049C0423ED2ACDA0AE
4D6E9F0FCFB5C35D8FAB1FEA5A57DAE4B43C72C4FCD94FF2C77CA0825C281D63CB3F5D25726
AB1A1D2A24C10E62969081053071EF8BD500C1CA016399FC38AC78B3B01123F4C87C1197889
2D57D588F0C1383075B7784663ED7E2D52024E24A3AB9EADC22B05189ACE1086314E1D19BC8
C7C597C4D85406CDAA44AAD85B9D6BAB4288862D3D9554D8012378D93C3BB6484725DC28667
558F8DA4DDFE894074BE93B1F82142790B013422AA940C35BD8DD9D3809896D0ABD2C77CA08
25C281D624DE3AEF67CBE595D8A745CAD86CB8EA51D88B8A46C10B4E4F4201921C7F294FB8B
183A2E34A9AD18BD4BA482F298F50DC53B3C73DD7EB5382F75ED0367FC6B4A5F56097B92A10
1C4B2804FBBE9EEFFB795CCEBF45CADA99723C3E29AC6B1760FEDE11566CBBA5C32766EF4E4
AAEABBE70851E7FF9F9DDF97EE5978A57178966ED115C63A46144E5BF338B2F17D89C3185D9
4AB3FBF6352479549B64AA615714E4E893BE20273612B22282933ABDE58311611F285893776
462F312B1B99FBFE0DE042B136DD49D16195AB24781570E97D0B53746E575F149600BBD541F
FC874F50F7345B521A93B9D1D195807259734CBEA6CDE52685486DE2A5FBC59769A792AF35D
49D1C92CC7C3F6F810D164982F2B5114DD6AD70011EC27390583F043DF7B0F0FD3021717ADB
D997796D297DFC2582964C44532A8D7C1128951EB4BE5D8848E589DFAF3D8AD6E7E048AFAD9
4BF68188BB7C01855CBF02762F178C005ACC045D8B69501085C4ED8E7DA0ED208711308ABB1
F79CAFE3D9600BBD541FFC874F4338F88AA8CF41DFEFE4CFC3E5783C35332E8406BEFECDCCE
8CA6BFD1FB1AD7C6179D4BF9B9D45E32F8C749B96EDD85806F2AAE855580BA6136827A3C528
CD99C8CF3FD8C4584A98389AF4D718724364E09D66AEBFCC3361B3B6F56AFE721F046C4E389
7994504D0696AAD0A5A3E750FA6B8A1FE7031BFDEC2EC8BEE3FF9FAD9CDAA44AAD85B9D6BAB
4288862D3D95546513660AAF7C40392FEBD0A9B0F4F696389AF4D718724364E09D66AEBFCC3
361378D877F222206E7B69198C16FE2E07ABA42A24BE58330DC6DD89A7BF418C031B941B241
2F0050695B73F03673DCE74535393BF18E29093682A608FE0D6DD7FD05F94EAD4479281B88C
BB99D1FED938B65BF1885AF9B22BA0F9E4FE2668C3324332E8406BEFECDCCE8CA6BFD1FB1AD
7CF72DD4613668FB9BCD99BD31B46983D6A235505225A6FDC68FCFE6681CB6D79B334696912
71AA8B5C43A58328374E3C21BBA815547DA822782F75ED0367FC6B449D4BD08C87AE9D8340B
918867E436089CA063877F583AD713422AA940C35BD871D54A5F9912AFC073E549FBF0415FB
0384DB92747EE48F728EBD3C46A1635839E6FDC3F4706FA025D52B3CBA04CE652BDFD1B6A89
0F0E5346CD4088D5D939D46643993DCE972B1126BEE54ACB615284FFBDBF6583A3C385BD1B5
F07B620F8E7462635471F05FF7A43685C717FB06B166DF53F7C94B2C53C05C9439E6FB52547
5C1419206DC4CB2554DA0A23D552995613A6E13797206216BA42A24BE58330DC3F445F3A1FE
400FD26408EEDDE2153AF72EFF553247C0B68F0DEE91D3F5656F53BCDD76097472F8CE2A5FB
C59769A79215F96544E25225056EF3E89BB923818D8056194DD51DFBEB0FC132F9ECB4D6FA4
10241E7E29F71D4005B65CA38126379CE8AF7AF5E621F33CAAAA02DFA0F390F08FA5A772463
67793F6F810D164982F21542801DD002C5068B7117BCCDC2DE1E2A25D52E7BCE24C924547EA
A81878B65CE94C17DA47320D3DA79FC13856F03049278EC2FE7631D976A1017A9BF559CF397
F5EFC1DFE8EDB691174DE422CC381BB1A2C7E0C825FA2C27C989532C900DBCD48053DA80541
D762038D4CD554E743F2552BEABAA2CB4987CBF3C7785854CC72523CB765AEA51E57D422417
92FBF0E4809A576ED1745CAC7889FEB7B7E40B3953FC1E4C508D65CC5B2CDB496BC8C09DBEB
141AF1D6DCB33692967B7C1CCE8031DE621DE6A85A3B496E9832E28AB3FF7025F57BEDE35CB
1111978892D57D588F0C1383075B778466BC3626D0BADC6FF137AD3610D6906C2789A155B52
7A783322AAAC7D272EE0CA12D34D602772FD30CC9CB2DEAC29AF91BE733C2313C37C21F1602
CB19024DFA1FFE8B1953196EE2EECA945F63DBE18581D0E7836DC833FA37861C676E319796E
40AC6DC292FD304150107DB81D5DF078A3A8557C217E85CCD7418E51AF713B86062CF953BF0
CF00C39D30DB2EA66510CE3B0636205D9984438273C0BF622D97BC13CF250ACB6A82DB5B4C4
B0836066F1A411579E3FC3F9826729E3060F21C1D2BBD2C6483D7DF142519205A3E90778702
79607372BA7CA35366F70560085703B2FB2EE1A48C25A61590F70D69E5C02A211AD585D0896
475C3A37BD0BFF0323A8E3655ED5A8237838D4F171992EB4942309A2A62FEAC8612800071FF
B99BDA15DA4D7FC65195984E0049A22A40F2F3BCEFB272D6ECD74F20D62E9EF8DA34818F600
8E043BB54270FE1F631DE86FBAF1342DDF3E86799AF7DAF20BB461A5D6DC5C6F56B466FDF9E
4E0830622668E44309F60AEF349E6CC7676BBAC960762263486EF2323ED0174473854CEDCA7
5BDF8886CBADDF1F6327993F65E182F88AD8CB83AC96F1DA11FF4EDF3E6FEFFEA0121E9CD7C
FBA6C8D635AD60A2C04F06F76620C64A0384EF2D30A9B0BC74884576C212DD874C3A9430CA7
E2EBC74884576C212DD5852F71074DB07B408F81B53E43FA1027E419CDACF2D1A5B3BE5B437
C59F1E13EB6176518A09692100FA2B25B031BAE3C5A984B711ED18D5B87B1C34D512A1BFE26
50AF68DB76E8C8F977024740BC2E286DD96665994282D9CA781A408C722F576340E93902E36
E84E72E08220ABB53B22EAFBF85DEDA850FFED91919131C309AD0BFF233468143A421622FD0
B2B8F43DE03EA2D5BEA9CEA6D2268594FCCD218C325AF6FC940AD64771EDE412DFCBA2DC205
4463A9BAEB6438A43FA0F1432187C24121368066DF2858D56B38F5C86565508FFDAAD0E6859
C6C87D8EF0C62B95359A6A78C9E47EBA482A608FE0D6DD7FD248DC3B1AA1ACF8838B0C47CFB
425A3EC79BD82C61525D1FB7CB0AE4BE393E53FF46D5932ACC69819FA90B9F878B8238771ED
E412DFCBA2DC2054463A9BAEB6438A43FA0F1432187F210D46C4DDE8BFA5F7A846B33F1AF14
59BF71C6B5F12D272B52639B58DF251EB749E952F1C40BA18D20D58BED2519393F6F810D164
982F21542801DD002C50630BC8EB2C12A768783906B6F8AA236B2206FCB1E12EB28FE8D471C
00B7ADC17702F829CD91B8BA893F76B680AC82B4B986F55981F8A6763DC96E7C40E5500CCE1
113E7A268308CEC25EDDDDE663DE16A266E2ADF248A2D954FFF076B24FA0D8A0552464555A2
5C8FBBBBE301DF37B9B51113E7A268308CEC25EDDDDE663DE16A266E2ADF248A2D95087D784
C16A023E7551D3C9A42CE16FB74FCA83C64E485A7BBBBE301DF37B9B5242886AFCA59A74838
B0C47CFB425A3E66634B276862DA937673F18318C9F4F179549B64AA615714E4E893BE20273
612B22282933ABDE583483F8DA46F7CDC327312D545B7C8432AFB8EB3D111991108B914DB64
CDA7B0B6D8EE2268A91B1014876C5A76249436AAA3BD492E73024F8F5F331897C6FEE1B214C
BFBF925699164306CE9428174793FC99302FE09E4F43095A391DD37DC10DFF55E386705635B
0C9F8B7400567CD017ED14033C11B79D424C4FD15FB91EB20285D94AB3FBF6352481824A97E
04328608FF33C97A956A2148D72DCEBF08D8CDD896B68F44115C35D47FCC49613C97431C346
31084221CD3811CE0A044FB79EA393D6B4AB795AA6BFFA9FD6AE85BEBE5CBBBBE301DF37B9B
5526E2B0B56299E4FD7118A515F0202C31531F42FB8FE76FDF9639EA3C110F1F92C13431926
45DB84BD0C9CA75B75B0ED43B6E2DF6EBE25D09DD43613F035EEA753F7347D33A5EEF8E52DC
70134E90412275FA575F4A41A870DFBC8196EAD151AA51804ED1A27A0CB51DDA460CE98A2E2
1A1A744F1B896141B91DCF6DE7E6163516B5903544D3AE7011978892D57D588FFCC1EA1D858
53D2BD1590AE8511B23C73F6F810D164982F21542801DD002C50605943705F1B09A7358302D
BB8CC53F07857696A6477F6C1336A104F8757DB617197BD300B7E71CAA14E97B08C73285C19
13ED345DDCE09698D72DCEBF08D8CDD76430F690F62DC1FCF386ED7EF1414337C37C0F3BA4B
7C06FB7A666BDEBE5FD56BA8A51A49BBE3763C4CB1CE029D228B7D8E180154B3AACAE2FF622
E088C73360FFEC44DBE5D7ACAA6A074DA1B98540983A58726EAF3B44B7C80612ADD543F5CCA
1DE7017AEFA303748657F4ABBD85F727560974251452DDDCBE7C3A6525F2BC1C3ABBCF2586A
9ECA689793373A99957B749E952F1C40BA1328715C6BC9F961BCB422B7E01674166088A7516
CD27629A7114294B06E741E1ED92341697CC77A93B71C2BC9336BFE19DD43613F035EEA7D8C
5DBFECBB3AE0DB11D0AFC45C8948FE074F0FE77FBEBC767C62448D4C901CB460BFC1D2829D5
43D1AACFD9F52C12DE29FFC883BC98C02AB3ED8A4F4855BCBB77ABD127B6DB81096AA51C192
665747898BA1AADBBEA82AEC0F4BA7959B07E2C100E73658B9F99A9BBDBE35B67DDA9FB8602
B396768878C2306E504B748B2C2CF85CEF840BFBE3C06E9323E50A21CDAC4AEC61472A3CED6
12A194DF9B02588F477DCE4F2FC9FAB19DC93E51C985AAC88F45A7F215A431FF31756305E42
76722D0704BEF6160E25DD366A84AB2D9D1F980D2C7F42AB06642393E020E03BEEE747EB144
DE72A6C4BAA587070FE973501329E32D68A971C93E6521381FDE4A640CC6B20C9BE6CD4FDE3
BE3B47A3DDB6A9FD9D8F31C1080CC92C3BFBB07F40B1AD8C54A2FF053C2EAD168F977024740
BC2E20088D14194F82C289A48917EE6907E27
-----END ENCRYPTED SCRIPT-----
}//end of  nuclei_detection_D_inner()


// ------------------------------------------------------------------------
proc nuclei_detection_D(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
//OUTPUT
objectlist Nuclei out "Output object list with detected nuclei"
) object recognition, nuclei detection "Nuclei detection procedure. Detects nuclei on the input image."
{
	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei. The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")

	// Inner-technical nuclei detection procedure
	nuclei_detection_D_inner(reference, ThresholdAdjustment, MinimumNuclearArea, IndividualThresholdAdjustment, MinimumNucleiDistance)
	
	ErrorReceiverForNucleiDetectionLibrary_v1()
	if(ShowIllustrations)
		imageview(item=InitialMask.border.mask, label="InitialMask", title="Mask after the initial thresholding. Adjust par. \"Threshold Adjustment\"", image=reference, gamma=2.6)	
	end() 
	// Removes breaking lines between the stuck nuclei.
	// Input parameter is fixed		
	controlbreakinglines_v12(nuclei, 0.8) 
	// Adds to object list a contrast attribute
	object_contrast_general(cells_out, reference, InitialMask=InitialMask.body.mask) 	
	// Creates the illustration "LowContrastObjects"
	if(ShowIllustrations) 
		set(CL_Temp=objects)
		objectfilter(contrast<=MinimumNuclearContrast)
		imageview(item=objects.border, label="LowContrastObjects", title="Discarded low contrast objects. Adjust par. \"Minimum Nuclear Contrast\"", image=reference, gamma=2.6)
		set(objects=CL_Temp)
	end()
	objectfilter(contrast>MinimumNuclearContrast)

	if(ShowIllustrations)
		imageview(item=objects.border, label="Nuclei", title="Detected nuclei. Adjust par. \"Individual Threshold Adjustment\"", image=reference, gamma=2.6)
	end()
	calcarea()
	calcintensity(image=reference)
	set(nuclei=objects)
}//nuclei_detection_D()

// --------------------------------------------------------------------------------------
proc nuclei_detection_inputs() object recognition, nuclei detection "Support procedure for including all possible input commands to the nuclei detection library at a user defined position in a script. Please note: This procedure provides all input modules with the defaults of algorithm B. Please refer to the documentation which inputs are used for which algorithm."
{
	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei. The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment, 7.0, "Nuclear Splitting Adjustment: Nuclei Detection", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")
}

//########################################################################################
//###################### THE END OF THE NUCLEI DETECTION LIBRARY##########################
//########################################################################################

proc nuclei_detection_set(
image reference in "Input nuclei stained image. Nuclei are detected on this image."
) object recognition, nuclei detection "The procedure helps to find a proper algorithm for nuclei detection. It calls sequentially eight detection procedures with a single image and depicts the detection results. One can visually inspect the results and select the best algorithm. Nuclei_detection_SET() procedure ends with Stop() module, which stops the script run. Use this procedure only for selecting a proper algorithm and thereupon replace the Nuclei_detection_SET() with the selected algorithm, e.g. Nuclei_detection_A(). In Data Explorer object lists Nuclei_A, Nuclei_B, Nuclei_C, Nuclei_D, Nuclei_E, Nuclei_F, Nuclei_G and Nuclei_H correspond to the detection results obtained with algorithms A, B, C, D, E, F, G and H, respectively. See also Opera Nuclei Detection Library.pdf."
{
	input(UseDefaultValues, Yes, "UseDefaultValues: Nuclei Detection", "y", "Nuclei: YES- Use default values for all procedures. Player Inputs are inactive. NO- Input parameters are taken from player panel. The same inputs for all procedures.")

	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")

	imageview(reference,"reference", title="Input image with intensity information", gamma=2.6, image=reference)

	if(UseDefaultValues==YES) 
		delete(ThresholdAdjustment,MinimumNuclearArea,IndividualThresholdAdjustment,MinimumNucleiDistance,NuclearSplittingAdjustment,MinimumNuclearContrast)
	end()
	
	if(UseDefaultValues==YES) /// detection_A
		set(MinimumNuclearContrast= 0.1)
	end()
	nuclei_detection_A_inner(reference) 
	ErrorReceiverForNucleiDetectionLibrary_v1()
	controlbreakinglines_v12(nuclei, 0.8) // Removes breaking lines between the stuck nuclei, Input parameter is fixed
	object_contrast_general(cells_out, reference, InitialMask=InitialMask.body.mask) // Adds to object list a contrast attribute
	objectfilter(contrast>MinimumNuclearContrast)
	imageview(item=objects.border, label="A",title="Detected nuclei. ", image=reference, gamma=2.6)
	output(objects.count, "A found as many nuclei as")
	set(Nuclei_A=objects)
	if(UseDefaultValues==YES) /// detection_B
		set(MinimumNuclearContrast= 0.1)
	end()
	nuclei_detection_B_inner(reference) // Inner-technical nuclei detection procedure
	ErrorReceiverForNucleiDetectionLibrary_v1()
	controlbreakinglines_v12(nuclei, 0.8) // Removes breaking lines between the stuck nuclei, Input parameter is fixed
	object_contrast_general(cells_out, reference,InitialMask=InitialMask.body.mask) // Adds to object list a contrast attribute
	objectfilter(contrast>MinimumNuclearContrast)
	imageview(item=objects.border, label="B",title="Detected nuclei. ", image=reference, gamma=2.6)	
	output(objects.count, "B found as many nuclei as")
	set(Nuclei_B=objects)
	if(UseDefaultValues==YES) /// detection_C
		set(MinimumNuclearContrast= 0.1)
	end()
	nuclei_detection_C_inner(reference) // Inner-technical nuclei detection procedure
	ErrorReceiverForNucleiDetectionLibrary_v1()
	controlbreakinglines_v12(nuclei, 0.8) // Removes breaking lines between the stuck nuclei, Input parameter is fixed
	object_contrast_general(cells_out, reference,InitialMask=InitialMask.body.mask) // Adds to object list a contrast attribute
	objectfilter(contrast>MinimumNuclearContrast)
	imageview(item=objects.border, label="C",title="Detected nuclei. ", image=reference, gamma=2.6)
	output(objects.count, "C found as many nuclei as")
	set(Nuclei_C=objects)
	if(UseDefaultValues==YES) /// detection_D
		set(MinimumNuclearContrast= 0.1)
	end()
	nuclei_detection_D_inner(reference) // Inner-technical nuclei detection procedure
	ErrorReceiverForNucleiDetectionLibrary_v1()
	controlbreakinglines_v12(nuclei, 0.8) // Removes breaking lines between the stuck nuclei, Input parameter is fixed
	object_contrast_general(cells_out, reference,InitialMask=InitialMask.body.mask) // Adds to object list a contrast attribute
	objectfilter(contrast>MinimumNuclearContrast)
	imageview(item=objects.border, label="D",title="Detected nuclei. ", image=reference, gamma=2.6)
	output(objects.count, "D found as many nuclei as")
	set(Nuclei_D=objects)
	if(UseDefaultValues==YES) /// detection_E
		set(MinimumNuclearContrast= 0.1)
	end()
	nuclei_detection_E_inner(reference) // Inner-technical nuclei detection procedure
	ErrorReceiverForNucleiDetectionLibrary_v1()
	controlbreakinglines_v12(nuclei, 0.8) // Removes breaking lines between the stuck nuclei, Input parameter is fixed
	object_contrast_general(cells_out, reference,InitialMask=InitialMask.body.mask) // Adds to object list a contrast attribute
	objectfilter(contrast>MinimumNuclearContrast)
	imageview(item=objects.border, label="E",title="Detected nuclei. ", image=reference, gamma=2.6)
	output(objects.count, "E found as many nuclei as")
	set(Nuclei_E=objects)
	if(UseDefaultValues==YES) /// detection_F
		set(MinimumNuclearContrast= 0.1)
	end()
	nuclei_detection_F_inner(reference) // Inner-technical nuclei detection procedure
	ErrorReceiverForNucleiDetectionLibrary_v1()
	controlbreakinglines_v12(nuclei, 0.8) // Removes breaking lines between the stuck nuclei, Input parameter is fixed
	object_contrast_general(cells_out, reference,InitialMask=InitialMask.body.mask) // Adds to object list a contrast attribute
	objectfilter(contrast>MinimumNuclearContrast)
	imageview(item=objects.border, label="F",title="Detected nuclei. ", image=reference, gamma=2.6)
	output(objects.count, "F found as many nuclei as")
	set(Nuclei_F=objects)
	if(UseDefaultValues==YES) /// detection_G
		set(MinimumNuclearContrast= 0.1)
	end()
	nuclei_detection_G_inner(reference) // Inner-technical nuclei detection procedure
	ErrorReceiverForNucleiDetectionLibrary_v1()
	controlbreakinglines_v12(nuclei, 0.8) // Removes breaking lines between the stuck nuclei, Input parameter is fixed
	object_contrast_general(cells_out, reference,InitialMask=InitialMask.body.mask) // Adds to object list a contrast attribute
	objectfilter(contrast>MinimumNuclearContrast)
	imageview(item=objects.border, label="G",title="Detected nuclei. ", image=reference, gamma=2.6)
	output(objects.count, "G found as many nuclei as")
	set(Nuclei_G=objects)
	if(UseDefaultValues==YES) /// detection_H
		set(MinimumNuclearContrast= 0.2)
	end()
	nuclei_detection_H_inner(reference) // Inner-technical nuclei detection procedure
	ErrorReceiverForNucleiDetectionLibrary_v1()
	controlbreakinglines_v12(nuclei, 0.8) // Removes breaking lines between the stuck nuclei, Input parameter is fixed
	object_contrast_general(cells_out, reference,InitialMask=InitialMask.body.mask) // Adds to object list a contrast attribute
	objectfilter(contrast>MinimumNuclearContrast)
	imageview(item=objects.border, label="H",title="Detected nuclei. ", image=reference, gamma=2.6)
	output(objects.count, "H found as many nuclei as")
	set(Nuclei_H=objects)
	
	delete(objects, nuclei, ErrorInfo, DarkerMask, BrighterMask, MinimumNuclearContrast, cells_out)
	warning("Nuclei_detection_SET() procedure ends with Stop() module, which stops the script run. Use this procedure only for selecting a proper algorithm and thereupon replace the Nuclei_detection_SET() with the selected algorithm, e.g. Nuclei_detection_A(). In Data Explorer object lists Nuclei_A, Nuclei_B, Nuclei_C, Nuclei_D, Nuclei_E, Nuclei_F, Nuclei_G and Nuclei_H correspond to the detection results obtained with algorithms A, B, C, D, E, F, G and H, respectively.") 
	stop()
}

// Outputs container NucleiDetectionAlgorithmRegisterwith list of registered nuclei detection algorithms.
proc Nuclei_Detection_Algorithm_Register(container NucleiDetectionAlgorithmRegister out) [hidden] "Outputs container NucleiDetectionAlgorithmRegisterwith list of registered nuclei detection algorithms."
{
	create("container")
	set(container["a"]="a", container["b"]="b",container["c"]="c",container["d"]="d",container["e"]="e",container["f"]="f",container["g"]="g",container["h"]="h")
	set(NucleiDetectionAlgorithmRegister=container)
	set(NeverHappens=0)
	if(NeverHappens)
		nuclei_detection_a() nuclei_detection_b() nuclei_detection_c() nuclei_detection_d() 
		nuclei_detection_e() nuclei_detection_f() nuclei_detection_g() nuclei_detection_h()
	end()
}


// The procedure helps to find a proper algorithm for nuclei detection. 
// It calls sequentially eight detection procedures with a single image and depicts the detection results. 
// One can visually inspect the results and select the best algorithm. See also Opera Nuclei Detection Library 1-0.pdf.
proc nuclei_detection_set_extended(
image reference in "Input nuclei stained image. Nuclei are detected on this image."
) [hidden] object recognition, nuclei detection "The procedure helps to find a proper algorithm for nuclei detection. It calls sequentially eight detection procedures with a single image and depicts the detection results. One can visually inspect the results and select the best algorithm. See also Opera Nuclei Detection Library 1-0.pdf."
{
	set(UseDefaultValues=NO)
	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")

	imageview(reference,"reference", title="Input image with intensity information", gamma=2.6, image=reference)

	nuclei_detection_A_inner(reference) 
	ErrorReceiverForNucleiDetectionLibrary_v1()
	controlbreakinglines_v12(nuclei, 0.8) // Removes breaking lines between the stuck nuclei, Input parameter is fixed
	object_contrast_general(cells_out, reference, InitialMask=InitialMask.body.mask) // Adds to object list a contrast attribute
	objectfilter(contrast>MinimumNuclearContrast)
	imageview(item=objects.border, label="A",title="Detected nuclei. ", image=reference, gamma=2.6)
	output(objects.count, "A found as many nuclei as")

	nuclei_detection_B_inner(reference) // Inner-technical nuclei detection procedure
	ErrorReceiverForNucleiDetectionLibrary_v1()
	controlbreakinglines_v12(nuclei, 0.8) // Removes breaking lines between the stuck nuclei, Input parameter is fixed
	object_contrast_general(cells_out, reference,InitialMask=InitialMask.body.mask) // Adds to object list a contrast attribute
	objectfilter(contrast>MinimumNuclearContrast)
	imageview(item=objects.border, label="B",title="Detected nuclei. ", image=reference, gamma=2.6)	
	output(objects.count, "B found as many nuclei as")

	nuclei_detection_C_inner(reference) // Inner-technical nuclei detection procedure
	ErrorReceiverForNucleiDetectionLibrary_v1()
	controlbreakinglines_v12(nuclei, 0.8) // Removes breaking lines between the stuck nuclei, Input parameter is fixed
	object_contrast_general(cells_out, reference,InitialMask=InitialMask.body.mask) // Adds to object list a contrast attribute
	objectfilter(contrast>MinimumNuclearContrast)
	imageview(item=objects.border, label="C",title="Detected nuclei. ", image=reference, gamma=2.6)
	output(objects.count, "C found as many nuclei as")

	nuclei_detection_D_inner(reference) // Inner-technical nuclei detection procedure
	ErrorReceiverForNucleiDetectionLibrary_v1()
	controlbreakinglines_v12(nuclei, 0.8) // Removes breaking lines between the stuck nuclei, Input parameter is fixed
	object_contrast_general(cells_out, reference,InitialMask=InitialMask.body.mask) // Adds to object list a contrast attribute
	objectfilter(contrast>MinimumNuclearContrast)
	imageview(item=objects.border, label="D",title="Detected nuclei. ", image=reference, gamma=2.6)
	output(objects.count, "D found as many nuclei as")

	nuclei_detection_E_inner(reference) // Inner-technical nuclei detection procedure
	ErrorReceiverForNucleiDetectionLibrary_v1()
	controlbreakinglines_v12(nuclei, 0.8) // Removes breaking lines between the stuck nuclei, Input parameter is fixed
	object_contrast_general(cells_out, reference,InitialMask=InitialMask.body.mask) // Adds to object list a contrast attribute
	objectfilter(contrast>MinimumNuclearContrast)
	imageview(item=objects.border, label="E",title="Detected nuclei. ", image=reference, gamma=2.6)
	output(objects.count, "E found as many nuclei as")

	nuclei_detection_F_inner(reference) // Inner-technical nuclei detection procedure
	ErrorReceiverForNucleiDetectionLibrary_v1()
	controlbreakinglines_v12(nuclei, 0.8) // Removes breaking lines between the stuck nuclei, Input parameter is fixed
	object_contrast_general(cells_out, reference,InitialMask=InitialMask.body.mask) // Adds to object list a contrast attribute
	objectfilter(contrast>MinimumNuclearContrast)
	imageview(item=objects.border, label="F",title="Detected nuclei. ", image=reference, gamma=2.6)
	output(objects.count, "F found as many nuclei as")

	nuclei_detection_G_inner(reference) // Inner-technical nuclei detection procedure
	ErrorReceiverForNucleiDetectionLibrary_v1()
	controlbreakinglines_v12(nuclei, 0.8) // Removes breaking lines between the stuck nuclei, Input parameter is fixed
	object_contrast_general(cells_out, reference,InitialMask=InitialMask.body.mask) // Adds to object list a contrast attribute
	objectfilter(contrast>MinimumNuclearContrast)
	imageview(item=objects.border, label="G",title="Detected nuclei. ", image=reference, gamma=2.6)
	output(objects.count, "G found as many nuclei as")

	nuclei_detection_H_inner(reference) // Inner-technical nuclei detection procedure
	ErrorReceiverForNucleiDetectionLibrary_v1()
	controlbreakinglines_v12(nuclei, 0.8) // Removes breaking lines between the stuck nuclei, Input parameter is fixed
	object_contrast_general(cells_out, reference,InitialMask=InitialMask.body.mask) // Adds to object list a contrast attribute
	objectfilter(contrast>MinimumNuclearContrast)
	imageview(item=objects.border, label="H",title="Detected nuclei. ", image=reference, gamma=2.6)
	output(objects.count, "H found as many nuclei as")
}


// Extended nuclei detection procedure. Detects nuclei. Detection algorithm can be specified with Player input "Nuclei Detection Algorithm: Nuclei Detection"."
proc Nuclei_Detection_Extended(
	image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
	bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
	objectlist Nuclei out "Output object list with detected nuclei"
) [hidden] object recognition, nuclei detection "Extended nuclei detection procedure. Detects nuclei. Detection algorithm can be specified with Player input \"Nuclei Detection Algorithm\"."
{
	input(NucleiDetectionAlgorithm, "A", "Nuclei Detection Algorithm: Nuclei Detection", "s", "Possible values: A,B,C,D,E,F,G,H,SET. Specifies the nuclei detection algorithm from the ONDL. The \"SET\" procedure helps to find a proper algorithm. It calls sequentially eight detection procedures with and depicts the detection results.")

	Nuclei_Detection_Algorithm_Register()
	if(defined("NucleiDetectionAlgorithmRegister[NucleiDetectionAlgorithm]"))
		eval("Nuclei_Detection_" & NucleiDetectionAlgorithm & "()")
		if(errorcode>0)
			error()
		end()
	else()
		if(NucleiDetectionAlgorithm=="Set")
			Nuclei_detection_set_extended()
			Printf("\nWarning. Nuclei detection \"SET\" procedure can be used only for finding the proper algorithm.\n Select the best detection routine and use it instead of \"SET\" procedure.\n")
			stop()
		else()
			error("Un-supported nuclei detection algorithm, " & NucleiDetectionAlgorithm & ". Supported algorithms are  \"A\"-\"H\" and \"SET\".")
		end()
	end()
}


////////////////////////////// PROCEDURE DEFINITIONS FOR Nuclei_Detection_Select() and Nuclei_detection_AnyX (for the test period all procedures have status hidden)//////////////////////////////////////////////////////////////////////////////////////
//
//		Nuclei detection procedures Nuclei_Detection_Select(), which enables scan the input parmeters
//		Nuclei_detection_Select(), Nuclei_detection_Select_2(), Nuclei_detection_Select_3(), Nuclei_detection_Select_4()
//		Nuclei_detection_AnyX(), Nuclei_detection_AnyX_2(), Nuclei_detection_AnyX_3(), Nuclei_detection_AnyX_4()
// 		* Detects nuclei on images with different resolution 
//		* Images with different magnification (10x, 20x, 60x etc) can be evaluated with the same input parameters 
//		* Images for Nuclei_detection_AnyX() should have the sticky lebels ImageResolutionX and ImageResolutionY (unit micrometer) ,
//			otherwise they will be treated as a stndard Opera images with 20x and 2*2 binning
//		* Parameter SCAN- It is possible to scan input parameters (one at time) over the whole dynamic range
//
//		See explanations in Nuclei_detection_AnyX.ppt
//
// 		Includes all procedures created for Nuclei_detection_AnyX()
// 		Requires Acapella 2.0, starting from ~ RC60; ~1GHz RAM
// 		Supports also old-Opera images (images without SourceData.ImageResolutionX and SourceData.ImageResolutionY)
//		Bugs fixed and changes:
//		June 8, 2007; Bug  in ImageResolution2SourceData() (reported by Karsten) is fixed, ImageBinningFactor was taken into account wrong way
//		July 24-25, 2007: input "Automatic Algorithm Adaptation: Nuclei Detection AnyX" have been removed (fixed to yes)
//				All procedures got for test period status hidden
//*************************************************************************


proc Nuclei_Detection_Select(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",

//OUTPUT
objectlist Nuclei out "Output object list with the detected nuclei"
)  object recognition, nuclei detection "Nuclei detection procedure, which allows to scan the input parameters. The player inputs created by the procedure are in the sub-section \"Nuclei Detection\". The detection algorithm (e.g. A, B, C..., H) can be determined with the player input \"Nuclei Detection Algorithm\". Write to the input window just a single letter, e.g. A or SET for comparing results of all routines. The syntax like AB for comparing two selected algorithms is also supported. The algorithms are identical to ones called by Nuclei_Detection_A(), Nuclei_Detection_B() and the output results are the same. If the nuclei detection output contains errors one can apply the parameter scan with an aim to find the input parameter values, which provide the most appropriate nuclei recognition. The parameter scan can be controlled with the player input \"Parameter SCAN\". With the default value \"None\" the parameter scan is not applied. Select from \"Parameter SCAN\" menu the parameter you would like to scan and click to Run. The procedure scans the parameter over the whole range and depicts the corresponding detection results. The label of the output illustration corresponds to the parameter value, e.g. the label \"0.4\" in case of the \"Individual Threshold Adjustment\" scan marks the result obtained with IndividualThresholdAdjustment=0.4. Inspect the results for the different parameter values and try to select one, which provides the best nuclei recognition. If needed apply the scan step-wise for all input parameters starting from \"Threshold Adjustment\". Afterwards test the selected set of input parameters with the different images. Please note, that it is possible to scan only one parameter at time and that if \"SET\" or multiple algorithms are already selected for the input \"Nuclei Detection Algorithm\" the parameter scan is not supported. In the scan mode the procedure depicts also three graphs, which show how a Number of Nuclei, Average Area of Nuclei and Average Intensity of Nuclei depend on the scanned parameter." 
{ 
	/// Additional inputs
	Nuclei_detection_inputs_Select() // Creates player inputs
	Nuclei_detection_Select_inner(Reference,ShowIllustrations=ShowIllustrations) // Detects nuclei
	StopNucleiDetectionAnyX_IfSCANmode() // Additional illustrationsfor SCAN/SET mode, stops the script
}


proc Nuclei_Detection_Select_2(
//INPUT
image Reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",

//OUTPUT
objectlist Nuclei out "Output object list with the detected nuclei"
)  [hidden] object recognition, nuclei detection "Nuclei detection procedure, which allows to scan the input parameters. The player inputs created by the procedure are in the sub-section \"Nuclei Detection 2\" and the output illustrations have suffix 2, i.e. \"Nuclei2\". Use this procedure if you would like to apply nuclei detection in one script with the different input parameters two or more times: detect the first set of nuclei with Nuclei_Detection_Select(), the second one with Nuclei_Detection_Select_2(), the third one with Nuclei_Detection_Select_3() etc. The detection algorithm (e.g. A, B, C..., H) can be determined with the player input \"Nuclei Detection Algorithm\". Write to the input window just a single letter, e.g. A or SET for comparing results of all routines. The syntax like AB for comparing two selected algorithms is also supported. The algorithms are identical to ones called by Nuclei_Detection_A(), Nuclei_Detection_B() and the output results are the same. If the nuclei detection output contains errors one can apply the parameter scan with an aim to find the input parameter values, which provide the most appropriate nuclei recognition. The parameter scan can be controlled with the player input \"Parameter SCAN\". With the default value \"None\" the parameter scan is not applied. Select from \"Parameter SCAN\" menu the parameter you would like to scan and click to Run. The procedure scans the parameter over the whole range and depicts the corresponding detection results. The label of the output illustration corresponds to the parameter value, e.g. the label \"0.4\" in case of the \"Individual Threshold Adjustment\" scan marks the result obtained with IndividualThresholdAdjustment=0.4. Inspect the results for the different parameter values and try to select one, which provides the best nuclei recognition. If needed apply the scan step-wise for all input parameters starting from \"Threshold Adjustment\". Afterwards test the selected set of input parameters with the different images. Please note, that it is possible to scan only one parameter at time and that if \"SET\" or multiple algorithms are already selected for the input \"Nuclei Detection Algorithm\" the parameter scan is not supported. In the scan mode the procedure depicts also three graphs, which show how a Number of Nuclei, Average Area of Nuclei and Average Intensity of Nuclei depend on the scanned parameter." 
{ 
	/// Additional inputs
	Nuclei_detection_inputs_Select_2()
	Nuclei_detection_Select_inner(Reference,ShowIllustrations=ShowIllustrations,ProcedureNumber=2)
	StopNucleiDetectionAnyX_IfSCANmode()
}


proc Nuclei_Detection_Select_3(
//INPUT
image Reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",

//OUTPUT
objectlist Nuclei out "Output object list with the detected nuclei"
) [hidden] object recognition, nuclei detection "Nuclei detection procedure, which allows to scan the input parameters. The player inputs created by the procedure are in the sub-section \"Nuclei Detection 3\" and the output illustrations have suffix 3, i.e. \"Nuclei3\". Use this procedure if you would like to apply nuclei detection in one script with the different input parameters three or four times: detect the first set of nuclei with Nuclei_Detection_Select(), the second one with Nuclei_Detection_Select_2(), the third one with Nuclei_Detection_Select_3() etc. The detection algorithm (e.g. A, B, C..., H) can be determined with the player input \"Nuclei Detection Algorithm\". Write to the input window just a single letter, e.g. A or SET for comparing results of all routines. The syntax like AB for comparing two selected algorithms is also supported. The algorithms are identical to ones called by Nuclei_Detection_A(), Nuclei_Detection_B() and the output results are the same. If the nuclei detection output contains errors one can apply the parameter scan with an aim to find the input parameter values, which provide the most appropriate nuclei recognition. The parameter scan can be controlled with the player input \"Parameter SCAN\". With the default value \"None\" the parameter scan is not applied. Select from \"Parameter SCAN\" menu the parameter you would like to scan and click to Run. The procedure scans the parameter over the whole range and depicts the corresponding detection results. The label of the output illustration corresponds to the parameter value, e.g. the label \"0.4\" in case of the \"Individual Threshold Adjustment\" scan marks the result obtained with IndividualThresholdAdjustment=0.4. Inspect the results for the different parameter values and try to select one, which provides the best nuclei recognition. If needed apply the scan step-wise for all input parameters starting from \"Threshold Adjustment\". Afterwards test the selected set of input parameters with the different images. Please note, that it is possible to scan only one parameter at time and that if \"SET\" or multiple algorithms are already selected for the input \"Nuclei Detection Algorithm\" the parameter scan is not supported. In the scan mode the procedure depicts also three graphs, which show how a Number of Nuclei, Average Area of Nuclei and Average Intensity of Nuclei depend on the scanned parameter." 
{ 
	/// Additional inputs
	Nuclei_detection_inputs_Select_3()
	Nuclei_detection_Select_inner(Reference,ShowIllustrations=ShowIllustrations,ProcedureNumber=3)
	StopNucleiDetectionAnyX_IfSCANmode()
}


proc Nuclei_Detection_Select_4(
//INPUT
image Reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",

//OUTPUT
objectlist Nuclei out "Output object list with the detected nuclei"
) [hidden] object recognition, nuclei detection "Nuclei detection procedure, which allows to scan the input parameters. The player inputs created by the procedure are in the sub-section \"Nuclei Detection 4\" and the output illustrations have suffix 4, i.e. \"Nuclei4\". Use this procedure if you would like to apply nuclei detection in one script with the different input parameters four times: detect the first set of nuclei with Nuclei_Detection_Select(), the second one with Nuclei_Detection_Select_2(), the third one with Nuclei_Detection_Select_3() and the fourth one with Nuclei_Detection_Select_4(). The detection algorithm (e.g. A, B, C..., H) can be determined with the player input \"Nuclei Detection Algorithm\". Write to the input window just a single letter, e.g. A or SET for comparing results of all routines. The syntax like AB for comparing two selected algorithms is also supported. The algorithms are identical to ones called by Nuclei_Detection_A(), Nuclei_Detection_B() and the output results are the same. If the nuclei detection output contains errors one can apply the parameter scan with an aim to find the input parameter values, which provide the most appropriate nuclei recognition. The parameter scan can be controlled with the player input \"Parameter SCAN\". With the default value \"None\" the parameter scan is not applied. Select from \"Parameter SCAN\" menu the parameter you would like to scan and click to Run. The procedure scans the parameter over the whole range and depicts the corresponding detection results. The label of the output illustration corresponds to the parameter value, e.g. the label \"0.4\" in case of the \"Individual Threshold Adjustment\" scan marks the result obtained with IndividualThresholdAdjustment=0.4. Inspect the results for the different parameter values and try to select one, which provides the best nuclei recognition. If needed apply the scan step-wise for all input parameters starting from \"Threshold Adjustment\". Afterwards test the selected set of input parameters with the different images. Please note, that it is possible to scan only one parameter at time and that if \"SET\" or multiple algorithms are already selected for the input \"Nuclei Detection Algorithm\" the parameter scan is not supported. In the scan mode the procedure depicts also three graphs, which show how a Number of Nuclei, Average Area of Nuclei and Average Intensity of Nuclei depend on the scanned parameter." 
{ 
	/// Additional inputs
	Nuclei_detection_inputs_Select_4()
	Nuclei_detection_Select_inner(Reference,ShowIllustrations=ShowIllustrations,ProcedureNumber=4)
	StopNucleiDetectionAnyX_IfSCANmode()
}






proc Nuclei_Detection_AnyX(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",

//OUTPUT
objectlist Nuclei out "Output object list with detected nuclei"
)  [hidden] object recognition, nuclei detection "Test version for demo purposes. Please do not use in real scripts, input parameters will be changed. Nuclei detection procedure. Detects nuclei on images with different magnification." 
{ 
	/// Additional inputs
	Nuclei_detection_inputs_AnyX() // Creates player inputs
	Nuclei_detection_AnyX_inner(Reference,ShowIllustrations=ShowIllustrations) // Detects nuclei
	StopNucleiDetectionAnyX_IfSCANmode() // Additional illustrationsfor SCAN/SET mode, stops the script
}


proc Nuclei_Detection_AnyX_2(
//INPUT
image Reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",

//OUTPUT
objectlist Nuclei out "Output cell list with detected nuclei"
) [hidden] object recognition, nuclei detection "Test version for demo purposes. Please do not use in real scripts, input parameters will be changed. Nuclei detection procedure. Detects nuclei on images with different magnification. Creates player input parameters with the sub-section  Nuclei Detection AnyX 2. The procedure enables to carry out nuclei detection in the second time in the same script with the inputs different from Nuclei_Detection_AnyX(). " 
{ 
	/// Additional inputs
	Nuclei_detection_inputs_AnyX_2()
	Nuclei_detection_AnyX_inner(Reference,ShowIllustrations=ShowIllustrations,ProcedureNumber=2)
	StopNucleiDetectionAnyX_IfSCANmode()
}


proc Nuclei_Detection_AnyX_3(
//INPUT
image Reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",

//OUTPUT
objectlist Nuclei out "Output cell list with detected nuclei"
) [hidden] object recognition, nuclei detection "Test version for demo purposes. Please do not use in real scripts, input parameters will be changed. Nuclei detection procedure. Detects nuclei on images with different magnification. Creates player input parameters with the sub-section  Nuclei Detection AnyX 3. The procedure enables to carry out nuclei detection in the third time in the same script with the inputs different from Nuclei_Detection_AnyX() and  Nuclei_Detection_AnyX_2(). " 
{ 
	/// Additional inputs
	Nuclei_detection_inputs_AnyX_3()
	Nuclei_detection_AnyX_inner(Reference,ShowIllustrations=ShowIllustrations,ProcedureNumber=3)
	StopNucleiDetectionAnyX_IfSCANmode()
}


proc Nuclei_Detection_AnyX_4(
//INPUT
image Reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",

//OUTPUT
objectlist Nuclei out "Output cell list with detected nuclei"
) [hidden] object recognition, nuclei detection "Test version for demo purposes. Please do not use in real scripts, input parameters will be changed. Nuclei detection procedure. Detects nuclei on images with different magnification. Creates player input parameters with the sub-section  Nuclei Detection AnyX 4. The procedure enables to carry out nuclei detection in the fourth time in the same script with the inputs different from Nuclei_Detection_AnyX(), Nuclei_Detection_AnyX_2() and Nuclei_Detection_AnyX_3(). " 
{ 
	/// Additional inputs
	Nuclei_detection_inputs_AnyX_4()
	Nuclei_detection_AnyX_inner(Reference,ShowIllustrations=ShowIllustrations,ProcedureNumber=4)
	StopNucleiDetectionAnyX_IfSCANmode()
}


proc Nuclei_Detection_Select_inner(
	//INPUT
	image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
	string NucleiDetectionAlgorithm="B" in,
	double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
	int MinimumNuclearArea=70 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
	double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
	double MinimumNucleiDistance=7.0 in "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
	double NuclearSplittingAdjustment=7.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
	double MinimumNuclearContrast=0.1 in "Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.",
	
	bool AutomaticAlgorithmAdaptation=yes in "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.",
	string ScanParameter="None" in "None- detection is carried out wih a single parameter set (standard evalution). Otherwise the selected parameter is scanned over the typical dynamic range and all detection results are sequantly depicted. It enables to find the proper input parameters.",
	
	string ProcedureNumber="" in  "String, which will be added to the output illustration label. For example, \"2\"results with illustration \"Nuclei2\", which can be used if nuclei_detection_AnyX is called the second time.", 
	bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
	//OUTPUT
	objectlist Nuclei out "Output object list with detected nuclei",
	Container NucleiDetectionData=none inout "Container with additonal input-output data."
) [hidden] object recognition, nuclei detection "Nuclei detection inner procedure for the procedures Nuclei_Detection_Select(), Nuclei_Detection_Select_2(), Nuclei_Detection_Select_3() and Nuclei_Detection_Select_4(). Detects nuclei on images with different magnification. The procedure does not create player inputs as Nuclei_Detection_Select().The player inputs can be created with Nuclei_detection_inputs_Select(), Nuclei_detection_inputs_Select_2(), Nuclei_detection_inputs_Select_3() and Nuclei_detection_inputs_Select_4()." 
{
	set(ImageResolutionY=6.459e-007)
	set(ImageResolutionX=6.459e-007)
	
	DetermineBinningFactorMagnification()

	if(!AutomaticAlgorithmAdaptation)
		set(BinningFactor=1)
	end()
	if(BinningFactor==1)
		set(NucleiDetectionType="")
	else()
		if(BinningFactor>=2)
			set(NucleiDetectionType="_Large")
		else()
			set(NucleiDetectionType="10x")
			set(BinningFactor=1)
		end()
	end()
	ControlNucleiDetectionAnyX(NucleiDetectionAlgorithm)
	
	if(NucleiDetectionType=="_Large")
		if(NucleiDetectionAlgorithm=="set" or ScanParameter!="none")
			nuclei_detection_SetOfAlgorithms(reference,NucleiDetectionAlgorithm,NucleiDetectionType,BinningFactor_double,BinningFactor,ScanParameter)
		else()
			nuclei_detection_large_inner(Reference, NucleiDetectionAlgorithm,BinningFactor,showillustrations=no)
		end()
	else()
		if(NucleiDetectionAlgorithm=="set" or ScanParameter!="none")
			nuclei_detection_SetOfAlgorithms(reference,NucleiDetectionAlgorithm,NucleiDetectionType,BinningFactor_double,BinningFactor,ScanParameter)
		else()
			nuclei_detection_singlealgorithm(reference,NucleiDetectionAlgorithm,NucleiDetectionType,BinningFactor_double)
		end()
	end()
	CalcAttr(AreaInGeneralUnits, Area/(BinningFactor_Double*BinningFactor_double),objects=nuclei)
	set(Nuclei=objects)
	
	if(ShowIllustrations and NucleiDetectionAlgorithm!="set" and ScanParameter=="none")
		imageview(item=NucleiDetectionData.NucleiIllustrations.InitialMask.border.mask, label="InitialMask"  & ProcedureNumber, title="Mask after the initial thresholding. Adjust par. \"Threshold Adjustment\"", image=reference, gamma=2.6)	
		imageview(item=NucleiDetectionData.NucleiIllustrations.OL_LowContrast.border, label="LowContrastObjects" & ProcedureNumber,title="Discarded low contrast objects. Adjust par. \"Minimum Nuclear Contrast\"", image=reference, gamma=2.6)
		imageview(item=nuclei.border, label="Nuclei" & ProcedureNumber, title="Number of detected nuclei " & nuclei.count  ,image=reference, gamma=2.6)
	end()
}


proc Nuclei_Detection_AnyX_inner(
	//INPUT
	image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
	string NucleiDetectionAlgorithm="B" in,
	double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
	int MinimumNuclearArea=70 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
	double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
	double MinimumNucleiDistance=7.0 in "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
	double NuclearSplittingAdjustment=7.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
	double MinimumNuclearContrast=0.1 in "Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.",
	
	bool AutomaticAlgorithmAdaptation=yes in "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.",
	string ScanParameter="None" in "None- detection is carried out wih a single parameter set (standard evalution). Otherwise the selected parameter is scanned over the typical dynamic range and all detection results are sequantly depicted. It enables to find the proper input parameters.",
	
	string ProcedureNumber="" in  "String, which will be added to the output illustration label. For example, \"2\"results with illustration \"Nuclei2\", which can be used if nuclei_detection_AnyX is called the second time.", 
	bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
	//OUTPUT
	objectlist Nuclei out "Output object list with detected nuclei",
	Container NucleiDetectionData=none inout "Container with additonal input-output data."
) [hidden] object recognition, nuclei detection "Nuclei detection inner procedure. Detects nuclei on images with different magnification. The procedure does not create player inputs as Nuclei_Detection_AnyX(). The player inputs can be created with  Nuclei_detection_inputs_AnyX()." 
{
	
	if(defined("Reference.@sticky.ImageResolutionX")) 
		if(Reference.@sticky.ImageResolutionX>0.0001)
			set(ImageResolutionX=0.000001*Reference.@sticky.ImageResolutionX)
		else()
			set(ImageResolutionX=Reference.@sticky.ImageResolutionX)
		end()
	else()
		set(ImageResolutionX=6.459e-007)
	end()
	if(defined("Reference.@sticky.ImageResolutionY")) 
		if(Reference.@sticky.ImageResolutionY>0.0001)
			set(ImageResolutionY=0.000001*Reference.@sticky.ImageResolutionY)
		else()
			set(ImageResolutionY=Reference.@sticky.ImageResolutionY)
		end()
	else()
		set(ImageResolutionY=6.459e-007)
	end()
	
	DetermineBinningFactorMagnification()

	if(!AutomaticAlgorithmAdaptation)
		set(BinningFactor=1)
	end()
	if(BinningFactor==1)
		set(NucleiDetectionType="")
	else()
		if(BinningFactor>=2)
			set(NucleiDetectionType="_Large")
		else()
			set(NucleiDetectionType="10x")
			set(BinningFactor=1)
		end()
	end()
	ControlNucleiDetectionAnyX(NucleiDetectionAlgorithm)
	
	if(NucleiDetectionType=="_Large")
		if(NucleiDetectionAlgorithm=="set" or ScanParameter!="none")
			nuclei_detection_SetOfAlgorithms(reference,NucleiDetectionAlgorithm,NucleiDetectionType,BinningFactor_double,BinningFactor,ScanParameter)
		else()
			nuclei_detection_large_inner(Reference, NucleiDetectionAlgorithm,BinningFactor,showillustrations=no)
		end()
	else()
		if(NucleiDetectionAlgorithm=="set" or ScanParameter!="none")
			nuclei_detection_SetOfAlgorithms(reference,NucleiDetectionAlgorithm,NucleiDetectionType,BinningFactor_double,BinningFactor,ScanParameter)
		else()
			nuclei_detection_singlealgorithm(reference,NucleiDetectionAlgorithm,NucleiDetectionType,BinningFactor_double)
		end()
	end()
	CalcAttr(AreaInGeneralUnits, Area/(BinningFactor_Double*BinningFactor_double),objects=nuclei)
	set(Nuclei=objects)
	
	if(ShowIllustrations and NucleiDetectionAlgorithm!="set" and ScanParameter=="none")
		imageview(item=NucleiDetectionData.NucleiIllustrations.InitialMask.border.mask, label="InitialMask"  & ProcedureNumber, title="Mask after the initial thresholding. Adjust par. \"Threshold Adjustment\"", image=reference, gamma=2.6)	
		imageview(item=NucleiDetectionData.NucleiIllustrations.OL_LowContrast.border, label="LowContrastObjects" & ProcedureNumber,title="Discarded low contrast objects. Adjust par. \"Minimum Nuclear Contrast\"", image=reference, gamma=2.6)
		imageview(item=nuclei.border, label="Nuclei" & ProcedureNumber, title="Number of detected nuclei " & nuclei.count  ,image=reference, gamma=2.6)
	end()
}




proc StopNucleiDetectionAnyX_IfSCANmode(
	container NucleiDetectionData in, image reference in
) [hidden]
{
	if(defined("NucleiDetectionData.NucleiLists"))
		foreach(0..NucleiDetectionData.VariedParameterValues.length-1)
			set(i2="" & NucleiDetectionData.VariedParameterValues[i])
			set(i2=rep(i2,".","_"))
			set(i2=rep(i2,",","_"))
			set(i2=rep(i2,"-","minus"))
			//eval("set(Nuclei_" & NucleiDetectionData.ScanParameter &  "_" & i2 & "=" & "NucleiDetectionData.NucleiLists[i])")
			set(_["Nuclei_" & NucleiDetectionData.ScanParameter &  "_" & i2 ] = NucleiDetectionData.NucleiLists[i])
			
			push(AverageAreaVector,NucleiDetectionData.NucleiLists[i].area.mean)
			push(AverageIntensityVector,NucleiDetectionData.NucleiLists[i].intensity.mean)
			push(NumberOfNucleiVector,NucleiDetectionData.NucleiLists[i].count)
			push(AverageContrastVector,NucleiDetectionData.NucleiLists[i].contrast.mean)
		end()
		if(NucleiDetectionData.ScanParameter!="NucleiDetectionAlgorithm")
			
			set(table4=tbl(x=NucleiDetectionData.VariedParameterValues+0,y=AverageIntensityVector)) // +0 added Oct 24, 2007 Olavi, Bug 7996
			set(table3=tbl(x=NucleiDetectionData.VariedParameterValues+0,y=AverageAreaVector))	
			set(table2=tbl(x=NucleiDetectionData.VariedParameterValues+0,y=NumberOfNucleiVector))
			set(yline1=tbl(x=vec(0,0), y=vec(0,1.1*AverageIntensityVector.max)))
			GraphView(vec(yline1,table4), "AverageIntensity", yes, "Average intensity of nuclei versus " & NucleiDetectionData.ScanParameter,presto_options="set[0].line.color black, set[1].line.color red, graph.xaxis.title" & NucleiDetectionData.ScanParameter & ", graph.yaxis.title Average Intensity of Nuclei")
			libcall("kernel32", "Sleep", "vi", 2000)
			set(yline1=tbl(x=vec(0,0), y=vec(0,1.1*AverageAreaVector.max)))
			GraphView(vec(yline1,table3), "AverageArea", yes, "Average area of nuclei versus " & NucleiDetectionData.ScanParameter,presto_options="set[0].line.color black, set[1].line.color red, graph.xaxis.title" & NucleiDetectionData.ScanParameter & ", graph.yaxis.title Average Area of Nuclei")
			libcall("kernel32", "Sleep", "vi", 2000)
			set(yline1=tbl(x=vec(0,0), y=vec(0,1.1*NumberOfNucleiVector.max)))
			GraphView(vec(yline1,table2), "NumberOfNuclei", yes, "Number of nuclei versus " & NucleiDetectionData.ScanParameter,presto_options="set[0].line.color black, set[1].line.color red, graph.xaxis.title" & NucleiDetectionData.ScanParameter & ", graph.yaxis.title Number of Nuclei")
			libcall("kernel32", "Sleep", "vi", 2000)
			push(v_default_nuclei,"Nuclei_ThresholdAdjustment_1_5","Nuclei_MinimumNucleiDistance_7_0","Nuclei_NuclearSplittingAdjustment_7_0","Nuclei_IndividualThresholdAdjustment_0_4","Nuclei_MinimumNuclearArea_70","Nuclei_MinimumNuclearContrast_0_1")
			push(v_default_values,"1.5","7.0","7.0","0.4","70","0.1")
			foreach(0..v_default_nuclei.length-1,"i26")
				if(defined("" & v_default_nuclei[i26]))
					eval("set(NUmberOfNucleByDEfault=" & v_default_nuclei[i26] & ".count)")
					set(DefaultLabel="" & v_default_values[i26])
					eval("set(Nuclei=" & v_default_nuclei[i26] & ")")
					set(text=NucleiDetectionData.ScanParameter & " " &  v_default_values[i26] & "; Number of Nuclei: " & NUmberOfNucleByDEfault)
					imageview(nuclei.border, DefaultLabel, image=reference,gamma=2.0, title=text)
				end()
			end()
			delete(i26,v_default_nuclei,v_default_values,yline1,table2,table3,table4,NUmberOfNucleByDEfault,nuclei,DefaultLabel,text)
		else()
			set(CalledAlgorithmsText="")
			//set(CalledAlgorithmsText2="")
			foreach(NucleiDetectionData.VariedParameterValues, "i100")
				set(CalledAlgorithmsText=CalledAlgorithmsText & i100 & "; ")
			end()
			set(CalledAlgorithmsText=substr(CalledAlgorithmsText,1,CalledAlgorithmsText.length-2))
			tabulate("x",NucleiDetectionData.VariedParameterValues.length)
			
			set(table4=tbl(x=result,y=AverageIntensityVector))
			set(table3=tbl(x=result,y=AverageAreaVector))	
			set(table2=tbl(x=result,y=NumberOfNucleiVector))
			set(yline1=tbl(x=vec(0,0), y=vec(0,1.1*AverageIntensityVector.max)))
			
			GraphView(vec(yline1,table4), "AverageIntensity", yes, "Average area of nuclei, algorithms: " & CalledAlgorithmsText, presto_options="set[0].line.color black, set[1].line.color red, graph.xaxis.title Detection algorithms: " & CalledAlgorithmsText & ", graph.yaxis.title Average Intensity of Nuclei")
			libcall("kernel32", "Sleep", "vi", 2000)
			set(yline1=tbl(x=vec(0,0), y=vec(0,1.1*AverageAreaVector.max)))
			GraphView(vec(yline1,table3), "AverageArea", yes, "Average area of nuclei, algorithms: " & CalledAlgorithmsText, presto_options="set[0].line.color black, set[1].line.color red, graph.xaxis.title Detection algorithms: " & CalledAlgorithmsText & ", graph.yaxis.title Average Area of Nuclei")
			libcall("kernel32", "Sleep", "vi", 2000)
			set(yline1=tbl(x=vec(0,0), y=vec(0,1.1*NumberOfNucleiVector.max)))
			GraphView(vec(yline1,table2), "NumberOfNuclei", yes, "Number of nuclei, algorithms: " & CalledAlgorithmsText, presto_options="set[0].line.color black, set[1].line.color red, graph.xaxis.title Detection algorithms: " & CalledAlgorithmsText & ", graph.yaxis.title Number of Nuclei")
			libcall("kernel32", "Sleep", "vi", 2000)
			if(defined("Nuclei_NucleiDetectionAlgorithm_B"))
				set(text="NucleiDetectionAlgorithm B ; Number of Nuclei: ")
				imageview(Nuclei_NucleiDetectionAlgorithm_B.border,"B", image=reference,gamma=2.0, title=text & Nuclei_NucleiDetectionAlgorithm_B.count)
			else()
				if(defined("Nuclei_NucleiDetectionAlgorithm_A"))
					set(text="NucleiDetectionAlgorithm A ; Number of Nuclei: ")
					imageview(Nuclei_NucleiDetectionAlgorithm_A.border,"A", image=reference,gamma=2.0, title=text & Nuclei_NucleiDetectionAlgorithm_A.count)
				end()
			end()
			delete(i100,text,CalledAlgorithmsText,result,yline1,table2,table3,table4)
		end()
		
		Warning("Evaluation is stopped before exiting  Nuclei_detection_AnyX(). Stop is applied always if parameter SCAN or multi algorithm  mode is used.  For returning to the standard evaluation mode please enter only one algorithm (e.g. B) and/or exit the parameter scanner by selecting Parameter SCAN=none.")
		delete(errorcode,errors,errors_Xml,i,i2,foreach_index,warningcode)
		stop()
	end()
}

proc DetermineBinningFactorMagnification(

	double ImageResolutionX in "Image resolution along X-axis. By default image resolution data are taken by the first image in SourceData tabel. Please note that if SourceData.ImageResolutionX does not exist use first the procedure  ImageResolution2SourceData, which adds to SourceData table the image resolution data.  If image resolution varies from image to image then the corresponding resolution muct be explicitly defined, e.g ImageResolutionX=SourceData.ImageResolutionX[CurrentField].",

	double ImageResolutionY in "Image resolution along Y-axis. By default image resolution data are taken by the first image in SourceData tabel. Please note that if SourceData.ImageResolutionY does not exist use first the procedure  ImageResolution2SourceData, which adds to SourceData table the image resolution data.  If image resolution varies from image to image then the corresponding resolution muct be explicitly defined, e.g ImageResolutionY=SourceData.ImageResolutionY[CurrentField].",

	double BinningFactor_double out "Double precision scaling factor. Used for re-scaling inputs MinimumNuclearArea, NuclearSplittingAdjustment and MinimumNucleiDistance",
	int BinningFactor out "Temporal binning factor used in case of large-scale images. "
) [hidden]
{
	set(epsilon=0.0000001)
	if(ImageResolutionX<-epsilon)
		error("Input ImageResolutionX has a negative value. Negative values are not supported. Please correct the input. ")
	end()
	if(ImageResolutionY<-epsilon)
		error("Input ImageResolutionY has a negative value. Negative values are not supported. Please correct the input. ")
	end()
	if(abs(ImageResolutionX)<epsilon or abs(ImageResolutionY)<epsilon)
		if(abs(ImageResolutionX)<epsilon and abs(ImageResolutionY)<epsilon)
			set(Magnification=20, ImageBinningFactor=2.0, BinningFactor=1, BinningFactor_double=1.0)
			return()
		else()
			if(abs(ImageResolutionX)<epsilon)
				set(ImageResolutionX=6.459e-007)
			else()
				set(ImageResolutionY=6.459e-007)
			end()
		end()
	end()

	set(BinningFactor_double=sqrt((6.459e-007*6.459e-007) / (1.0*ImageResolutionY*ImageResolutionX)) )
	set(BinningFactor=round(BinningFactor_double-0.0001)) //Temporal binning factor
}

Proc ControlNucleiDetectionAlgorithms(
	string NucleiDetectionAlgorithm inout "",
	vector v_ExistingAlgorithms in "Vector of supported algorithms",
	vector v_SetAlgorithms in "Vector of algorithms in the Set routine.",
	bool SingleAlgorithm out "Yes- if the input Algorithm specifies only one routine, NO otherwise.",
	string AlgorithmError out "Empty string if the input Algorithm specifies at least one supported routine. Otherwise returns the Error message.",
	string AlgorithmWarning out "Vector of supported algorithms specified by the input Algorithm",
	vector v_algorithms out "Vector of supported algorithms specified by the input Algorithm"
) [hidden]
{
	push(v_ExistingAlgorithms,"a10x","b10x","c10x","i10x")
	set(ErrorText2="")
	foreach(v_ExistingAlgorithms)
		set(ErrorText2=ErrorText2 & i & ", ")
	end()
	set(ErrorText2=substr(ErrorText2,1,ErrorText2.length-1))
	set(SingleAlgorithm=yes, AlgorithmError="", AlgorithmWarning="")
	If(NucleiDetectionAlgorithm=="set")
		Set(v_algorithms=v_SetAlgorithms)
		set(SingleAlgorithm=no)
		Return()
	End()
	Set(i=0,i2=v_ExistingAlgorithms.length, controlflag1=1)
	While(i<i2 and controlflag1)
		If(v_ExistingAlgorithms[i]==NucleiDetectionAlgorithm)
			Set(ControlFlag1=0)
		End()
		Set(i=i+1)
	End()
	If(ControlFlag1==0)
		push(v_algorithms,NucleiDetectionAlgorithm)
		Return()
	end()
	
	set(Algorithm2=NucleiDetectionAlgorithm)
	Set(i=0,i2=v_ExistingAlgorithms.length-1, controlflag1=1)
	Foreach(0..i2)
		If(at(v_ExistingAlgorithms[i],Algorithm2,1)>0)
			push(v_algorithms, v_ExistingAlgorithms[i])
			RegexReplace(Algorithm2,v_ExistingAlgorithms[i],"")
			set(Algorithm2=text)
		End()
	end()

	if(!defined("v_algorithms"))
		Create("vector","string",0)
		Set(v_algorithms=vector)
		set(textExistingAlgorithms="")
		foreach(v_setAlgorithms,"i3")
			set(textExistingAlgorithms=textExistingAlgorithms & i3 & ", ")
		end()
		set(AlgorithmError="Unsupported algorithm, " & NucleiDetectionAlgorithm & ". Supported algorithms with the current magnification settings are: " & textExistingAlgorithms & "  Please correct the input \"Nuclei Detection Algorithm\". ")
		Error(AlgorithmError)
		Return()
	end()
	if(Algorithm2.length!=0)
		Set(AlgorithmError="There could be a typing error in the input  \"Nuclei Detection Algorithm\". It references, in addition, to supported routines also  to unsupported one/ones:  " & Algorithm2 & ". ")
		Error(AlgorithmError)
	end()
	if(v_algorithms.length<2)
		return()
	end()
	set(SingleAlgorithm=no)
	set(NucleiDetectionAlgorithm="SET")
}


Proc ControlNucleiDetectionAnyX(
	string NucleiDetectionAlgorithm inout "",
	string NucleiDetectionType in,
	string ScanParameter in,
//	vector v_ExistingAlgorithms out "Vector of supported algorithms",
//	vector v_SetAlgorithms out "Vector of algorithms in the Set routine.",
	bool SingleAlgorithm out "Yes- if the input Algorithm specifies only one routine, NO otherwise.",
	string AlgorithmError out "Empty string if the input Algorithm specifies at least one supported routine. Otherwise returns the Error message.",
	string AlgorithmWarning out "Vector of supported algorithms specified by the input Algorithm",
	vector v_algorithms out "Vector of supported algorithms specified by the input Algorithm"
) [hidden]
{
	push(v_ExistingAlgorithms_standard,"A","B","C","D","E","F","G","H","SET")
	push(v_ExistingAlgorithms_10x,"A","B","C","I","SET")	
	push(v_SetOfAlgorithms_standard,"A","B","C","D","E","F","G","H")
	push(v_SetOfAlgorithms_10x,"A","B","C","I")	
	set(NucleiDetectionAlgorithm=rep(NucleiDetectionAlgorithm,",",""))
	set(NucleiDetectionAlgorithm=rep(NucleiDetectionAlgorithm," ",""))
	set(NucleiDetectionAlgorithm=rep(NucleiDetectionAlgorithm,";",""))
	if(NucleiDetectionType=="10x")
		ControlNucleiDetectionAlgorithms(NucleiDetectionAlgorithm, v_ExistingAlgorithms_10x, v_SetOfAlgorithms_10x)
	else()
		ControlNucleiDetectionAlgorithms(NucleiDetectionAlgorithm, v_ExistingAlgorithms_standard,v_SetOfAlgorithms_standard)
	end()
	
	if(NucleiDetectionAlgorithm=="set" and ScanParameter!="none")
		set(ScanParameter="none")
		if(NucleiDetectionType=="10x")
			Error("The paramater scan is not supported if more than one routine (e.g. AB or SET) is given. For parameter scan, define only one  detection routine, e.g. B. Supported Algorithms with 10x magnification: A,B,C and I.")
		else()
			Error("The paramater scan is not supported if more than one routine (e.g. AB or SET) is given. For parameter scan, define only one  detection routine, e.g. B. Supported Algorithms: A,B,C,D,E,F,G and H.")
		end()
	end()
}




proc nuclei_detection_inner_inner(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
string NucleiDetectionAlgorithm in,
double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
int MinimumNuclearArea=70 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
double MinimumNucleiDistance=7.0 in "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
double NuclearSplittingAdjustment=7.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",

//OUTPUT
objectlist nuclei out "Output object list with detected nuclei.",
objectlist InitialMask out "object list after the initial threshoding.",
vector ErrorInfo out "A container with a possible Error Message. If no errors occur, the ErrorInfo.ErrorCode will be zero."
) [hidden]
{

	if(NucleiDetectionAlgorithm=="set")
		provideinput("UseDefaultValues",no)
		eval("nuclei_detection_set(reference)")
		stop()
	else()
		eval("nuclei_detection_" & NucleiDetectionAlgorithm & "_inner(reference)")//, abortonerrors=yes)
	end()

	if(errorcode!=0)
		if(defined("NucleiDetectionAlgorithm"))
			if(NucleiDetectionAlgorithm=="set")
				stop()
			else()
				error()
			end()
		else()
			error("Nuclei detection algorithm is not defined. Please provide the algorithm name, e.g. \"A\" ")
		end()
	end()
}

proc Nuclei_detection_downscale_step1(
	image Reference in "Image with intensity",
	int BinningFactor in "Temporal binning factor",
	string NucleiDetectionAlgorithm in,
	double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
	int MinimumNuclearArea=70 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
	double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
	double MinimumNucleiDistance=7.0 in "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
	double NuclearSplittingAdjustment=7.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
	double MinimumNuclearContrast in "Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.",
	image Ref_binned_enlarged out,
	objectlist Nuclei_binned_enlarged out,
	objectlist Nuclei out,
	objectlist InitialMask out "Output object list with the initial mask (mask after the initial thresholding). Used mainly for illustrative purposes.", 
	objectlist OL_LowContrast out "Output object list with the discarded  low contrast objects.  Used mainly for illustrative purposes."
) [hidden]
{
	set(epsilon=0.0000001)
	if (BinningFactor<16 and reference.bpp==8)
		binning(BinningFactor,BinningFactor,method="sum", image=reference) 
	else()
		binning(BinningFactor,BinningFactor,method="mean", image=reference) 
	end()
	Enlarge(1) //Enlarges the image temporally by one pixel
	Set(ref_binned_enlarged=image) 
	if(	NuclearSplittingAdjustment<1.0-epsilon)
		set(NuclearSplittingAdjustment=1.0)
	end()
	if(NuclearSplittingAdjustment+0.00001>=ref_binned_enlarged.width/2.0 or NuclearSplittingAdjustment+0.00001>=ref_binned_enlarged.height/2.0)
			if(ref_binned_enlarged.width>ref_binned_enlarged.height)
				set(NuclearSplittingAdjustment=ref_binned_enlarged.height/2.0-0.0001)
			else()
				set(NuclearSplittingAdjustment=ref_binned_enlarged.width/2.0-0.0001)
			end()
	end()
	eval("nuclei_detection_inner(ref_binned_enlarged,showillustrations=no)")
	if(errorcode!=0)
		error()
	end()
	set(Nuclei_binned_enlarged=nuclei)

	crop(1,1,ref_binned_enlarged.width-1,ref_binned_enlarged.height-1,image=nuclei_binned_enlarged.body.image)
	stencil2objects(image)
	set(nuclei=objects)
}


proc CleanBorders_tech(
double ErosionDistance in,
objectlist objects inout) [hidden]
{
	calcerosion(ErosionDistance)
	CalcZone(1)
	ZoneIMage()
	SelectBrightSpots(body,body,image=zoneimage)
	FillStencilFromCenter_tech(objects.brightspots,objects.eroded)
	Setattr(eroded2,stencil.vector)
	CalcErosion(-ErosionDistance-1.0,eroded2,restrictivestencil=objects.body)
	stencil2objects(objects.eroded2_eroded)
}



proc ReSizeDownscaledObjects(
int BinningFactor in,
image reference in,
objectlist objects inout
) [hidden]
{
	set(IM_temp=objects.body.image)
	crop( 1, 1, IM_temp.width-1, IM_temp.height-1, image=IM_temp)
	ReSize(BinningFactor,BinningFactor,image=image) 
	ReDimension(reference.width, reference.height, 0, 0, 0,  image=image) 
	clearborders(image,edge=1)
	set(stencil.type="stencil")
	stencil2objects(stencil)
}

proc ReSizeIllustrations(
	int BinningFactor in,
	image reference in,
	objectlist InitialMask inout "Output object list with the initial mask (mask after the initial thresholding). Used mainly for illustrative purposes.", 
	objectlist OL_LowContrast inout "Output object list with the discarded  low contrast objects.  Used mainly for illustrative purposes."
) [hidden]
{
	ReSizeDownscaledObjects(BinningFactor,Reference,InitialMask)
	set(InitialMask=objects)
	ReSizeDownscaledObjects(BinningFactor,Reference,OL_LowContrast)
	set(OL_LowContrast=objects)
}


proc nuclei_detection_upscale_step1(
objectlist nuclei inout,
int BinningFactor in,
image reference in,
double ExpandDistance in
) [hidden]
{
		ReSize(BinningFactor,BinningFactor,image=nuclei.body.image) 
		ReDimension(reference.width, reference.height, 0, 0, 0,  image=image) 
		set(image.type="stencil")
		clearborders(image,edge=1)
		Stencil2Objects(stencil) 

		Calczone(ExpandDistance)
		Zonemask(-ExpandDistance,oo)
		Renameattr(er1=zonemask)
		//Set(BinningFactor_x=BinningFactor/2.0)
		Set(BinningFactor_x=BinningFactor)
		Zonemask(BinningFactor_x,oo)
		CalcErosion(BinningFactor_x)
		RenameAttr(Zonemask=Eroded)
		Set(Nuclei=objects)
}

proc nuclei_detection_upscale_step2(
image reference in,
double SecondaryIndividualThresholdAdjustment in,
objectlist nuclei_binned_enlarged in,
objectlist nuclei inout
) [hidden]
{
	set(objects=nuclei)
	CalcStencilFromCenters(zonemask,restrictivestencil=objects.er1,image=reference)
	Blank(Reference.width, Reference.height, 1)
	ConvElems(Image, "float", neginfinity=0.0, posinfinity=0.0, uncertainty=0.0)
	CarryObjects(image=result, stencil=objects.ZoneMask_stencilfromCenters, data=nuclei_binned_enlarged.contrast)
	Set(IM_contrast=image)
	//CarryObjects(image=result, stencil=objects.ZoneMask_stencilfromCenters, data=nuclei_binned_enlarged.area)
	//Set(IM_area=image)
	//CalcStat("Quantile",0.5,stencil=ZoneMask_stencilfromCenters,image=reference)
	//CalcThreshMask(ZoneMask_stencilfromCenters,Quantile, image=reference)
	Set(OL_temp=objects)
	Stencil2Objects(objects.zonemask)
	//stencil2objects(objects.zonemask_stencilfromCenters)
	CalcZone(60,stencil=OL_temp.zonemask_stencilfromCenters)
	//CalcZone(60,stencil=OL_temp.threshmask)
	CalcZoneIntensity(image=reference,autorecalc=no)

	if(SecondaryIndividualThresholdAdjustment<0.001)
		set(SecondaryIndividualThresholdAdjustment=0.001)
	end()
	if(objects.count>0)
		calcarea()
		set(minarea=round(0.7*objects.area.min))
	end()

	set(OL=objects)
	//imageview(OL.border, "Nuclei32",image=reference, gamma=2.0)

	IndividualThreshold(tune=1.0/SecondaryIndividualThresholdAdjustment, image=reference)
	fillobjects()
	CleanBorders_tech(1)
	CalcStat("Max",attrname="Contrast",stencil=body,image=IM_contrast)
	//CalcStat("Max",attrname="AreaInGeneralUnits",stencil=body,image=IM_area)

	CalcIntensity(Image=reference)
	CalcArea()
	Set(Nuclei=objects) 
	
}

proc nuclei_detection_upscale_step2b(
image reference in,
double SecondaryIndividualThresholdAdjustment in,
objectlist nuclei_binned_enlarged in,
objectlist nuclei inout
) [hidden]
{
	set(objects=nuclei)
	CalcStencilFromCenters(zonemask,restrictivestencil=objects.er1,image=reference)
	Blank(Reference.width, Reference.height, 1)
	ConvElems(Image, "float", neginfinity=0.0, posinfinity=0.0, uncertainty=0.0)
	CarryObjects(image=result, stencil=objects.ZoneMask_stencilfromCenters, data=nuclei_binned_enlarged.contrast)
	Set(IM_contrast=image)
	Carrypixels(image=objects.ZoneMask_stencilfromCenters.image,mask=objects.body,data=0)
	Setattr(ZoneMask_stencilfromCenters_eroded,image.vector)
	CalcStat("Quantile",0.5,stencil=ZoneMask_stencilfromCenters_eroded,image=reference)
	CalcThreshMask(ZoneMask_stencilfromCenters,Quantile, image=reference)
	Set(OL_temp=objects)
	Stencil2Objects(objects.zonemask)
	//stencil2objects(objects.zonemask_stencilfromCenters)
	//CalcZone(60,stencil=OL_temp.zonemask_stencilfromCenters)
	CalcZone(60,stencil=OL_temp.threshmask)
	CalcZoneIntensity(image=reference,autorecalc=no)

	if(SecondaryIndividualThresholdAdjustment<0.001)
		set(SecondaryIndividualThresholdAdjustment=0.001)
	end()
	if(objects.count>0)
		calcarea()
		set(minarea=round(0.7*objects.area.min))
	end()

	set(OL=objects)
	imageview(OL.border, "Nuclei32",image=reference, gamma=2.0)

	IndividualThreshold(tune=1.0/SecondaryIndividualThresholdAdjustment, image=reference, smooth=5)
	fillobjects()
	CleanBorders_tech(1)
	CalcStat("Max",stencil=body,image=IM_contrast)
	RenameAttr(Contrast=Max)
	CalcIntensity(Image=reference)
	Set(Nuclei=objects) 
	
}

proc nuclei_detection_upscale_step2c(
image reference in,
double SecondaryIndividualThresholdAdjustment in,
objectlist nuclei_binned_enlarged in,
objectlist nuclei inout
) [hidden]
{
	set(objects=nuclei)
	CalcStencilFromCenters(zonemask,restrictivestencil=objects.er1,image=reference)
	Blank(Reference.width, Reference.height, 1)
	ConvElems(Image, "float", neginfinity=0.0, posinfinity=0.0, uncertainty=0.0)
	CarryObjects(image=result, stencil=objects.ZoneMask_stencilfromCenters, data=nuclei_binned_enlarged.contrast)
	Set(IM_contrast=image)
	Carrypixels(image=objects.ZoneMask_stencilfromCenters.image,mask=objects.body,data=0)
	Setattr(ZoneMask_stencilfromCenters_eroded,image.vector)
	CalcStat("Quantile",0.5,stencil=ZoneMask_stencilfromCenters_eroded,image=reference)
	//CalcThreshMask(ZoneMask_stencilfromCenters,Quantile, image=reference)
	Bright_mask(reference, 10)
	and(image=objects.zonemask.image,mask=M_bright.image)
	setattr(center_bright,image.vector)
	calcintensity(center_bright,image=reference)
	Set(OL_temp=objects)
	Stencil2Objects(objects.ZoneMask)
	//stencil2objects(objects.zonemask_stencilfromCenters)
	CalcZone(60,stencil=OL_temp.zonemask_stencilfromCenters)
	//CalcZone(60,stencil=OL_temp.threshmask)
	CalcZoneIntensity(image=reference,autorecalc=no)

	if(SecondaryIndividualThresholdAdjustment<0.001)
		set(SecondaryIndividualThresholdAdjustment=0.001)
	end()
	if(objects.count>0)
		calcarea()
		set(minarea=round(0.7*objects.area.min))
	end()

	set(OL=objects)
	imageview(OL.border, "Nuclei32",image=reference, gamma=2.0)

	IndividualThreshold(tune=1.0/(1.3*SecondaryIndividualThresholdAdjustment), minarray=OL_temp.quantile, maxarray=OL_temp.center_bright_intensity, image=reference, smooth=5)
	fillobjects()
	CleanBorders_tech(1)
	CalcStat("Max",stencil=body,image=IM_contrast)
	RenameAttr(Contrast=Max)
	CalcIntensity(Image=reference)
	CalcArea()
	Set(Nuclei=objects) 
}



proc nuclei_detection_inputs_AnyX(
	string NucleiDetectionAlgorithm out "Specifies the nuclei detection algorithm from the Nuclei Detection Library. Supported values are A-H.",
	double ThresholdAdjustment out "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
	int MinimumNuclearArea out "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
	double IndividualThresholdAdjustment out "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
	double MinimumNucleiDistance out "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
	double NuclearSplittingAdjustment out "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
	double MinimumNuclearContrast out "Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.",

	bool AutomaticAlgorithmAdaptation out "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.",

	string ScanParameter="None" out "None- detection is carried out wih a single parameter set (standard evalution). Otherwise the selected parameter is scanned over the typical dynamic range and all detection results are sequantly depicted. It enables to find the proper input parameters."
) [hidden] nuclei detection "Creates player inputs for the procedure Nuclei_Detection_AnyX()."
{
	
	input(NucleiDetectionAlgorithm, "B", "Nuclei Detection Algorithm: Nuclei Detection AnyX", "s", "Specifies the nuclei detection algorithm from the ONDL. Supported algorithms for standard (20x) and large-scale (40x, 60x etc) images are A-H. For small-scale images (10x, 5x etc) the routines are \"A\",\"B\",\"C\" and \"I\". ")
	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection AnyX","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection AnyX", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei. The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection AnyX", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection AnyX", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection AnyX","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection AnyX", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")

	//input(AutomaticAlgorithmAdaptation, yes, "Automatic Algorithm Adaptation: Nuclei Detection AnyX", "y", "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.")
	set(AutomaticAlgorithmAdaptation=yes)
	input(ScanParameter, "None", "Parameter SCAN: Nuclei Detection AnyX", "s", "Possible values: \"None\", \"Threshold Adjustment\",\"Minimum Nuclei Distance\", \"Nuclear Splitting Adjustment\",\"Individual Threshold Adjustment\",\"Minimum Nuclear Area\", \"Minimum Nuclear Contrast\",\"Algorithm\"")
}

proc nuclei_detection_inputs_AnyX_2(
string NucleiDetectionAlgorithm out "Specifies the nuclei detection algorithm from the Nuclei Detection Library. Supported values are A-H.",

double ThresholdAdjustment out "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
int MinimumNuclearArea out "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
double IndividualThresholdAdjustment out "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
double MinimumNucleiDistance out "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
double NuclearSplittingAdjustment out "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
double MinimumNuclearContrast out "Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.",

	bool AutomaticAlgorithmAdaptation out "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.",

	string ScanParameter="None" out "None- detection is carried out wih a single parameter set (standard evalution). Otherwise the selected parameter is scanned over the typical dynamic range and all detection results are sequantly depicted. It enables to find the proper input parameters."
) [hidden] nuclei detection "Creates player inputs for the procedure Nuclei_Detection_AnyX_2()."
{
	input(NucleiDetectionAlgorithm, "B", "Nuclei Detection Algorithm: Nuclei Detection AnyX 2", "s", "Specifies the nuclei detection algorithm from the ONDL. Supported algorithms for standard (20x) and large-scale (40x, 60x etc) images are A-H. For small-scale images (10x, 5x etc) the routines are \"A\",\"B\",\"C\" and \"I\". ")
	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection AnyX 2","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection AnyX 2", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei. The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection AnyX 2", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection AnyX 2", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection AnyX 2","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection AnyX 2", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")
//	input(AutomaticAlgorithmAdaptation, yes, "Automatic Algorithm Adaptation: Nuclei Detection AnyX 2", "y", "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.")
	set(AutomaticAlgorithmAdaptation=yes)
	input(ScanParameter, "None", "Parameter SCAN: Nuclei Detection AnyX 2", "s", "Possible values: \"None\", \"Threshold Adjustment\",\"Minimum Nuclei Distance\", \"Nuclear Splitting Adjustment\",\"Individual Threshold Adjustment\",\"Minimum Nuclear Area\", \"Minimum Nuclear Contrast\",\"Algorithm\"")
}

proc nuclei_detection_inputs_AnyX_3(
string NucleiDetectionAlgorithm out "Specifies the nuclei detection algorithm from the Nuclei Detection Library. Supported values are A-H.",

double ThresholdAdjustment out "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
int MinimumNuclearArea out "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
double IndividualThresholdAdjustment out "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
double MinimumNucleiDistance out "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
double NuclearSplittingAdjustment out "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
double MinimumNuclearContrast out "Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.",

	bool AutomaticAlgorithmAdaptation out "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.",

	string ScanParameter="None" out "None- detection is carried out wih a single parameter set (standard evalution). Otherwise the selected parameter is scanned over the typical dynamic range and all detection results are sequantly depicted. It enables to find the proper input parameters."
) [hidden] nuclei detection "Creates player inputs for the procedure Nuclei_Detection_AnyX_3()."
{
	input(NucleiDetectionAlgorithm, "B", "Nuclei Detection Algorithm: Nuclei Detection AnyX 3", "s", "Specifies the nuclei detection algorithm from the ONDL. Supported algorithms for standard (20x) and large-scale (40x, 60x etc) images are A-H. For small-scale images (10x, 5x etc) the routines are \"A\",\"B\",\"C\" and \"I\". ")
	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection AnyX 3","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection AnyX 3", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei. The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection AnyX 3", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection AnyX 3", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection AnyX 3","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection AnyX 3", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")
	//input(AutomaticAlgorithmAdaptation, yes, "Automatic Algorithm Adaptation: Nuclei Detection AnyX 3", "y", "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.")
	set(AutomaticAlgorithmAdaptation=yes)
	input(ScanParameter, "None", "Parameter SCAN: Nuclei Detection AnyX 3", "s", "Possible values: \"None\", \"Threshold Adjustment\",\"Minimum Nuclei Distance\", \"Nuclear Splitting Adjustment\",\"Individual Threshold Adjustment\",\"Minimum Nuclear Area\", \"Minimum Nuclear Contrast\",\"Algorithm\"")
}


proc nuclei_detection_inputs_AnyX_4(
string NucleiDetectionAlgorithm out "Specifies the nuclei detection algorithm from the Nuclei Detection Library. Supported values are A-H.",

double ThresholdAdjustment out "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
int MinimumNuclearArea out "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
double IndividualThresholdAdjustment out "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
double MinimumNucleiDistance out "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
double NuclearSplittingAdjustment out "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
double MinimumNuclearContrast out "Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.",

	bool AutomaticAlgorithmAdaptation out "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.",

	string ScanParameter="None" out "None- detection is carried out wih a single parameter set (standard evalution). Otherwise the selected parameter is scanned over the typical dynamic range and all detection results are sequantly depicted. It enables to find the proper input parameters."
) [hidden] nuclei detection "Creates player inputs for the procedure Nuclei_Detection_AnyX_4()"
{
	input(NucleiDetectionAlgorithm, "B", "Nuclei Detection Algorithm: Nuclei Detection AnyX 4", "s", "Specifies the nuclei detection algorithm from the ONDL. Supported algorithms for standard (20x) and large-scale (40x, 60x etc) images are A-H. For small-scale images (10x, 5x etc) the routines are \"A\",\"B\",\"C\" and \"I\". ")
	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask. Allowed range: 0..3.0.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei. The parameter is the input to the module maximums. Allowed range: 0..2000.")	
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection", "d", "Nuclei: Controls splitting of stuck nuclei. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei. Allowed range: 1..200.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection", "d", "Nuclei: Controls the size (border position) of nuclei. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. Allowed range: 0..1.")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei. Allowed range: 0..2000.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Adjust by illustration LowContrastObjects and Nuclei. Allowed range: 0..1.0.")
	//input(AutomaticAlgorithmAdaptation, yes, "Automatic Algorithm Adaptation: Nuclei Detection AnyX 4", "y", "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.")
	set(AutomaticAlgorithmAdaptation=yes)
	input(ScanParameter, "None", "Parameter SCAN: Nuclei Detection AnyX 4", "s", "Possible values: \"None\", \"Threshold Adjustment\",\"Minimum Nuclei Distance\", \"Nuclear Splitting Adjustment\",\"Individual Threshold Adjustment\",\"Minimum Nuclear Area\", \"Minimum Nuclear Contrast\",\"Algorithm\"")
}


proc nuclei_detection_inputs_Select(
	string NucleiDetectionAlgorithm out "Specifies the nuclei detection algorithm from the Nuclei Detection Library.  A-H.",
	double ThresholdAdjustment out "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
	int MinimumNuclearArea out "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
	double IndividualThresholdAdjustment out "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
	double MinimumNucleiDistance out "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
	double NuclearSplittingAdjustment out "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
	double MinimumNuclearContrast out "Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.",

	bool AutomaticAlgorithmAdaptation out "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.",

	string ScanParameter="None" out "None- detection is carried out wih a single parameter set (standard evalution). Otherwise the selected parameter is scanned over the typical dynamic range and all detection results are sequantly depicted. It enables to find the proper input parameters."
) [hidden] nuclei detection "Creates player inputs for the procedure Nuclei_Detection_Select()"
{
	
	input(NucleiDetectionAlgorithm, "B", "Nuclei Detection Algorithm: Nuclei Detection", "s", "Specifies the nuclei detection algorithm from the ONDL. Supported algorithms for standard (20x) and large-scale (40x, 60x etc) images are A-H. For small-scale images (10x, 5x etc) the routines are \"A\",\"B\",\"C\" and \"I\". Allowed Values: \"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\".")
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei. Allowed range: 0..2000, step 1.")
	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask. Allowed range: 0..3.0, step=0.1.")
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei. The parameter is the input to the module maximums. Allowed range: 0..2000, step 1.")
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection", "d", "Nuclei: Controls splitting of stuck nuclei. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting proc ess. Adjust by illustration Nuclei. Allowed range: 1..200, step 0.5.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection", "d", "Nuclei: Controls the size (border position) of nuclei. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. Allowed range: 0..1, step 0.1.")
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Adjust by illustration LowContrastObjects and Nuclei. Allowed range: 0..1.0, step 0.1.")

	//input(AutomaticAlgorithmAdaptation, yes, "Automatic Algorithm Adaptation: Nuclei Detection", "y", "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.")
	set(AutomaticAlgorithmAdaptation=yes)
	input(ScanParameter, "None", "Parameter SCAN: Nuclei Detection", "s", "Controls the parameter scan. Use  the default value \"None\" for the standard evaluation (parameter scan is not applied). If you would like to adjust a parameter, please select it from \"Parameter SCAN\" menu and click to Run. The procedure scans the parameter over the whole range and depicts the corresponding detection results. Inspect the results for the different parameter values and try to select one, which provides the best nuclei recognition. Possible values: \"None\", \"Algorithm\", \"Minimum Nuclear Area\", \"Threshold Adjustment\", \"Minimum Nuclei Distance\", \"Nuclear Splitting Adjustment\", \"Individual Threshold Adjustment\", \"Minimum Nuclear Contrast\"")
	
}

proc nuclei_detection_inputs_Select_2(
	string NucleiDetectionAlgorithm out "Specifies the nuclei detection algorithm from the Nuclei Detection Library. Supported values are A-H.",

	double ThresholdAdjustment out "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
	int MinimumNuclearArea out "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
	double IndividualThresholdAdjustment out "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
	double MinimumNucleiDistance out "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
	double NuclearSplittingAdjustment out "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
	double MinimumNuclearContrast out "Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.",

	bool AutomaticAlgorithmAdaptation out "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.",

	string ScanParameter="None" out "None- detection is carried out wih a single parameter set (standard evalution). Otherwise the selected parameter is scanned over the typical dynamic range and all detection results are sequantly depicted. It enables to find the proper input parameters."
) [hidden] nuclei detection "Creates player inputs for the procedure Nuclei_Detection_Select_2()"
{
	input(NucleiDetectionAlgorithm, "B", "Nuclei Detection Algorithm: Nuclei Detection 2", "s", "Specifies the nuclei detection algorithm from the ONDL. Supported algorithms for standard (20x) and large-scale (40x, 60x etc) images are A-H. For small-scale images (10x, 5x etc) the routines are \"A\",\"B\",\"C\" and \"I\". ")
	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection 2","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection 2", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei. The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection 2", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection 2", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection 2","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection 2", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")
//	input(AutomaticAlgorithmAdaptation, yes, "Automatic Algorithm Adaptation: Nuclei Detection 2", "y", "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.")
	set(AutomaticAlgorithmAdaptation=yes)
	input(ScanParameter, "None", "Parameter SCAN: Nuclei Detection 2", "s", "Controls the parameter scan. Use  the default value \"None\" for the standard evaluation (parameter scan is not applied). If you would like to adjust a parameter, please select it from \"Parameter SCAN\" menu and click to Run. The procedure scans the parameter over the whole range and depicts the corresponding detection results. Inspect the results for the different parameter values and try to select one, which provides the best nuclei recognition. Possible values: \"None\", \"Threshold Adjustment\",\"Minimum Nuclei Distance\", \"Nuclear Splitting Adjustment\",\"Individual Threshold Adjustment\",\"Minimum Nuclear Area\", \"Minimum Nuclear Contrast\",\"Algorithm\"")
}

proc nuclei_detection_inputs_Select_3(
	string NucleiDetectionAlgorithm out "Specifies the nuclei detection algorithm from the Nuclei Detection Library. Supported values are A-H.",

	double ThresholdAdjustment out "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
	int MinimumNuclearArea out "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
	double IndividualThresholdAdjustment out "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
	double MinimumNucleiDistance out "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
	double NuclearSplittingAdjustment out "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
	double MinimumNuclearContrast out "Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.",

	bool AutomaticAlgorithmAdaptation out "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.",

	string ScanParameter="None" out "None- detection is carried out wih a single parameter set (standard evalution). Otherwise the selected parameter is scanned over the typical dynamic range and all detection results are sequantly depicted. It enables to find the proper input parameters."
) [hidden] nuclei detection "Creates player inputs for the procedure Nuclei_Detection_Select_3()."
{
	input(NucleiDetectionAlgorithm, "B", "Nuclei Detection Algorithm: Nuclei Detection 3", "s", "Specifies the nuclei detection algorithm from the ONDL. Supported algorithms for standard (20x) and large-scale (40x, 60x etc) images are A-H. For small-scale images (10x, 5x etc) the routines are \"A\",\"B\",\"C\" and \"I\". ")
	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection 3","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection 3", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei. The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection 3", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection 3", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection 3","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection 3", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")
	//input(AutomaticAlgorithmAdaptation, yes, "Automatic Algorithm Adaptation: Nuclei Detection 3", "y", "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.")
	set(AutomaticAlgorithmAdaptation=yes)
	input(ScanParameter, "None", "Parameter SCAN: Nuclei Detection 3", "s", "Controls the parameter scan. Use  the default value \"None\" for the standard evaluation (parameter scan is not applied). If you would like to adjust a parameter, please select it from \"Parameter SCAN\" menu and click to Run. The procedure scans the parameter over the whole range and depicts the corresponding detection results. Inspect the results for the different parameter values and try to select one, which provides the best nuclei recognition. Possible values: \"None\", \"Threshold Adjustment\",\"Minimum Nuclei Distance\", \"Nuclear Splitting Adjustment\",\"Individual Threshold Adjustment\",\"Minimum Nuclear Area\", \"Minimum Nuclear Contrast\",\"Algorithm\"")
}


proc nuclei_detection_inputs_Select_4(
	string NucleiDetectionAlgorithm out "Specifies the nuclei detection algorithm from the Nuclei Detection Library. Supported values are A-H.",

	double ThresholdAdjustment out "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
	int MinimumNuclearArea out "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
	double IndividualThresholdAdjustment out "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
	double MinimumNucleiDistance out "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
	double NuclearSplittingAdjustment out "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
	double MinimumNuclearContrast out "Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.",

	bool AutomaticAlgorithmAdaptation out "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.",

	string ScanParameter="None" out "None- detection is carried out wih a single parameter set (standard evalution). Otherwise the selected parameter is scanned over the typical dynamic range and all detection results are sequantly depicted. It enables to find the proper input parameters."
) [hidden] nuclei detection "Creates player inputs for the procedure Nuclei_Detection_Select_4()."
{
	input(NucleiDetectionAlgorithm, "B", "Nuclei Detection Algorithm: Nuclei Detection 4", "s", "Specifies the nuclei detection algorithm from the ONDL. Supported algorithms for standard (20x) and large-scale (40x, 60x etc) images are A-H. For small-scale images (10x, 5x etc) the routines are \"A\",\"B\",\"C\" and \"I\". ")
	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection 4","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection 4", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei. The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection 4", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection 4", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection 4","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection 4", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")
	//input(AutomaticAlgorithmAdaptation, yes, "Automatic Algorithm Adaptation: Nuclei Detection 4", "y", "YES- Adapts the algorithm automatically to the given magnification and camera binning factor. NO- calls the standard routine for 20x images. In the both cases the input parameters are adapted according to magnification and binning factor.")
	set(AutomaticAlgorithmAdaptation=yes)
	input(ScanParameter, "None", "Parameter SCAN: Nuclei Detection 4", "s", "Controls the parameter scan. Use  the default value \"None\" for the standard evaluation (parameter scan is not applied). If you would like to adjust a parameter, please select it from \"Parameter SCAN\" menu and click to Run. The procedure scans the parameter over the whole range and depicts the corresponding detection results. Inspect the results for the different parameter values and try to select one, which provides the best nuclei recognition. Possible values: \"None\", \"Threshold Adjustment\",\"Minimum Nuclei Distance\", \"Nuclear Splitting Adjustment\",\"Individual Threshold Adjustment\",\"Minimum Nuclear Area\", \"Minimum Nuclear Contrast\",\"Algorithm\"")
}




proc nuclei_detection_inner(
//INPUT
	image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
	string NucleiDetectionAlgorithm in,
	double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
	int MinimumNuclearArea=70 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
	double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
	double MinimumNucleiDistance=7.0 in "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
	double NuclearSplittingAdjustment=7.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
	double MinimumNuclearContrast in "Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.",
	
	bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
	//container NucleiDetectionData=none inout "Container with additional/optional input and output data. Output container includes sub-container with data for output Illustrations. In case of scan or multi algorithm mode there are also all result object lists." , 
	//OUTPUT
	objectlist Nuclei out "Output object list with detected nuclei",
	objectlist InitialMask out "Output object list with the initial mask (mask after the initial thresholding). Used mainly for illustrative purposes.", 
	objectlist OL_LowContrast out "Output object list with the discarded  low contrast objects.  Used mainly for illustrative purposes."
) [hidden] object recognition, nuclei detection "Nuclei detection procedure. Detects nuclei on the input image."
{
	nuclei_detection_inner_inner(Reference, NucleiDetectionAlgorithm ) 
	ErrorReceiverForNucleiDetectionLibrary_v1()

	if(ShowIllustrations)
		imageview(item=InitialMask.border.mask, label="InitialMask", title="Mask after the initial thresholding. Adjust par. \"Threshold Adjustment\"", image=reference, gamma=2.6)	
	end() 		
	// Removes breaking lines between the stuck nuclei, Input 
	// parameter is fixed
	controlbreakinglines_v12(nuclei, 0.8) 
	// Adds to object list a contrast attribute
	object_contrast_general(cells_out, reference, InitialMask=InitialMask.body.mask) 
	
	// Creates the illustration "LowContrastObjects"
	
	set(CL_Temp=objects)
	objectfilter(contrast<=MinimumNuclearContrast)
	set(OL_LowContrast=objects)
	if(ShowIllustrations) 
		imageview(item=objects.border, label="LowContrastObjects",title="Discarded low contrast objects. Adjust par. \"Minimum Nuclear Contrast\"", image=reference, gamma=2.6)
	end()
	set(objects=CL_Temp)
	objectfilter(contrast>MinimumNuclearContrast)
	if(ShowIllustrations)
		imageview(item=objects.border, label="Nuclei", title="Number of detected nuclei " & nuclei.count  ,image=reference, gamma=2.6)
	end()
	calcarea()
	calcintensity(image=reference)
	set(nuclei=objects)
	
	set(NucleIIllustrations=cnt(nuclei=nuclei, InitialMask=InitialMask, OL_LowContrast=OL_LowContrast))
	if(defined("NucleiDetectionData"))
		set(NucleiDetectionData.NucleIIllustrations=NucleIIllustrations)
		set(NucleiDetectionData.NucleIIllustrations=NucleIIllustrations)
	else()
		set(NucleiDetectionData=cnt(NucleIIllustrations=NucleIIllustrations))
	end()
	set(NucleiDetectionData.SingleAlgorithm=yes)
}


proc nuclei_detection_large_inner(
//INPUT
	image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
	
	string NucleiDetectionAlgorithm in,
	double BinningFactor in, 
	
	double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
	int MinimumNuclearArea=70 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
	double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
	double MinimumNucleiDistance=7.0 in "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
	double NuclearSplittingAdjustment=7.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
	double MinimumNuclearContrast in "Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.",
	
	bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
	container NucleiDetectionData=none inout "Container with additional/optional input and output data. Output container includes sub-container with data for output Illustrations. In case of scan or multi algorithm mode there are also all result object lists." , 
	//OUTPUT
	objectlist Nuclei out "Output object list with detected nuclei",
	objectlist InitialMask out "Output object list with the initial mask (mask after the initial thresholding). Used mainly for illustrative purposes.", 
	objectlist OL_LowContrast out "Output object list with the discarded  low contrast objects.  Used mainly for illustrative purposes."
	
) [hidden] object recognition, nuclei detection "Nuclei detection procedure. Detects nuclei on the input image."
{

	set(SecondaryIndividualThresholdAdjustment=0.76*IndividualThresholdAdjustment)
	Nuclei_detection_downscale_step1(Reference,BinningFactor, NucleiDetectionAlgorithm)
	nuclei_detection_upscale_step1(nuclei, BinningFactor, reference, 10*BinningFactor)
	set(OL_temp=nuclei)
	nuclei_detection_upscale_step2(reference,SecondaryIndividualThresholdAdjustment,nuclei_binned_enlarged,nuclei)

	ReSizeIllustrations(BinningFactor, Reference,InitialMask,OL_LowContrast)

	set(NucleIIllustrations=cnt(nuclei=nuclei, InitialMask=InitialMask, OL_LowContrast=OL_LowContrast))
	if(defined("NucleiDetectionData"))
		set(NucleiDetectionData.NucleIIllustrations=NucleIIllustrations)
		set(NucleiDetectionData.NucleIIllustrations=NucleIIllustrations)
	else()
		set(NucleiDetectionData=cnt(NucleIIllustrations=NucleIIllustrations))
	end()
	set(NucleiDetectionData.SingleAlgorithm=yes)
}

proc nuclei_detection_singlealgorithm(
	//INPUT
	image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
	string NucleiDetectionAlgorithm in,
	string NucleiDetectionType="" in,
	double BinningFactor_double in,
	
	double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
	int MinimumNuclearArea=70 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
	double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
	double MinimumNucleiDistance=7.0 in "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
	double NuclearSplittingAdjustment=7.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
	double MinimumNuclearContrast in "Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.",
	
	bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
	container NucleiDetectionData=none inout "Container with additional/optional input and output data. Output container includes sub-container with data for output Illustrations. In case of scan or multi algorithm mode there are also all result object lists." , 
	//OUTPUT
	objectlist Nuclei out "Output object list with detected nuclei",
	//objectlist InitialMask out "Output object list with the initial mask (mask after the initial thresholding). Used mainly for illustrative purposes.", 
	//objectlist OL_LowContrast out "Output object list with the discarded  low contrast objects.  Used mainly for illustrative purposes."
) [hidden] object recognition, nuclei detection "Nuclei detection procedure. Detects nuclei on the input image."
{
	set(epsilon=0.0000001)
	// Inner-technical nuclei detection procedure
	set(MinimumNucleiDistance=BinningFactor_double*MinimumNucleiDistance)
	set(NuclearSplittingAdjustment=BinningFactor_Double*NuclearSplittingAdjustment)
	set(MinimumNuclearArea=BinningFactor_Double*BinningFactor_Double*MinimumNuclearArea)
	set(NucleiDetectionAlgorithm=NucleiDetectionAlgorithm & NucleiDetectionType )//& "_inner")
	
	if(	NuclearSplittingAdjustment<1.0-epsilon)
		set(NuclearSplittingAdjustment=1.0)
	end()
	if(NuclearSplittingAdjustment+0.00001>=Reference.width/2.0 or NuclearSplittingAdjustment+0.00001>=Reference.height/2.0)
			if(Reference.width>Reference.height)
				set(NuclearSplittingAdjustment=Reference.height/2.0-0.0001)
			else()
				set(NuclearSplittingAdjustment=Reference.width/2.0-0.0001)
			end()
	end()
	nuclei_detection_inner(Reference, NucleiDetectionAlgorithm,showillustrations=no ) 

	set(NucleIIllustrations=cnt(nuclei=nuclei, InitialMask=InitialMask, OL_LowContrast=OL_LowContrast))
	if(defined("NucleiDetectionData"))
		set(NucleiDetectionData.NucleIIllustrations=NucleIIllustrations)
		set(NucleiDetectionData.NucleIIllustrations=NucleIIllustrations)
	else()
		set(NucleiDetectionData=cnt(NucleIIllustrations=NucleIIllustrations))
	end()
	set(NucleiDetectionData.SingleAlgorithm=yes)
	//ReSizeIllustrations(InitialMask,OL_LowContrast)
	//ErrorReceiverForNucleiDetectionLibrary_v1()
}




proc Nuclei_detection_SetOfAlgorithms(
//INPUT
	image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
	string NucleiDetectionAlgorithm="B" in,
	string NucleiDetectionType="" in,
	double BinningFactor_Double=1.0 in,
	double BinningFactor=1 in,
	string ScanParameter="None" in,
	vector v_Algorithms in,
	
	double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
	int MinimumNuclearArea=70 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
	double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
	double MinimumNucleiDistance=7.0 in "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
	double NuclearSplittingAdjustment=7.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
	double MinimumNuclearContrast=0.1 in "Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.",
	
	bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
	bool ShowOutputParameters=yes in,
	container NucleiDetectionData=none inout "Container with additional/optional input and output data. Output container includes sub-container with data for output Illustrations. In case of scan or multi algorithm mode there are also all result object lists." , 
	//OUTPUT
	objectlist Nuclei out "Output object list with detected nuclei",
	
) [hidden] Object recognition, Nuclei detection "Nuclei detection procedure. Detects nuclei on the input image."
{
	// Inner-technical nuclei detection procedure
	
	if(NucleiDetectionAlgorithm=="set" or ScanParameter=="Algorithm")
		if(NucleiDetectionAlgorithm=="set" )
			set(v_parvalue=v_Algorithms)
		end()
		set(SetParName="NucleiDetectionAlgorithm")
	end()
	if(ScanParameter=="Algorithm")
		set(NucleiDetectionAlgorithm="set")
		if(NucleiDetectionType=="10x")
			push(v_parvalue,"A" ,"B" ,"C" ,"I" ,"A")
			//push(v_parvalue,"A" & NucleiDetectionType,"B" & NucleiDetectionType ,"C" & NucleiDetectionType,"I" & NucleiDetectionType)
		else()
			push(v_parvalue,"A" ,"B"  ,"C" ,"D" ,"E" ,"F" ,"G" ,"H","B")
		end()
	end()
	if(NucleiDetectionType=="_Large")
		set(NucleiDetectionType2="_Large", NucleiDetectionType="")
	else()
		set(NucleiDetectionType2="")
	end()
	if(ScanParameter=="Threshold Adjustment")
		push(v_parvalue,"0.3","0.6","0.9","1.2","1.5","1.8","2.1","2.4","2.7","3.0","1.5")//push(v_parvalue,"0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0","1.1","1.2","1.3","1.4","1.5","1.6","1.8","2.1","2.4","2.7","3.0","1.5")
		set(SetParName="ThresholdAdjustment")
	end()
	if(ScanParameter=="Minimum Nuclei Distance")
		push(v_parvalue,"3.0","4.0","5.0","6.0", "7.0","8.0","10.0","12.0","15.0", "20.0","30.0","40.0","7.0")
		set(SetParName="MinimumNucleiDistance")
	end()
	if(ScanParameter=="Nuclear Splitting Adjustment")
		push(v_parvalue_temp,"3.0","4.0","5.0","6.0", "7.0","8.0","10.0","12.0","15.0", "20.0","30.0","40.0","7.0")
		foreach(v_parvalue_temp,"i4")
			if(i4+0.00001<floor(Reference.width/(2.0*BinningFactor))+1 and i4+0.00001<floor(Reference.height/(2.0*BinningFactor))+1)
				push(v_parvalue,i4)
			end()
		end()
		If(!defined("v_parvalue"))
			error("Un-realistic magnification factor or too small image. Please control the inputs Magnification, ImageBinningFactor and the input image.")
		end()
		set(SetParName="NuclearSplittingAdjustment")
	end()
	if(ScanParameter=="Individual Threshold Adjustment")
		push(v_parvalue,"0.1","0.15","0.2","0.25","0.3", "0.35","0.4","0.45","0.5","0.55", "0.6", "0.65","0.7","0.8","0.9","0.4")
		set(SetParName="IndividualThresholdAdjustment")
	end()
	if(ScanParameter=="Minimum Nuclear Contrast")
		push(v_parvalue,"-1","0.0", "0.025","0.05","0.075", "0.1", "0.15","0.2","0.25","0.3","0.35","0.4","0.45","0.5","0.55","0.6","0.1")
		set(SetParName="MinimumNuclearContrast")
	end()
	if(ScanParameter=="Minimum Nuclear Area")
		push(v_parvalue,"5","10","15","20","30","40","50","70","100","120","150", "200","250","300","400","600","800","70")
		set(SetParName="MinimumNuclearArea")
	end()
	if(ShowIllustrations)
		imageview(item=Reference, label="Reference", title="Image with intensity information. Nuclei are detected by this image.", image=reference, gamma=2.6)
	end()
	foreach(v_parvalue)
		if(NucleiDetectionAlgorithm=="Set")
			set(NucleiDetectionAlgorithm2=i & NucleiDetectionType)// & "_inner")

			//eval("set(" & SetParName & "_" & i & ")")
			set(text=SetParName &  " " & i & "; Number of nuclei: ")
			set(text2= SetParName & " " & i & ", number of nuclei: "  )
		else()
			eval("set(" & SetParName & "=" & i & ")")
			set(NucleiDetectionAlgorithm2=NucleiDetectionAlgorithm &  NucleiDetectionType)// & "_inner")
			//eval("set(" & SetParName & "=" & i & ")")
			set(text=SetParName & "=" & i & "; Number of nuclei: ")
			set(text2= "Number of nuclei, " & SetParName & "=" & i )
		end()
		set(MinimumNucleiDistance2=(BinningFactor_Double/BinningFactor)*MinimumNucleiDistance)
		set(NuclearSplittingAdjustment2=(BinningFactor_Double/BinningFactor)*NuclearSplittingAdjustment)
		set(MinimumNuclearArea2=(BinningFactor_Double/BinningFactor)*(BinningFactor_Double/BinningFactor)*MinimumNuclearArea)
		if(NucleiDetectionType2=="_Large")
			nuclei_detection_large_inner(Reference, NucleiDetectionAlgorithm2,MinimumNucleiDistance=MinimumNucleiDistance2, NuclearSplittingAdjustment=NuclearSplittingAdjustment2,MinimumNuclearArea=MinimumNuclearArea2,BinningFactor=BinningFactor,showillustrations=no ) 
		else()	
			nuclei_detection_inner(Reference, NucleiDetectionAlgorithm2,MinimumNucleiDistance=MinimumNucleiDistance2, NuclearSplittingAdjustment=NuclearSplittingAdjustment2,MinimumNuclearArea=MinimumNuclearArea2,showillustrations=no ) 
		end()
		CalcAttr(AreaInGeneralUnits, Area/(BinningFactor_Double*BinningFactor_double),objects=nuclei)
		set(Nuclei=objects)
		if(ShowIllustrations)
			imageview(nuclei.border,""  & i, image=reference,gamma=2.0, title=text & nuclei.count)
		end()
		If(ShowOutputParameters)
			output(nuclei.count, text2)
		end()
		push(v_nuclei,nuclei)
		push(v_text,text)
		push(v_text2,text2)
	//ErrorReceiverForNucleiDetectionLibrary_v1()
	end()
	if(ScanParameter!="none")
		set(v_text=v_text[0..v_text.length-2], v_text2=v_text2[0..v_text2.length-2], v_parvalue=v_parvalue[0..v_parvalue.length-2], v_nuclei=v_nuclei[0..v_nuclei.length-2])
	end()
	set(NucleIIllustrations=cnt( v_text=v_text,v_text2=v_text2, v_parvalue=v_parvalue))
	if(defined("NucleiDetectionData"))
		set(NucleiDetectionData.NucleIIllustrations=NucleIIllustrations, NucleiDetectionData.NucleiLists=v_nuclei, NucleiDetectionData.VariedParameterValues=v_parvalue)
	else()
		set(NucleiDetectionData=cnt(NucleIIllustrations=NucleIIllustrations,NucleiLists=v_nuclei, VariedParameterValues=v_parvalue))
	end()

	set(NucleiDetectionData.SingleAlgorithm=no, NucleiDetectionData.ScanParameter=SetParName)
}


// ------------------------------------------------------------------------
proc nuclei_detection_B10x(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
//OUTPUT
objectlist Nuclei out "Output object list with detected nuclei"
) [hidden] object recognition, nuclei detection "Nuclei detection procedure. Detects nuclei on the input image."
{

	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")
	
	nuclei_detection_B10x_inner(reference, ThresholdAdjustment, MinimumNuclearArea, IndividualThresholdAdjustment, NuclearSplittingAdjustment) 
	
	ErrorReceiverForNucleiDetectionLibrary_v1()

	if(ShowIllustrations)
		imageview(item=InitialMask.border.mask, label="InitialMask", title="Mask after the initial thresholding. Adjust par. \"Threshold Adjustment\"", image=reference, gamma=2.6)
	end() 
		
	// Removes breaking lines between the stuck nuclei, 
	// Input parameter DistanceRatioLimit is fixed 
	//controlbreakinglines_v12(nuclei, 0.8) 
	controlbreakinglines_v12(nuclei, 0.8)
	// Adds to object list a contrast attribute
	object_contrast_general(cells_out, reference, InitialMask=InitialMask.body.mask) 
	
	// Creates the illustration "LowContrastObjects"
	if(ShowIllustrations) 
		set(CL_Temp=objects)
		objectfilter(contrast<=MinimumNuclearContrast)
		imageview(item=objects.border, label="LowContrastObjects", title="Discarded low contrast objects. Adjust par. \"Minimum Nuclear Contrast\"", image=reference, gamma=2.6)
		set(objects=CL_Temp)
	end()
	objectfilter(contrast>MinimumNuclearContrast)

	if(ShowIllustrations)
		imageview(item=objects.border, label="Nuclei", title="Detected nuclei. Adjust par. \"Individual Threshold Adjustment\"", image=reference, gamma=2.6)
	end()
	calcarea()
	calcintensity(image=reference)
	set(nuclei=objects)
}// End of nuclei_detection_B10x()



// ------------------------------------------------------------------------
//  Nuclei detection procedure from detection_B-script
//  Nuclei detection inner-technical procedure. Detects nuclei on the input image. 
//  Called from nuclei_detection_B()
proc nuclei_detection_B10x_inner(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0. Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
int MinimumNuclearArea=70 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
double NuclearSplittingAdjustment=7.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
//OUTPUT
objectlist nuclei out "Output object list with detected nuclei.",
objectlist InitialMask out "object list after the initial threshoding.",
mask DarkerMask out "Mask of points, which are darker than the surrounding. Mask has better resolution and the higher noise level with the smaller values of NuclearSplittingAdjustment and vice-versa the lower resolution and lower noise level with the larger values of the parameter.",
vector ErrorInfo out "A container with a possible Error Message. If no errors occur, the ErrorInfo.ErrorCode will be zero."
)[hidden] Object recognition, Nuclei detection "Nuclei detection inner-technical procedure. Detects nuclei on the input image."
{
-----BEGIN ENCRYPTED SCRIPT-----
AA27C2A4E97A02CC4D6FD803AB5BEB88C33B1AF0B6B634CC9DD2A7065C9BB37887E9E732FC6
B9E20520EBD7D76F9E69D91D1362A18515582C1265F5706D5B85BBC6974730943684DCE6FF6
246F26B6884CEF84328737149FBB6852DF78FEB6748148BE8C57418F52F3CF8A3A1B3D43FFE
8BDDEE5AFD7A4D774C9F5712F6F1738:0D67B03B4821877C1E1BC335D189CF053B324E1ED85
FF00433D9485EAD46E921D2677C1B5DD469339539CFBBFAEA6E4573F1265BBF00B315462706
0B6E11E0CB856A5AC2A6E0B0FD8582AA4160E89A75BB2B8E1EAF4E2D03E3145E66CDCE0610C
AD1452BCECA5D26CF16EF1CC6BB116D260D605DBC727E329A45C6BA591322D5/B4DC5C96303
D2C9D809860D3631A2936666F65799D7B1A2432B64C97869EDFADC6EA55084DBEF90BAE1B57
CE7B44BC8F7A93359C2526502D61833944B9C82527499A9ABD4DA01F13CC1D3DD20F1F0959D
C8F6AF9D69E2A04BA8CE9A5B95D39EE3F0EDA63903AADF15F52123AF3E9199B8D8D2D199FBB
D66A5AE8750A80D16992EAF9402C0367C52C5B95502F878E3227B9035422D852A7F145F8D0A
AD2F70A9DE33CF96B0A6222DCFD5770D0A8E2FAB0D32B7C56FABA3C3EADC20EE4B1045B6CB7
ADEBB9CBD9596C5AE8750A80D16992648DE4E3CFFD6BAC2A3BC3568FD28661ECF622CEE4C21
37A54104F28093FF6C58339260D5F8B3FF6840456C2DCF43FB66B3A10E3ABB04550CCBEE153
1C295427EE4FC4C4E680F65A82A686897F3E01779A5274D9BA28772F683903CDD2C2E746455
FC8A90AC03C6355D94751A1D766A8DA06807492EAFC8FF91202625732C4DB35869B2E85879A
84AE9BE79BCBD42935A142F97295FB855F3AC02C96835C039F8DB90F1C46DB4A148E2060221
1935060B4297F6935C1DDF0EBBF605F5FC9E03DA1CB5058490277B3CCF826B0BFDEBD572DD7
2ABD680DA7F92B904287042987F1C59E8C2934C259B0EF8FC6FA28B80AB4D32B7C56FABA3C3
EF70C19B2A3525F9D3F8EBE3C1A4EEBBA8B9D0BA906A8BFBB2F9A54D6C88F682047E0F8A7FC
4E0DCA9854CA52A4D34A3BE3499BA2DA060AD1C4EF7B3F99B072BD316FDB0201FA8C7191BE2
30A3CBEAAF2566E2C6B1A2EB10CD300717F8518BACC67386573F5A606F96035BC54BFAB449B
78C90CEDB1E9CC592160D9C3499C1F61F431A0F752DF3F0672D214E6678AA3F49491F088EE1
7AB24777D9A6D88DB4A487277F149DFDB10B47980796B83393117A887C805A57FDCCFBE2809
3E1CB05FACB85737C9D2830673D4DE15768C3612D5F9B2799CF0FD46A25AE8750A80D169927
AB22599E941C900E41C9CABF74EF62CBEAD17FAAA7E004DB38CFE73F07F4EBBA1873713C119
8B32CBE875535A5458639ED0D67021E33546223D71D47B81FC6EC872794E2D48FD9A58D86AA
64365CC7636599EFA7666206B595121537AC40E358ED81774F6C264D6D3BE1D9195A936DDDA
7C85730B575AA440800C751F80076459358C23805DF4B252D3B2F5B1EF4A5B5B5E0BDEF8509
9AC8265899CA42D8E978B9D0BA906A8BFBB2F9A54D6C88F682090D406CDD0BB18E7B38CFE73
F07F4EBB077EABFD78A2B61623C8BB078B11A56D58B785E95217CAFFFF1E11CDFD7A511AC82
6ED3D4D70590BBA566DD29848D9FEBA6DC0FF091C0FD9D4C29214294A011B12FA821C852220
B417BA238CED9CFEE90EC55769DF8E9B7D2F2EC7A4A5C003697AD0DF3DABE43FE470DC6CACB
EEE4EE26FC8190D8F5BD6E8F94CC97E75431E78F4C45BD66CEEC5761E164B1EA640C70542F0
6AD8B28FF76774A613626600AB2D34AAA6532759CE2F5150BF3EF164C02903C3FB525432B71
A58B785E95217CAFFFF1E11CDFD7A511A2534E0981B93C39296302A96EE80FAF3DF51DA41D6
D28577F73FACD92CAB76B8D050DD629F6D0CA84F60FC2FAD04CA76344C29DCF15547D625736
C95F2DC304BD371A7651808215A259FDE0B4EBD6149942BA62176DBFF8D8B54D3F5717B0316
EE5398291BF4261E0FC3C422004567DDD6FFB85951816A8349F6BA1AC8260C9C4E480415315
A819633F020982CDDF3DF25B3331558B8549178EFCD34C627B0A01EAD817FA295AF5806597E
E2378CAE7F2F9A54D6C88F68209E4C0F78B00C95B9FB5FD5C5B84545003527AF9EC12C85960
0BA6E031DCADABECFA080D7CD03078BEDEE6890131C21468D93E56C57444987CDCE0883927C
06686A660D276E718D2031A4E0BDACAD983FA6EA8038F81DC74A5629CFCB30A9634391BE230
A3CBEAAF28533258661CA2CE1742240B2775D9B6C927EBF27DF644B53D32B7C56FABA3C3E97
29BCBBAEE5FF8A0BD0E217AFD08AF5ED435A4DFC64B3F5223D71D47B81FC6E510AB885B7A65
803BDE61F21335F75C8795622FE344A84722F2EC7A4A5C003691C41902F62AC117455EF65DE
EA3B906A0CA4BC909AF5094646EC78222452E35463FFB50AF069BEBE0415FF607DD42C0F872
D9E804A0E7CE345AD3D416809C2D5AEAC0F90284E27B6921BF858DF5B7E75560ECE05F41721
EFCD9EA70B3BE00538BAEE2732ED0CA898F4EB884456527871A70C9535B16C58C483A190412
2C5A4DBE55BC6BECCBC2B0CED393B355EFD31FA8FE9251B7BDA09DF7D072ABF84E59E63B6C5
228995EA82B64838283C46D97BC6FAE49D3E5B3C64BC03ED013CA968D323B646A1BDC8C208F
FE61F977E1DF12F12C7386B6F9395FB26473B74D1721190367612783EB9DD9CAE61A64C29F0
FEF57DF4C45BD66CEEC5761E164B1EA640C70596D11587FE2F1F145BEE4F40331EB03F6AD3E
E9A12AD72E1B12182FFECF77D6C5F6DFC5FB0CF6A4CF97C731F55E7ABC92E615BB7F9D16A2B
25CBBFE6DFB274455C4547DBCAE3142E5AB06438D903802DD4EAE26FF31CC95F4AAAB1466E0
5DBA3F23ABBB4477C411292B45350700B4EC47D73ECF0712C114B6BB54019319BAEA6B04CAF
0D050ED1BF4AD2923ED32CAE36BFAEAE49DCBCC78EA4D8762A02E335BBEAF4901B7E52F2034
27ADD6633AB355D07652F7D9DCC5EB84C8D30F7109137894C18125B7DFAF7476429AC81CBA3
780A18568C7AC572D8090B9D6E396E2E4BE4379418A18A5D87EDCD01DFAEC4DE9490D8D175E
02F0E15D4C10BA52C35CCE523993EB2EF0ED24CB875A112B08C5397DC969403F002B0A210E6
E886A1B750E25A59209E77CCF05292DC87C5DDE69D5673BB37E33A5607BD13DCECBB7656F79
743B4E9224C868CCAD4EA8E4B034479E68C499F60EE1A1A296A63F71F18EC91660DE00DD823
CECC91BD8D6EAA3D24BFBB3EEF390CEC904E3F804A2572B11C552A12C49FBFBEA9F202D0BA0
12FB030C3B3179F44CDA626878CE66FD0FA70C0C745611FB91B1D0D846A6D9773AA0AB1D0E5
63A0577D93BB834AEB46E61D06C1377DA6BE197BA3EAA4EDBABF54B50360CA35C2C9C4AC347
6432FB039C2A4E9109E7C4B4BA8F961601AD46045C95C9559EDF0B7A1D39F48673254012D55
25A20325DB8AE5A8452CEC5454FCDF560BE26B313EC02A8EDBF5F732A59ADA62F5007C2746F
32160D9C3499C1F61F431A0F752DF3F06BF5498B1719B7136CA2A6659098013DD3BCF83A24D
EB3E7CF831CC2E0728972CDCECBB7656F79743B4E9224C868CCAD405D8328D5198FA84D8FF0
414BC32B91BC5D82773E3F0E76309F0B4EB4CD1303DEA8E4B034479E68C4A675923F0D5DA77
15C478EC54C275D9F442F58BEA62EEBAC646ED53E9A03F67BF54B50360CA35C22F3467C682C
28BF52F88158F333322E77301F94F9D06B9B8814E073BB22F576055EEDAD0F79A5226C24CB0
8CE1010FEADCD8351636C7847703E755047AAFE6084DEE10DF6475D593771DA5CE6EAA1544E
3DC9A1223140A9C03D72FEAC4FE7E3EBE6AF29363260A19EA1186D7279E966F6E912C8B3FBD
716B092292D84A946E0ED0E8B897980A16D05A38F50BFC25F2F10896A3C1D3DDA984F03D568
56F03262E6504298A0B64D1AAA4760B6512AB0665B0BC8C9188500FCAAFC5AE2CA74C981318
9C2AFBF91DEDF7CD79A562450F3235259FDE0B4EBD6149942BA62176DBFF8D777497900EDF5
7708F81B0DB92D200EA259FDE0B4EBD6149942BA62176DBFF8DF83776C51784DA11B0BC8C91
88500FCAF1528ED8F21D7A49F731156B706C594EDD495479C28473FB492AD1AD8232D0B3611
B68BA1795898435E2B8CA72099C4D68594D9DD99D6667E3C532D3C0A5FF74B1073449DFAE2F
981B4B498BD083CA04FCF9FAAE309074ABF21878EE7EF20B31C1476E3873473E57DB74B8C25
74611037AC673955974C9EF2FBE531C5BCEB5E496070C205ED9C814FF7D63C06F0C6DD4B6E8
81A5EFB1CAFDBCA5E0665C28EDF7EE12BD606A118EB4AFBB360F6A85DC7BE3D59DAB7A7F7C5
5DE9413D05AEED535F51E3B290A7444D5629370F7A1B69CC7857BD51FF578E333E21F7B2CC2
46F88CD6409C6F7D0D0B91CD600FDFD588BA6FC20F2123B27967111CF49F3A2A0C410FD8B10
233990EC214FA58A1D8C8F0D7FDD7C291D2EB68DD50F25CEC5DEFFCAC907BA0C455E1A1BA30
543B40FCFF50160E9277DB54A65791479A96BE93530CD301DA8552B11FB84FDA6DC0D2440B3
1267388BBC098BA8CE940F274AF2E4DDB209A1702B3508BBBFD7E3729F7C3B2D5910D9180F5
A25A0E515F2ACFDAA0646264F4B85737C9D2830673D4DE15768C3612D5910CA3EAD8E1A7832
D979F11E34FD604454C82FF297241B284FD200C40B266B9C916CD1BD9779DA1E04717722F57
0370F0727480F060CF394A9E2751E42F007FFDE8D6A6A79152EC1EAD817FA295AF5806597EE
2378CAE7F2F9A54D6C88F682013277F4CDC4E1FBB88BBC098BA8CE940F274AF2E4DDB209A17
02B3508BBBFD7E3729F7C3B2D5910D74CE1E606F7CCE16B4FA1FF56000BE0EBA7C2A16242B5
5F5189BF888CF50D1AFBD0C023F0159AD3B1909037ECDB95E650F98E917B5029324EA27B783
49470A80B6F67DC76ABE6C15406771FFE52741DF944EAD50E62C9D37280B2B2D9157656D36E
DF985CCB9C6233E0D08394BF475AA5A2CD90C4A72148CA7C1FF929C391FD51BF3E85F6F21F7
A62D568E3E51F62EC9F66AFFFBC53AD3663CDD2A5A6EC1894BAEE420130608EF186608F371A
0D6E388F7413B97E0DCB24774523C4F757309932D5D82EFF0C4137F52D3B2F5B1EF4A5B42F0
6AD8B28FF767BCA4FCE69BFDD450B8ADAA56BFAF6CD054C1C055B0C45B8EE5AD46D9E6456BE
CD93FAA2E0A2F4C7CC8E0EA8E7AF980B0E49F6D08C2802D596A5FBCD200209E636B60984A12
2F9262CA9DF734F112BC810DC4CDDAEE30F0EB19DD1937C93E65DD1048EDC5DF4BD80B0C567
CDEDC8760A6A3FAD2D47315AC321FE9BF072692C8FFD91D500C4D6DF2365F6DFC5FB0CF6A4C
0C42ECCCFEEB2736038C7E023B9EBF293F29D227BE9C84D3B8B08C4B96C750C454A0490A9C3
96AF52116BADF92C46EDCD7A39CAAF9F83232811F16ED4E6733462235C42A0C6B133209F0B4
EB4CD1303D214816D58FCE7E3A7ADA4A71B89E75AF0AC4082B8DBC1D401D1368F180F368391
2635CD2598D11F4885B48A9808A302B6117BA98774BAF2EBA150151CC56F67018F7B9E5E2A7
D4F0FEB61DEA9D7FDDBCA2145A7E0DE2F1C079C8C0B26A5304FF1A1DA76BF91364568E12EBC
CFA6BA5C228DD5521D1C085CDC994D175FAE46CC65CA924FCAD063953D3640EFB310652B8DF
9592194E3BDF8C5F99E52323791953F03B2746536DBC293BA332837D2F3604085045BDFC235
C3C0AEF3F45EC51B1B7665C92F1093DF8534C0A2F8DAE35D0A56FD9410BE69838122291BACC
3248EF81E90D33B76CEA083B42A4A35A357B0B3871DB0B7E41CF6FEA576CBA8F288E372C029
133E14F19BE80EBBF605F5FC9E03DA1CB5058490277B3CA3D22EC680CBCB891F1B73FA4B25B
08B1BECCBBF72F57D585A40EA727258AB16218AC288B6641A7555FCA761A1920950E089A7AB
864996E0A81E37C41D9DFC3A957BD96314A98098665B59F2E8299767BA506954E12A43846DA
2080F60FCC04DF3C4B1BD195BEB5EDDC7B613FBFB1129A56D75DA2265DC4AF740F3B6ED970D
A29BE1A6FC5A3D2E0090645395C16292093F7640D975DF42375C46BC61FA652C4A426AAD7E1
FD0F151F208AEABE82AB2B2DD602330F045C5446ED9B589ED4CF53933170F6015394FE300EB
79231A594FC858B8E1EBDC9152E27D495EAEDD124A80EFC92F4AFD7ED5E7D4544BF5E4FB8C1
832D0C0EA08DE6225AE9FE7EB35A0D0B0D2A31255F5B583D2E7ABA94B778CE1BBFE12ADCC5F
2752420E6F0E939A8F97F4403804B545095F75A84CDDF68B782B4DA7223903D3B30BF7301A4
F8B8FF6C2BEB97489A8433B825A5B0EDA987C85BE56DAB67D5A3E3142AE01902BF60B79EF71
8945ADC00695F55F6B463E03FBA152CBBFEEDF95A29CA337817FD862E98E0DB2AB670C60A7A
57EDC0D7447E6319D60A0371E6B036A18DE7C535E8E377506B15C713C6B39799B08B96D7000
B4D93B3DBA25A41BCD6375A44317734E48EF83118C807B02127B82D49F3854C6802DC55251F
2B49D11CB6432395021B8B732E85F9083F0C2D0B464E1CDDA17499C2C709D91D2BE75890A06
007992120E2E789588511E1385303E23EED9AEDA21232DD9F112C2CB3F6062995710EC55769
DF8E9B7DD5A8AC6D67C53C03AD117829291DAFEC421D6550697FE6E874A36319889EB20E55A
E6655820855B5D7EBC7A144CB33C2168C656AE32AB0196A5FBCD200209E630576073240452C
E66203F77AB0253B91112A6C93AD0E0EB5315917A92027563C549234EC2710A2FBC12DFE1DB
DF3758BA00D4372009EE213B7A926C178EEBE7DC9C14A2AB0D2D24B2A84C8FA86070F9CA56F
9ADBC6C6F73418AD77F363C6D6297FF80A3B6E195331C0A6C8B524C6B25786D365BBBB07DDC
43018F1653CCB6394BBFB9D2251901DC6353A5FB0A97BEE6ADCFFD15CE0D9CCF076BFC100B9
474DCC574D2304530445D30576073240452CE66F7AC1B4C5714478065CE5EE66ACAD39311CD
33962051FEBCA09BE502237591967BEA625D9430BEBEF8BC871B86B700C8E5B0F19856D7D89
DC7A3F51C774291C6A9990976526191DED9024442FB3BBFE360C25F0C1630B637156C3007BB
1BDB60CBBA647CDF8386FF5EFB677C3B52FC3F685192EFF40E6B5AE5DCDFBE6B2DBECA155C1
EF2FA9568AE0E5EC683D04F242FCDFD0F147FD10BEFFE4E07730585BFB3097EFAC01C8926B4
51F06D38FF9CAEEF731156B706C594E4BA1E96FFCBBB6D877153692D76139CFB6807AC3AE20
F8D79AA2E122C7B38DDD9908E22F6606E0F9611C3B6A99E0304548110F0C5FD21728D379235
54F471F4DE648AA2D2C7B1AF2855329A86043541F999AB9E5ECC7D4E8BF7496DFD0A5CF7BCB
A269664CAD03D21490CB1A152FD5732993B458BBFE575AABCCFE541570C1727C8FA49066FB0
71C03F9AF5F59F3DC01A361012891EBBBC4261B84A8E3571B383C356B2E8B50B4F62DA93F02
72809218EF59E40853026FFADFA95A1CF5E61F7E16590BD5651ED3B61C58D345F5B45DC131C
60B3DF2FD63FE9F61DB483A2993EF7BA0C455E1A1BA3041F1838357D138A7DD3E10F73F594B
A7E7408396561D7ADD23F46DE2DCB42AC10D224FA04EB95D33E25B19C5971845C273EC9C651
0D511CCC535E8E377506B15E1D45EDE5FF34047204182E7ECA0A6B4C7E7C65BB254CBA8E46D
39CB630CF3575D0AADFFC2044AB51E56CABDE58917FECDA7FE05F97F9681295707CCA26939E
85EF56C063043D8325507EDC9A2EA2B21A1B64D77D3BC1E5552D3B2F5B1EF4A5B0DF8E35726
6C41AABA0EF90BB2A2EA31BA3B8621D47E9A648FE7F75690B8D3109EA2C2676E3E1E64B5258
34D57E97FE9A90EDD03A51AE53DC21F9BFE4C4C066DA3FAD2D47315AC321FE9BF072692C8FF
7C6D241BC798F8E6B1BECCBBF72F57D5B1BECCBBF72F57D52FE6815F17F6A84D31ABC05146F
C229FF27448CBECDE3DF25431F095E62801CD55F8BF5C9B37F3ECA6C65D39C53A0368075465
44A49F0C53690930008FBE7AE133EF62C694C8E0E49DC49F0D47B0589F105E9634AE01638BB
557F2FFB521CD23EAD836CE7283A8110DF8E357266C41AABA0EF90BB2A2EA31090645395C16
2920F0720CBA2CE7947561B32618ADB6A148019A508BFF4502CC84593DBC213F84C04F5FBA6
5626595BAEA624031541918AC9AC3571F550DB21435CDE1D57C98C47F01BD4C3F657E4DCC83
473311B5C42ACE203546C71272DDB61173D01FCC7B72889B7C48CD43D2E7B81C43907C5990B
88E5EAA6C1E4B7A7C7917FA75EBA7A13099ADA702F6575108C9EBFFD8DEC37D9A0D348C0291
2531327A9C486E06303E3EEDCEB93E403417D1B0C59E8C2934C259B0C11946B30AE510D7C7D
ABD5B41636C54D96BF13F71C695F9C2E85A87D2737DE33DC3EE7877839A7CBD2AF770FA0BC8
8A7A0A85F7AB749D4EDB00543B91C8B6B0433F56F33BF2FD372F9A54D6C88F682076E1CAD89
67D33BFF11D84C732283B1FFB34E34C993A78B9F0DE9B1050B376C3486F68CEA7E6BC2F8019
A654EA87C957E90700A532B50873A72245D9739890756E4A8BF1ECC302E26BD842E858526CD
5EB25681E9A556C9DF1DD3A35EDB753198E2DC67C3752CF5C92077CC355B605DB908E6DB1AA
3DA55BDDA17499C2C709D98570557C81F6496800F0EEF1B330CF34C80ABEC21722E13FC64FF
24C2B75FB562A2FD9A1330EF0983097EFAC01C8926BA0A3796C76E8BBC0F7DCFC49FB9F079E
8963C454F9A4711F8A08C2C0F827A9CF810EF6733310FDF060C16CB5C733E5A3DACC46EA67A
1DF43845FF74A7F76C48F3FEB3C1057B12912B89F5E30CB6E700722937D23288A5E1DABA2D9
E3AEE57881649A159ACBF5336B5965B7517288C23CE6675461C73E4A31A3A3DCDF4D4271608
D84F4C3E880245B4252D61AE7EFDBAFD84ABE4ED2B77620FE953266B5E73984D56E1C7C6104
88F7EA4DFD2C7440335F642512F436C3E2C0B79DCF97075A4D9393B358E17D076B78B5ECE66
DF94ADF88378E2377B021B54A2CC370511FE9CE119F47831C7E52F970552AA469B4A181FCCE
57436FE12E97A3CB9ECE79A18E7246032BCC569F2A872D756E601197EA448509ABEAE6F6C72
CCC70D6B2CA5FB2C5D8F731156B706C594E9AF040CEA97C6AAA3097EFAC01C8926B74185397
76B041765A7BA4352FDC2E9A74A36319889EB20EAC89799F25F620A7F51E3B290A7444D5990
8E22F6606E0F94F57AD2708581E80870B1D234BF8917345029EABE5D9FCDB4DD0E1CDEF9626
6A1711A665FF88BDDBC8B9F3CFE829BD570876D85D92410848F688D5866ACEA1BB5C4C3605B
E96B801552AA469B4A181FCCE57436FE12E97A3C26006858C6DA82CF31A9AF180CCFDC99EE6
460A7800DEEB1C0922C135E3FDF4FB34E34C993A78B9998D09DA322CE1D80DAA267209BCCEB
38BD87859A04FCE46AC6B6D5D0DFDCF89BAF3169387CD1F63456B071BADF2794F39D55F5FD0
C2D18516B0494D619370CFE15AEFCE740659D19E63830CF00F03A4561728A2F854F31C5892C
8EE809915F2318D47CCCC3B0C21112A6C93AD0E0EB58786D495B81B0181E376C3B1EFC70363
C916CD1BD9779DA11A8593D55A74252904990BB6E05415878D26493FCE18448B7F6B13B2618
3114A7E1AED0E8AD6281A26FF73FC436A59D7E3EEE1B4BFE3BD7458F03CB19D7AA4A51E2365
1AB19097C64F93AA1126FF47290362C334320A589E35E00DBCDE56706E090645395C1629202
E5E53240FC492C6D54F9830C9B681FA20436CB759E7D02305CC606B2486AB55AA4D7DF226A1
7B32EE7CB3140378DCC0C7DB25C29A7D3400179D8B100679F691CDB689AAFA71F9F0ACB6CC3
33CF010C336BEF47743FAFF44BFC57CC23E66DD9CC25DA470897B554DF98A39C10EDEF81CA6
785D412198E59348B19D162C4FAC590AF879764BBB3A6B2EF659087E5EC88D68F7B5669ABED
41CE61F977E1DF12F12E3254677B5ACD61F3E6132355FCED112134A2296DE6BC1276BD842E8
58526CD5FBC65972C67D7EAA6D1C1EB8A55FD08D5073A0F943912D322E5FC6628CBD5E5DF73
1156B706C594E9AF040CEA97C6AAA3097EFAC01C8926B02243D490C0E4EF95983B8056E469B
0131F906F4F47FCA64E5A8452CEC5454FC378297B95D33ECFC51C3E17276B2F18C316FDB020
1FA8C71B5CFAD7DEC4B11290EFF9096B8EB427685AA91AFC98F0A18E43E72352704FAA2F936
985FAF19296A42F06AD8B28FF7675B629376EFF129FD32BAFC01167EAC333AF356541DA9B3E
56E4BA615F5F8943631F906F4F47FCA64E5A8452CEC5454FC378297B95D33ECFCABA4EBE11E
CC41D2B38561DBFBA176AD74DCFB6BAB96F5831F814A3B50140E439CEC530CEEEADCB610014
6A92B2A0412AB0802698189E1426533D48AB9F5BDB073617038852BBB72343EF5E0634AB3FB
1A8593D55A742529D5C82C4D4818BE08EC4CE2A4AC267DF64DB555A6173D363C9F52C4B899F
EA005E487DC6ADD5F5F83AA0CD54574C8B627182116EC249A486BBA0EF90BB2A2EA312833A9
266048A3A7D54197C1DD21D54BD56E1C7C610488F7E1580D8DCD83A206B409C213CBE423124
F09E5933801514F982FA05E10F729941D5E0E3B639D6FDBC67F98C5719E968A775E7DA55ECF
FA1B352265AE06066FFC2BFEDB83B57BC6DA27866EB89DC3865347F2BFFEF325AEB5D0FE0DF
570292BB2103AA87E345BD0F8AAB6068B53BC072E428129BE9CFECD6971AEF28B97AC3FB35E
E34D9E19F40D4246ED9B589ED4CF53EA65D9E062D00D9FF9EB1C047E7D3E24B3641FA57C88F
4F0C237FF8ECA39339EDAB4C40891BDCBE27645193458939EB877D8C161E0A57CE686778168
70ACC3B420CE4248686B75004A2DF8D6D4503DEBBE5D409CBBEACD71FA08F5212750E7BB1A7
B50F0E0E071162D731EB258CCCE1EAB7255249C8ACE2B9AC3571F550DB214D1D972FAD9DD21
8F77C1900395742AC918E40254227F758A12E227D1379F313134EDD275E04F77CF73FAE6548
D56B002AF81480A67447C452E71FB37E4844985EAF56902DA761A140CFE52083F910CA32ED2
C57A3FBC7F68AC84C9F3E0AF2E249859E026E05FC4664B569CCF64EF19CFA477AB9C0404006
D7CA41511F28BE2B2D963C25685875A222233E40EFFBF7D6D1A7B50F0E0E07116721382C4A8
D2C63F62E31EA0A8D5CB71A8A6A2887E1F46577817FD862E98E0DBF4269461D3A3FD6EAFBEA
3699F9C5260963E1BA8254095F8B9A51A86D88EAD491570200E17F3991886A98CEF3A49076F
6218AC288B6641A7A6F9ADC8934FD7A942F06AD8B28FF7672F366C66855A4171510DBF6E5B8
6938A33A2C446CF244AEF4553EE30A656E2695F9457F18A1B33C2FFB2DBD92FC4ACCC2B0352
C1EE8DC8B3E04D370DB15FFB61542CE2CEB7DB3C71A868780F96C320AB
-----END ENCRYPTED SCRIPT-----
}// End of nuclei_detection_B10x_inner()


proc nuclei_detection_A10x_inner(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0. Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
int MinimumNuclearArea=70 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
double MinimumNucleiDistance=7.0 in "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.]",
double NuclearSplittingAdjustment=7.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
//OUTPUT
objectlist nuclei out "Output object list with detected nuclei.",
objectlist InitialMask out "object list after the initial threshoding." ,
mask DarkerMask out "Mask of points, which are darker than the surrounding. The mask has better resolution and the higher noise level with the smaller values of NuclearSplittingAdjustment and vice-versa the lower resolution and lower noise level with the larger values of the parameter.",
vector ErrorInfo out "A container with a possible Error Message. If no errors occur, the ErrorInfo.ErrorCode will be zero."
) [hidden] Nuclei detection,object recognition "Nuclei detection inner-technical procedure. Detects nuclei on the input image."
{
-----BEGIN ENCRYPTED SCRIPT-----
83FF2BBA8ED012E4C750E22686BF1865E01DBE68D3703354CC97E560B2EB8B6600D3CE53DA1
762ECB99E65D39AC30488696B12B52FE1F02FD6F9906CD8A258B9381860BFF7201FEE727BFC
9CA03D585E061FAA65B6B22751AB3089FEF713BF615351F1D64B106617DCBC94C46021C2144
6334FAC02EAF4C23B60B1DC3ABE9E9D:656BBD701E59FD816FB31EDC212307179F8D759E9FD
A7A898F0AD3412CABF9CF4AA3C98DBCC900893819E39863E1377CF9C27EDC944CA379BAF7C7
3EF68ABC1EC3559FAE6E85A986E725BC42F706A68750C6853C9F94D0E0B508C45F51C15734E
C19DA65D7C45BA56C7B8B88C427E655F5BB76788C65247E289C239FA5EC5D34/2BCC692D0D6
24F6C3C760441BE9CD3952780FC46A2EE190FCB556B82C2BC9A652087EB7D267F1FE6CC5E14
F59DF974D13301781641BD0E58BD94EBD8CEBADEA1EC4B5F4C7B96BCD3616F7C9A16D4609CC
5A67DF265B3E136EEB65399A5355E7EC16CD622E41110EF36BA6E9D3D715588465ECEA2C86E
6CA84196665EC0AD9F27ED417EE927F89DCF41D3B2DD90CBCDD078A03C5F063D5343388220F
1A76828C9C4397ECC8AC5CD38E4242D2CD93B7D8A72D0F049DFD96F449609A934E20110EDD4
0CA6AF4F1108AC4196665EC0AD9F275DEA1E5888BD34D8D8C1A514DCAA8D46B6E6F7C88980A
92037F644A79C17E44EF0839E99CAD75740240F3A1D438F4FA86DB717B0DD9E15568C692F0F
0154CF026F67AB58D1DDFC05426F95BAC73912A31112B63E5E33A29C089B73B22CA450A27D1
18994ACD2B2DDA6CB5494FFCF24DFF9972DAE0CAA911AB6E1C75AAB524D08BDC47D9B2F5E35
F6817975DE0E6CC318EACAD8DEA4366244905386CA612F954A8C5E9E2FCA423F25232783133
BBEB20AD9B4513484FE768CA15F4678A6E4793AAC01B1F79E662AE71F935313E34E1D7AAB1F
580675890FC20226B07A1B9D0C127FDD18C272A799FBEE22D2AAAF26162572D0F049DFD96F4
42A8519F022BBCCCE503A05DD4563389BB8ED1661C9751CDCD1C38CDE19C5DD94FB9C86348B
6F22F1A4F3E5A60287A77A3B3064035AD73150E3D56DDFAE7A138A437D51ABC82D1BD9FB376
0D84D79A215A40D9B2B5B61A37FBB71540A23C0D48421641CDDE968F10E5A5F2B473E143BAE
809E63ED0205B270F5F69FB0576D993B5C49669B5CE45C84E3FE6B54767528ADAEBAAF17A4B
8539E5DFB481D02F97B6434FB7BA111B70157F1CA9F0EEE4049CA5D19E61A0C890B95267746
6496A52CCED30AF23C700A8AEFC60F089F99CDF2614C65E82C443D276CC6F6A335DFC57595A
5901983A221BF14743EAEB2D3302673889EB0044438141C72D0F049DFD96F442B290E475B4B
18FC73FF699B4958CCE45CA6B0FA45928BB4E639398506C0A2A604849F0C4CFDA251A982C8F
B674F32EC1C1BAC4D42E4717CBA70B03CE70CA23C7A33044339FEB5339B6FE38FB928DD40A7
96E6163BABB8DE659C803C3BD723A7006B32BB0E54E5795F3635EDB836FEA90C3C91126810E
5E2EB9261F2622E874FB8ED1661C9751CDC9276B8B6BC4CD6B8889EB0044438141C72D0F049
DFD96F449609A934E20110EDA4FE5CC2505F85048B09F4189A24424C612B0C2429650704906
43817F824D0AC621A9C68E76B948B99FB5EEE878E5497063CDDEB3B0B9BB76A6B9D0B1A7708
BBAEBB027F6985BA54657BF0A3B48214ED427BC7EC22003EB1457D2A7B6136FB73CB04D38F3
3E47E36941638E166B655F4E150972A7EBBF6F98DBAC5A70CD0B0090DC7F658976FDB8276CD
390C4162038D480CC72F4E081D79888109C0771948C0CE2A9AD1A34325F5FB9C86348B6F22F
1A4F3E5A60287A77A3B3064035AD7315086986905E06E2849437D51ABC82D1BD9FB3760D84D
79A215A40D9B2B5B61A37FBB71540A23C0D48421641CDDE968F10E5A5F2B473E143BAE35E2E
D4D4C364A0D792845E6591BBFA5B2663406F0DD0FE57462858AB270A60565825F597B20A396
8117F50A399631AA3FB88C6501F087DADA8B890FBB582EB27F54447385A9A7E22C9A642E98A
CD82E1999EC4302B45B6869206340AE0679DFDC2D8221065C0FA816720B388D7492EC437D51
ABC82D1BD9FB3760D84D79A2156E5D9FDF585E2F9BF7AD1EA37DB75CD54196665EC0AD9F275
DEA1E5888BD34D8D8C1A514DCAA8D4632B17531374086D96C54D9937C2C2C4087327394A6B6
05975EA5BAB48A961B001991FF154F278B07E342AAA2AA3CA9B52EFDDFDD75F2AF777CFAC09
86A123D251F8E076C3711B1215E40F844C5B47B50DD19DDE38961D17C659C803C3BD723A700
6B32BB0E54E579417377AE3C30EFD41999EC4302B45B6869206340AE0679DFDC2D8221065C0
FA8970D5A5115BF155E4548BB409E8A2A398DD923E1459393DE22BCF320D056845310B00F32
7CC84FBA5A223A30BE9BBD194B04ED8D9EC68AAD87FB91DF54768BA457E96A5B2745D712217
E92E2AC0603A67EA8490093A57BA2FA7D69FAF01A63198B09F4189A24424C612B0C24296507
047AD4AB31EFBCD591D8003E90A0F7C45B7B66ADF3EEA725DA31BC81D58DBE7E3DADB5553D1
2DA090D12EADB0F87EE5D0C81AC30BBB454A9FE5A5F2B473E143BAE3BAEDDE0656AEDF7BAF6
ADD17EF0892EFC38E9D8E26473833B0C6987ABC6FA792937A19FF5546B69368B01AB48A8D21
FE2E561006FC7643D8DD6D92B081A299A1D3215733ABECEBC512B4D31A5CE6F2512D657D769
179545920EB2D27A87D6FF3ACE94F7B3B6320715E97F4C10C91A4130A10ECCF0676B4689A13
12BE7352D023CECBC4595D46AF1DD80E3280528D28243150DFC7C57F21772E763DB50E89652
56E267A47D92E36421641CDDE968F10E6FE91FA4DE3BC19517B7B28343671D725FA9276A1C1
D446350573CA34CB736B248FDB02687CEF28D1FC10474DE51028C5CA6B0FA45928BB4E63939
8506C0A2A661450FE102E585D5023D2E086ABEECFF235FFA150F12FB615277D38B348423616
59C803C3BD723A7006B32BB0E54E579C16DD152AA7A95E8144DD25E622FF1B0D3735402A512
3635FC3CC5D71E055761B05357C05ADEE836EA0F67577B62A8985E9189E87D9464711E7EC91
509D9CFB61F6507BFFBE409578B26B7F7A122364BDD3869D79F117CA4DB1598778897BF77F4
3AEE3ECD162EB3FFE2D17387D5658246B0E43250CD70F7BB024838DD8977FD24AF059B6A340
B76734E221AD4689BF20B12683CCF0485E1ADF883CAF4C1C67FE4242D2CD93B7D8A4C6F81CA
87CF38A348C75F1F01367F91A818E171C27D318F1547198C4E2BC857B68D535B7379F383903
854176136437116819CBEF7CEACEB9889BCADFC0672903096A7CFB25D9ECDEE6652C0514660
229F000961A384B1C4304EB678AF1657AD1A604B577C256B028DBAC5A70CD0B0090DC7F6589
76FDB82D7C2BB860FBB681C27EEC44C86AE5BB5DECFC960E41574EE1F30446C506BE5A5F54B
A3B623C260B9B5D285FAE8DACD4180E9E836BBC891566F5E1F09DE7EA9A33D4FAE7FEDA73A3
28DD923E1459393DEFF489BF0C567EDEC17F1FCEF335281EFFD47F9A41E13897CFCE961CE3F
ABAFA032AD70FC85FCD4E9E504C13897B778264F1051FC53644A4235EDD250A3A94095144A9
D4943D3CEADF07E7E59FE0AEADE3E940438BC7AB1CD69D205F0FFCEC360B9C5198AB12C85A7
239FC422D69CCC8F3896F691A8A24DCD6B724482BB2B6FD9E939D783AAA3F391A85DC22B374
8814F6641C2180A09CFDC325DF5E8ADC449A51D971F99F64A5580C2FC4B956F032E8B4F27E2
10B79814ED3CBB835D76264F32367426F006E8913A03AA2FE054C38746B25482221E31C1A53
3F95B09439B1676E977CB6D84BACC12FDDFEC5AAD73CD5389190CCE4BBB4F7009ED73FE9714
C9F317D68BB2B1FF35C45E407F860C4A295105FFF0B768D63EC672E77CCB502AF1B4B26176E
35C5771AC8F954B5CE8DFC78B69CF9A98380A946E473AEECEE9BA5B16B7BA9FA818EF5500A5
85AC3EE9A9BF741A8C026EE60FCC678E5B88824D75B65A6A01762B0033F14A6A4D80BBE79E1
3518C5F26E603C39ACE2A2D2034649277553915F614BFB3E9EDA9F468EA371F306C6A107313
B46761167E90246C152BB45E576F681FCF7CE41C01659C85ABB9777E69D205F0FFCEC360B9C
5198AB12C85A7239FC422D69CCC8FA8E789D1EA5C787EE9A1FB4BC45E499CB58F1B7EADE834
E8472C755FFDB1BAB1F778BD8D9D6F10234BACC7D50922173199EC977975BD2870BD5D0C14E
45EFFC06EA4C6BCA17F0E8BB7BA9FA818EF5500DBF3A64C0F8B585DBD5D0C14E45EFFC06EA4
C6BCA17F0E8BB7BA9FA818EF550066521D480D4B69518D2F24932DF5A27EA428CBB5A7EA5B7
FB9C5198AB12C85A7CBA2BB9BEBBD633D588A47D02F8B6B29AB2860850103374D15335C1EAA
DB2EC64498CF74D3F654E8E4EF33F97582D4925CC88F65C8527C5D0A9194CF57A121198730F
905C375C4EF47EE58B184B9A904E86E7CB8AABAD8B0BE3E2CA9FC383FEC857229086FCE9FC8
0DF3D8923D73E57CB6AC07090E6A5D7FFA946173820FAC582A7825507971A7F6ED20D699E60
18609C820E7CCEE74030EA6F2CC18A8A6ADD2DEF4F4662182869ED30B6BDD3ECB18BA06F4F0
F8BCE52CB47720CE44412B9845099AE997B0C143E99905C2687BA554891C397431A108D11B1
4588CE3047496A4AA348EC5FD50784834F08C2086D32A8BAE96F4224E899616F06EF9549C7F
8132CF14858CF75CBE9E74A71D8C059AB72546AB994DB150B63D28C8836A8C95F027876E898
43C7AFB5591FFF17BA8848CD0EAEA69330BD656CBC50473E48901E37E14E2946B4035B64DB8
21B55F0B5FD67E8AA2A11B47563E3D2534DDC48C17F409F255E191B1D14B3BC40E160D8918E
3C3F2ED1A4F2694C29743BD752AF62A0217D61B2A8F47A1A5866B0CE0B37DF953CCD8E45F13
3A0EAE67564CED0EDF37C7196B328ACDFA57A12BECA41230700127240AB9DD2889E0AAD6839
15141F69691BD26520D920D209128235F5ADF46D69D91E68ADFB59E9C5E663318CB944F5DBC
72C0D1CFAC24EF6BBD6E1413B61BE5DC63E6E1A272D41775514E696C378D0DF44B2FFF614D5
815DB6BE88E3D72D03D0D4385B5D77CB2EA15E02AEEDE9F691CB7C4493842225B82FD861681
9CBEF7CEACEB81DDCB43D834DDAF412061572824635F11FB88961F57F3AC7238496E72FCAB1
ED491FFE4502A6CCE3CBF2ABBEB4E95DF4DAE51B24C88BB035D429E1E5294D43F3214AE24A8
EDEC584B386CB194D73F13031679BE34BF725FA81FEE1AE74C7A0D76BE30C7D402460016433
85301972C1133D1BE738699EA749E7A6ED234744CA3360F14B36BF274F9C82320F8F1B243FE
3251B6EA4F39C5972E88A856459013A30254B618D0E3A1D928D58A47DD6109D4F2E02F137F8
E9A8BF1D5B2B4A4A71AFA6A107313B46761163D906E3D028C712E9EAB78E426F55A2A6059D0
33513637DE031679BE34BF725F5122FE81EE3AB57098D7FB9F3D42710E11B1828FB916E8E26
711A4DFFF0BB1852E88A856459013A30CA26612E6DE265156E3FE592EBF073F17DA8CFF538D
6BEAFE8EDA7E3C4491AF003F4475A0CE9162A266A237B8D9D751CCFAF97AA4DBA011A2E7ED1
E124B2590E67E95E2887F9CD243F8B0D4C8981494BF2E7B9B4A2F52F25F1CABF7DE661ED031
6ECE13A07DD73AFCFD2F0604BD2097D0063462A59952493C1E072A47BFD0B4513F590C038A3
FAD6CBF52EF96C1BFBE192D4E0CB947CABE97B2ABB450733900857AE202965CF98E34642421
E3C4FCEAC161C30533FD897EBCF4D3802DB2BFAE3915F614BFB3E9ED7E60F629AF76736A727
EC9C297949A16CBD2BF52E11B4F6C7F2C241B96F1968A5FA05330CA574BCB06332F1E571BB4
770701E493D6E8041220FC2F1C8C834E26EEB2BAC3390116BB3A61B390B1012390471FE4F97
A0D1E2A214D16496F17F6C0310470FAA221BA8F8D896C456B63CFD57EEA4494D59F9AC731E9
05AA8226993005B43CA4BE301A0E504FB33BD3A3B2922B2FDE9C61B2652DABC787B45CFEFB7
FC161C30533FD897EBCF4D3802DB2BFAE5DCF0364C4A540DD25ADA19FB08ED9E20AC3255CBA
CC69A201659C85ABB9777E83915141F69691BD26520D920D2091286F6C5E297CFC82A92A2E6
67363FE9442D0D748EE980346027FC410FB87251AB1B709806698F6FEE641395DD70A95B73D
6DD44F0A1D93B54140DDBBF9C65CAD09F80992C18363A21FE68F12EB8D9BC4E3D21042D15AB
58ADFA469C4A2271BDF32158F29C0AB4185F386DBE93BF0E4F8BAADF7D7597E42FF8492A1B9
3E49206B6721FD2D80E4EFB53B5CFFC52B579B75C9541981F5868B0A4CF37217054822C60EC
C3FA51FFB1A538F81A1A562967314641EC0012A1E7D16782A61FCB255525C2F3754A55E3C55
CE3C07C2038D1A1F63C69864D708B9C07A9471DCF8C851E3761E74583914073A70400ED0346
57825A21258CC3F390F3FA41350D80C366D29DDB91F30446C506BE5A5E2F9B0CC0B34A6FBCC
3FA51FFB1A538F2D7AA434E5364E10C9021AD7EDAE1CE558484399CB76C08C85F69E9EF2941
BE924F8AD976DDF1B636F31103B63051DB81EED306AEE2D6211226F8E38DC18BA532812C48A
2AE9163346AB994DB150B63D28C8836A8C95F027D8E0983A6D39096F1E2203E0F4537FF34AA
A9BD75D5856832FFF614D5815DB6BE88E3D72D03D0D4385B5D77CB2EA15E02AEEDE9F691CB7
C4C3A843EA97B4EBCDD30AF23C700A8AEFDA10BCB6F65E40B63CBF2ABBEB4E95DF6CBF52EF9
6C1BFBEE55B392E107EAC1645D7DAAEB6A51C1DBFAC267DCA9566332E88A856459013A3CBEC
5A719825520222843BABC605B25E3DD77CE549C001E00F721F8812619B6E8E471A0CB3D2182
CF99AE7298ECB513C40B3427641CE8B6FE7B34694309A8ECD2A1C6E30DCBFFF638FE34CA1B8
DAA43BC304A03CA4141FE889F8B0397492BDBCBB8F579DEB35BF5DBDF6A690086F1B7D89F5B
6B9B7C1ADAF9B000447771DAAE49D1A04EE9752D4ED95A8B9CEFB97988CB50A5A3F4A02CBF6
CB08F3AB20A51ACC0DC81F0D82F5D9121D3F942033A420BA6E162B7A92099D01019B99C464F
F0BC67C4660CF90E946953B3D00FF403BB39371529CCDAD87BBAFF2DD3E86E1A7DEE6973D08
CAE4721F961A9772767B0E5FD0DE3377B6008BD416A288B58E319563E5351EA9BC46DCA6619
3BBAA64E633BAA5F09B52490983E690878D430D7073E884576F681FCF7CE41CE66A16BD6A04
D347A9D7AC437999C98CDB76B3BBB7EEEE84480CC72F4E081D79888109C0771948C097487A3
15204FC02272C2E201EF3EC0A0E3FC976E5C55EF3866E24DDE412A669F05D2A569AC40AE7AF
9F42A21A0B6531B42415F040BD96A85690047B2C9BD622E8DDCBFF666B10C6878FDDBA0DB4F
2E965BB7F4477773CE3FA941C6293485C1A7B98EE50A5C7874AF5C235A98FB3C50743BD752A
F62A02172F62327A81B7695B0813F97B7A5A930B35701B64D490947E0D8CFDE8A2193B3B293
A97F30D86263232EA7AF892D770113DEE1B647413A94DDDB3C85D76BE342AC8AC1FC492A7A4
C06C35DABCC2FC6D9B04181426A72749417C743C6B5A3E3CBCED42D5CCEC504A5598799B7EB
736109AA33D602835C117CE7D51F75AEA92F8222A2D203464927755DB76B3BBB7EEEE84867B
BE9DD0BB24DEBBC52A919DFF3241D403E92D581EE9E8A3F4FA350D12BC5EF2811232606289F
44484AF5399AC2215EF1EA133E9D303B7FC3CC5D71E055761B05357C05ADEE836BB9EF6F79F
0FB2DC08561F4FD8813918E793C77C808DF5E5CBAB250990570571AFDF078D543562EE918A2
5ED64B4580D29E70B42A2E5594D4BD6F7870E43B1013214AE24A8EDEC587BB3E59D27B76552
12106F1544606371D9F890EA27E06DB100FA09944160D99853F326AB7FEF2CAC03C2923065E
763C499F87061BEC80DA691FFF17BA8848CD060D15024AE6A163A1C1D1D5850C61C74E08D64
1ABA49DFB2DB3342B6582CBDEC601B6E340780FC582E1D8AB945DE356846409E1571E2D56B0
CDC81B840559A90B709806698F6FEE641395DD70A95B73D6DD44F0A1D93B541F6B79EC8ECF5
0E08292207CAC9A03661A266A237B8D9D751CCFAF97AA4DBA011FB4AD874F11E25F7A9F468E
A371F306CA30F355D100A72E3D81596AE42126E5D067AFB9DC5B85735CB887BDB056B8FD811
5748008B33944AF33B371F42E8C65D82CD99EBD3D0C1127238496E72FCAB1E633657ADDB84A
2A34AFD9472500E2C6CB6D93642CC0A005E508FC7356788869716819CBEF7CEACEB9257D9C0
D9BC52C917671608821B1C711FE9FDD7DDE32691B7A095AC848F89576A2316D3891FFC182FB
AEF80122F307B9DBEBC20E63999FE6A68EB05C82F750744B09DC4132D824D6DD44F0A1D93B5
41D3DFC5CDACE62EB38EFBFAE80A22DCBF7C3CCB80C641E9279507697F72070DAC00ED7F7D1
ACF3C53CB2906946545C79B4B22944B2AB8465AA982C8FB674F32EC954FCB4BA7664BF15026
1864AFD27C8D8ED7B0C28804EE851ABB6C5C950E4844885C1A1D6B4F499E37B0B562A3EA3A5
0D9179E68A4677EB9CC04B3F0CD5332E0847199682CD5B8A7AC3F5756A3EF524B90ED7FF735
4CEF58A2A5541153EFE218B512F8AE3D8E684FCD9B136A2B3DEDA456FCFD2CE0EBECA2E7EDF
478261977C872AA3845C323F67CA23BFAF5A8886B86CBBD2D74B9DC04F08A4C2DA174D16E9E
C17524B45CFEA8EACD7FBF3294729C211F25C206DECE7B676AE5EC750BDB3843CC817804EC6
4D613D97745D1ADFE12FA4F6D3CD47EC995150609092E2808A23E832EBD86775B189128D159
B843CE6DEBA01EC2B02B81E6B583B7D15F75A91C4DF47265EFA026776632D5F9DFBF9220633
774D7F29F07855E687B76179B77A4F4D0C78FDED9EFEFB58D2F24932DF5A27E62C81F6B2CF3
A87B0A99EA12E61D4FD6B106355FAC6A677F369CE877B8F70DA96D1D2B2260DC4C7B1382662
74BD0F8033C9F2254B29948B7866E24DDE412A6698188E98C981C96C89CA000AC8894C9D42E
4A775239F2F295DE04C7072BA39F632E63A4BEF0E1DC299526C95537DB7924408CE7EF5B738
ABB01DAB6E0ED8CF79A4FD2CE5ED564B99B2659C7E0995CD8F23E1998E3A477EB31824A28E4
47328E762EE90509E71251528D896C456B63CFD569213644DF7B0C6EA869D482B87617D9966
02B4F2F5DCBA6148FBF11F3BD9E004D8C2AC658903F4E699F16CA96D7CB4DE64918080ACAD1
56BCF4D3802DB2BFAE11A44E290400C9BE90F7AFCB2B35304C90ED7FF7354CEF585CFFC52B5
79B75C9541981F5868B0A4C415ABCBB30123A62A63DA05248C83BD36647508532FF547F9DAF
A67C3344C0B244E23A2B156EEEA78323D8A9DB50C31A9D96B25F3D825DC7F667A423DA71AC5
2D403E92D581EE9E8F83E6157A6D54502A39B0C5430AFD87C8C5F26E603C39ACE2A2D203464
927755C150AC219BBFBE43FD18528585E8ED556059D033513637DE09F0C29F7AC89E74A0D61
8FE2F73B0784C04252D627685C5BC89FA21E86906DF4835821EB897E504665F1313516B9A9D
C61D6593C76C995961F8420D670C8E8C1C16F0ACD52FE90CFC3CC5D71E055761B05357C05AD
EE83669AB3142D83F890F8EC31204C6DB543145E904B80773B66BBC5F3CDBC6017DA49898A2
E572E91EBFA295F8EA8AF0F933659FFA673EED3B3C42274E0897792B6552E9F79781A5F761E
5E17A56BBEAFBF68396FCDE6BAAF775351524761C483CCD9FA7CEFA758BBE83FAC5B0A4D21F
112E210044078AE4F003B8B7E16DDAE82BE7EE7C69D894BA6F3875A3B19EE05FE3730486BC2
7BE4F76E1FCE328F4F6DF8D1692A343B09B84C9C2135952E98F28C037C564A0BE6450DBFC4E
FAB1CA72282FCD287B27AA0F3849D6DA974695531F7CAF4C598D6FB9A61E99CE68129618C53
52CBCF4D3802DB2BFAEC509E486EB5641A6FD00AE512DB4F8559BEA921EBAB364D8F195170E
237EA0EAB0CF0CAD625C6C2C6B74F1E3CBAEB33DCBB1CE4AAF2A8AA1A492E15D7DA45793BAA
A290A801FA24B5190EA34993F36045575AFC6DE1CCBFEB77AC4335657A98E475B407D2D64D6
17ED3DA2D58C2ED45C2E63A4BEF0E1DC2938E7254A2E259A54B9C5198AB12C85A78D03B4A1E
7C0B1C7687B76179B77A4F423A8C7FC050DACBF085AF8E311C4CD648A84054D549D0C576932
C955B687D948E11EF43D0447A3033A61B679BBF2D223BADD39AA7F6BFD12329F5817D2F7613
E8003DFD3ED9F0EA6EC2972A7E14BC9B32BB28B35E495607227059B32C0DD81A319AB098160
A5E462E9AD1EAEDEE119F8C4FB3245EF26348543CA31DF3574DEDD47F7AD1182D4822B148FB
F11F3BD9E004D8C2AC658903F4EA28FAF1882E118CF3886D3EF8B269DD189C65048F09FFD0B
79C78CE5AE95A1701910F9788B04CDE00DF5A862E55F306C32AD70FC85FCD4E9AD4C810DD23
AC054F499574398E0C9975D1030D0113C51FFCF3A219DC98E4538B44EB62116DFEDED7697F8
2911161AB84E78C0764C4BB7D60D2E595C95FB0ED4423562E62A37739294AB96728900E17B8
6891FEF5EA003D2D262353DC74781F9638A65C4B2EF7B8A3774D7F29F07855E687B76179B77
A4F4D0C78FDED9EFEFB5D72E7133DDE7EAB1FB0067952E43BBA658CA7FF4F155419A691767E
51B7B8AF3F795DF9B81CDB03250ED264F4D7309A2A2A5541153EFE218A25ECC248629030E34
1763A2CC544D89BADD39AA7F6BFD12C034BC5993C3C6E492C6A39790B5387465E696D6E104A
1C43F9CA658B1A5678F88D87297E5525D25BC8EA6AFD9FC2541751C4244363623F859F67695
076127EA782A90D02FFC2AFAEFA81246BC882CC04B2AC02FB61FD914D16ACC3561C5307A5C8
7A1BD8AE2EF05E64CD49032DE9C04FE56100F8E1548C2A49514FCA241989750F36A6E3EB13F
6F38E0C44102E88AB56451FFD7E74350258B2748991DA752FDE8B2DD9E9248EFD30B1B8E07C
7BE68925D789EC56EF49721FCF58D394CBD8C15B1408FD90A18B062316FB1C1EC2AD486880B
1C40F9EF968F806E5AB0400F30AA4263957982112F51144A9D4943D3CEADDF171499AE91164
6732DA078D7C01DF98F78EDD7CE27A0AB51B8C894B2E893BDD1D3C62C88C61FE63AD8204FE3
E9264AB47F03585FECEB486679CCAFAF15A12D2BF45724C781986AFCF58D394CBD8C1519EEA
6863313EA7ED6FAAC92A3AC697D1B9213E89DCF68856900E3BEC97528417715097F4F8B6669
248062159E5B29C63CFA1C4F4D360F12A880370FCE91A0156D629B0DBDA63154D1D3C62C88C
61FE63AD8204FE3E9264AB47F03585FECEB488E312A4F7652AB3ADA0BF8E210ACCF994AA5B8
B1E71DBECF881C55E78DF316EBC02B2AA9898C2BB98F8FC73AD8681822990AAB3FE403424B7
353A947D628CBB84E003EC283A33025B9C5198AB12C85A7A819EC1CA3854A58C774699DED92
CB454835821EB897E504665F1313516B9A9D46BA8AB2676652A08EC31204C6DB543145E904B
80773B66BBC5F3CDBC6017DA44BAB4C0980C8664065458A6FADA078625D1617EC8D352CBF88
587A6D9686D23D10C6D0DB5FA66988973CE6CDC70287870E733D5B7765AC1B7825219F33B2E
C7887D1083F8348E7E1
-----END ENCRYPTED SCRIPT-----
}//nuclei_detection_A10x_inner()

// ------------------------------------------------------------------------
proc nuclei_detection_A10x(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
//OUTPUT
objectlist Nuclei out "Output object list with detected nuclei"
) [hidden] object recognition, nuclei detection "Nuclei detection procedure. Detects nuclei on the input image."
{
	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei. The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")
	
	// Inner-technical nuclei detection procedure
	nuclei_detection_A10x_inner(reference, ThresholdAdjustment, MinimumNuclearArea, IndividualThresholdAdjustment, MinimumNucleiDistance) 
			
	ErrorReceiverForNucleiDetectionLibrary_v1()
	if(ShowIllustrations)
		imageview(item=InitialMask.border.mask, label="InitialMask", title="Mask after the initial thresholding. Adjust par. \"Threshold Adjustment\"", image=reference, gamma=2.6)	
	end() 		
	// Removes breaking lines between the stuck nuclei, 
	// Input parameter is fixed
	//input(BRControl,0.8,"BRControl: Nuclei Detection","d")
	controlbreakinglines_v12(nuclei, 0.8)
	
	// Adds to object list a contrast attribute
	object_contrast_general(cells_out, reference, InitialMask=InitialMask.body.mask) 
	
	// Creates the illustration "LowContrastObjects"
	if(ShowIllustrations) 
		set(CL_Temp=objects)
		objectfilter(contrast<=MinimumNuclearContrast)
		imageview(item=objects.border, label="LowContrastObjects", title="Discarded low contrast objects. Adjust par. \"Minimum Nuclear Contrast\"", image=reference, gamma=2.6)
		set(objects=CL_Temp)
	end()
	objectfilter(contrast>MinimumNuclearContrast)

	if(ShowIllustrations)
		imageview(item=objects.border, label="Nuclei", title="Detected nuclei. Adjust par. \"Individual Threshold Adjustment\"", image=reference, gamma=2.6)
	end()
	calcarea()
	calcintensity(image=reference)
	set(nuclei=objects)
} //nuclei_detection_A10x


proc split_stuck_objects10x(
image signal in "Image with intensity information",
objectlist objects inout "Input and output object list. Output object list involves the split up objects",
double RangeOfMaximums=7.0 in "Definition for maximums. Point is discarded as object center if within a disk with radius RangeOfMaximums it has the highest pixel  value.",
double SmoothingDiskRadius=4.0 in "Radius for smoothing disk",
int minarea=30 in "Minimum allowed area for split up objects. Objects with area less than minarea are merged to neighbour object/objects. If there are no neighbour object with area less  than minarea is discarded." ,
image maximums out
)[hidden] "Splits up the stuck objects."
{
	-----BEGIN ENCRYPTED SCRIPT-----
9F28A91BC10955D20AEFCFF6008DBEAC252CDE3F5381506CA537C40EC97C8E00EEF52A1B794
8BD63F837C49A9BBB24BB454C2EA112013782F00C2D7D822C8BFCF6DF5E93A0E79324FCFB56
A946A547EE7B583DE5A2B003F6E0E6936A8CAC36B6E2AC3F4D83CC62CC332644AEC97EA78A1
5443A775E85818E6329B4856C35E56E:8C75D031634EE488A0E6FFB96C5352C07814C069F64
4C352C7521DC99986EEAAE884894A9B21A14EE22D84CE2E5A3FD0011F592073EB4944676F84
379199A84611C2C752E69BFFB27A65B1D6952E73B815C15998FD63EAFBF561E7266E7B81129
CEDAEC3A688A6E4D1A37F9B17D31B12DA8847C19D0DF6570ED997EA2DABDE1F/863A0243308
7845ED74A756D7A3B2DBF6CF5C7D34076493608317E20A408F464080577CEE80B95B9DDD0BC
96C9DB536EE7788818F350990D5B456D82A247E31792FD5ABA860DBC78EA34764607FC648D7
1FCDB16432B329B4D4D850B96EAF18B91B7DEC9AA955405ACAA98B81A406CE9AEC7B5970889
D7642A9524480A529B03E0DAFD411B9E12D0F7FFB9BCEBA9234D4B2467F5B60E4DBE3B4E4C2
84F2FE10B7B74BB7F389FA44E3D897301E339F8B75C32D8EFB446D5FDF64583DC26B854A88E
C7E6C5D7070D613AAC72F7860103BE4DB8AA770A2E2973FEB07E547E535D678DA7332F875EA
3B5E382E8D5F098F386FE83B3C6459113F24B2467F5B60E4DBE4B28C0A5791F36AE93F4FF78
3210428359DD363EE1A7E4B16EA04377AC9E398DC1E7C1CE1385D65459C048CDB0C6FC394D8
DD5BBF4C354D4E09E7DB9F230660F8F7DE87B64A2E9EB6CBF964C4442B892419E14310AE926
F881C15DDAEB8BC91D7F6BB72575497F49838F0452D54B73E7E836D7C80D7754094C388B5D6
BD5F0A901AE1EB8E7EA490EE0F830D804386994F4F78EF831ADCB3817B5B51F60619B29305F
E74A61A8C1117D9E794FDE9E1E845D27C9AAB806B961662B8C8C97EE3F55986232737B0F453
46D959A55F138B411001717AD943C01B5A027D7AAC0F196362EEDEC5E68FE74DD192D123BE6
F6D2E1D9517BFB256C9EECAECF3354E2A1F9BEF0E51984CCB6120BB0557CD3290AD3429C631
7816A7B53FD5E1DA28C6CC9723222766DDE9AF927FFA1D45A625618CDE877237A7A96EAD798
5A9D2011678B7370BA968ABF8B8F6E3876912CA6F7B6FCD0761F4F0EE35FCB64FBD7665ABB0
560E6F74310014A1AE7DDF9773BBE80B7F8F472C0FA48AACA167531C4FBC8E414EC55A91995
24F71EAC079E01FE54C785B21198250538E710B382173AC337B497E86E5C34B227FB53BD8CF
2F5E897187BA99C
-----END ENCRYPTED SCRIPT-----
}//split_stuck_objects


// ------------------------------------------------------------------------
// Nuclei detection inner-technical procedure. 
// Detects nuclei on the input image. Called from nuclei_detection_C()

proc nuclei_detection_C10x_inner(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
double ThresholdAdjustment=1.5 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0. Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
int MinimumNuclearArea=70 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
double IndividualThresholdAdjustment=0.4 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei.",
double MinimumNucleiDistance=7.0 in "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.]",
double NuclearSplittingAdjustment=7.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
double SmoothingDiskRadius=4.0 in "Radius for smoothing disk. Nuclei centers are detected on the image smoothed with this disk. In case of small values InitialMask is split to larger number of separate objects and vice-versa.  Adjust by illustration Nuclei.",
//OUTPUT
objectlist nuclei out "Output object list with detected nuclei.",
objectlist InitialMask out "object list after the initial threshoding." ,
mask DarkerMask out "Mask of points, which are darker than the surrounding. The mask has better resolution and the higher noise level with the smaller values of NuclearSplittingAdjustment and vice-versa the lower resolution and lower noise level with the larger values of the parameter.",
vector ErrorInfo out "A container with a possible Error Message. If no errors occur, the ErrorInfo.ErrorCode will be zero."
)object recognition, Nuclei detection [hidden] "Nuclei detection inner-technical procedure. Detects nuclei on the input image."
{	
-----BEGIN ENCRYPTED SCRIPT-----
13E59F10249D9840ED3957A43299B59B40A2F6BA3B409D9ED2F1396B4CCE8163D83A9E9AE58
544594FFD2A54B2DE1DF26578F25AAF9B5BD3C6C9798C6DF09C6E1C1970BAFB7F0A951B0201
A66E698710556CBCE29AB8E3AE30AA0C3039BF5B2017B333D3B4C56AC573A471C52198B8F0F
5E450F90A6B4CF1B259B026B089E300:8B1B7CAC3CB531D2E454E2F896EAB42DAA4F83358F2
959957C7DE96ED87BEB994ECA42C3BE3523C0FB7D3AF24D30582157C3C29C7DAD41700F454F
F8AA74F8B709226888E280E5C723750884AE351FDF67A91310C68C116668C17919828B477BA
7A716F905A670103C31BE1147C1E850DFAAA51859C2DF64CBF8D17892C28261/1B29A3839FE
BE628FC278ED878D4BD78ADB5091B391E5A3B693B400A7977CAE93A5E1D13B035DA6459C743
7ADAD992FC48FEDCC8E13FA67E2499779C70A77FA081146FDCDF4A840EBD8485403891DC42B
48B3052A7C27F591DA4CC62E33B6985788FB1D13011E1F6281B3845C72883D9BC02B439D834
BA12E9BE2D1F4BA7A01A69E1F1AB0EC5635A0E2AD9C581EC46D50468BC98BA162412603F0D1
0B8851A235DE210BEE718944C97FB75D9E7B281FFBDF2EC242487B3159E2A0359F8BBB5CFBA
5099519E8EB6B2E9BE2D1F4BA7A01AE4E3D02F0C278000C076EFB0EBDC459054B4FCA9FED59
1ED0BA90BD21670F2FA1BEDD13335B8098C018AD520E66D11A0459E765B80DA0DE63E0276A7
37AC8FC15E7B93F83405721E944CC7E8FD16952DFF491D79F6D40218905CC75739EE956E7BE
4C5DE773A0183154B83C7FFBF2FACAB8C2749B2433186EFA7036991B24F7BC329EEBF63174B
378F45CA57CAEFA92E136E05C01AC14D225FFBDD23FD69712730D63C83ED4D709E0EE0585F2
7B584EEBEE99F1A9402A32A5122356E97CD1F63DD18AEC764B29C27CEAF6308F56A6D223466
0D9431F4B7537B938A33CECAFBF0FDA286383E4A4A747BCB7E3B938D5357BDF2EC242487B31
57C01CF9DEA14178BAAF3C3D9D0C84E4EC31109830AEBB181E8333164E629FFB3AC344E9A58
F7949371A8A17627D7E412918DCD234474EB711FAD1C9CE7FFE2BB0D6D34F9EC4387936134C
773B9BB57BF3AAE4A1312EDCF8BC48053EAC89272C7F67D71ED5B8EDF94C091B8FE98749712
B45ED4A7230589D1D858CA25EDDD99668C5B55055CFC3D5D7928F82D50DA143CE12ECD3AE39
5C6DBA04492E78DDED51EC99D4B148272A966BF50C281B2180DB9860E637B9123E150974DBF
F261B186827A444ED267909136C5DCA87AFBB388D1A112693F5CF2651BE9BE2D1F4BA7A01AD
07AAEE34FB7D58B9291775D3261AE221F45F71C15329DDB12717F49BD4E23C17B024D513A91
B17CF8C9F8A2B08D87E5FE190B3067A926EF299B38950F7B1901E109FC61164C98566AE90E8
66B5E39FF006265155CB11CA3255592D69FAF0A93DE2E3A394ADD9BB4A901D48EFE17E2BA30
D2D82927976AFDFC010CB650B154B911C7982E5F1FFCE5D290BEB5A3AD6A9F9CEE45A5E70A7
4032193DBDF67F42F04C31109830AEBB181E8333164E629FFB397896CA9129CCC7D12717F49
BD4E23C17C255E938AB340D6FE416B2B8F1EA9AC143E7FFC4BC4D92AC30FBE6C2EEAE561DA2
F7A60DDCED926AE915913090B056BD8D90A61E7304EF917970946A5C08E9898E6D1A3FE1AF2
E21EC1AB49A62F8324B016379021EDB34802472A4D2998B9F4F02F37C76931682255FE5D64A
D572420528BBB777A0D28A09FC66666D3A8ED84C4C2482165B135ED1E96AEF1DDC93E1FE055
799254BD388E6BEEC3DA6A0014FA3B02EDF45F94E4D2A04B2B81F6DF4E53BD9482108DC8EF7
C71A8A17627D7E412918DCD234474EB711FAD1C9CE7FFE2BBDF82CBD2CC92B8F36134C773B9
BB57BF3AAE4A1312EDCF8BC48053EAC89272C7F67D71ED5B8EDF94C091B8FE9874971244535
2A2BA3D8EBD06CCE648D540E31D2E8E42B4FF276424ADA670C05AE14259F7263C9D3DF3D28D
79FAB42E56C0E0747AB0745D43DF4CD0A61A8DCFB76EB5696340A98B82FA764C57E5DC4B96A
3A4A9C4FAE83EF3DF74FAA30ADF7D78B4E45DC7AE7882A5B1FCCA4911BE5A14C82B7C0D6D34
F9EC4387936134C773B9BB57BFACA45F2537C37135026B9DDD79AA291B1BF3E7B7C708DC3FB
DF2EC242487B31526C555A9CEC3F2F575521606CB0F8CBC4CDEA3FC0444B9D0AF021800EE74
736FE0959AFC200A04A16BF1D76BB82E76860CE94F103A7D0E79A63CA05268E6B850B74E4C2
A79A437A7D93729198530263C7725D375C15E2B2A727B9AB31DCDD2DFFC010CB650B154B911
C7982E5F1FFCE5067D8E7B46A4276D4D320E283BC97D2996D13FFA62666BB29D76F134F9DB0
11697896CA9129CCC7D12717F49BD4E23C17C255E938AB340D6D5D918C2356A5C97143E7FFC
4BC4D92AC30FBE6C2EEAE561DA2F7A60DDCED926AE915913090B056BD8D90A61E7304EF9179
70946A5C08E98D498CEB82C4639FA96D13FFA62666BB29D76F134F9DB0116095849D74CF168
99D8F65D4655352102ADC34872CA05077FDFA333ABA8AFCCADC93039690AED0FF22204D434A
56CD874441253B40A65227E4C6B8B367DC88089EB963B157726B2FA54628815B4DBE6AB85E0
FA266092ED8264ABF7625A7697758F73F55FC38C6224AE44167FB793BC626E727B1DFDC1CB4
FA30ADF7D78B4E45DC7AE7882A5B1FCCA58F044044FB2D5515ECB28F82BD673422B8D98FA6B
C1A1005C7E05328BBEC1751931EDBC7B48BD3C134B60D83962A196BEC659491E0A4477CAC87
953FA67BF5485B8953B2E7081E171A8A17627D7E412B13C6151C7D2067699927EFB048C9B30
EB26F03E5462346169747BB4C4CCE52ED57339E18F347987F54D7C2157A0EF974D6F352944E
CF97A5A1BED6A7A5361CD8AB723CBCFD1FF0984603C98EB247A9FE811865DC367011A8676C3
886231FE76894C3442CEA0D01628A628474C8E293C7793F6CCB2DB13D196794FB2CC2C0E708
486863B32372EE872740CA2A82CFE75A23CF467CC8ADAC19DE226652288971E19047702D431
4CDF91260D4E4E0DE9B50BBC50AC59AB252FB4006E72F9DDD21CD2E38E03DBB601EA87AABB1
E85BF0280AB20D1E6A87E30E91094BC7C9D6F8B6FAC7FD400DF5BA514635E2C99E0C0789556
59489A31E8BB43173AF02EC60C49E1A216D7CE21B6502A4CDEA3FC0444B9D0AF021800EE747
36F5862C9064DE63A73131AF0420E3E7ACCB4AF90FFC0B9C4494B5C89AE901CFD98BF50C281
B2180DB9860E637B9123E1505A440CE96A27D4D50BDA62CD28FE839394A4E3268A4E986D6AE
90E866B5E39FF006265155CB11CA39211AD48BB7A55CF0A6C9C4F37C8286DC6998C8407544D
735FC33C7D8F93117F69A8E3236AF214523C086E32BC586704838A131E36D175714F01735A0
AADB7D8D8FD5F47EFBA5F4C18B38D840C6B052A53CFC1C25F6CD195BC6DA29CC45361239ABC
508A90CC6F6C4A76BEA688F836F658332305965CED5D97FB75D9E7B281FF60D1053C32D5F8B
2BD569197ED983EFE08F2BDD18C16000BB62FB0B6714C44DF7B35AC214B1B2990A8896BBCD3
679C44F0420F84A544633CC26EA4FA20DF549B1AD758E1FB7E6C3C8FA7241B774D226E3F8CB
589A8523DE0AE1A53E0051659F72CF453A1E613A2EAC0685E585826B33A5B1BB0FEFB914A7F
ADC64EA3198ACCE2E86222153F5269785B991CD8173341A921C970CA4DC250FEED6A1D73F74
6AF3103B078AC4F83A46E8B454CF047491F2FC3B91CBBB8F6B11DAD220C4371A613F885B757
7460731D6115EC1D290EBA5E5D876761B5E0230407B57C4B3CFA99B7FEC1DC109F4AE53076C
D894283C74A088A12090892B2012791B63D62217D4E9B6DAE111942B19F655626D7DF967CDD
6A8C8B5C6557D9693E950AEF972F668375DAB54274C303C44CAA1407367C311762F645BDBFE
0A632FA5FD9EB545EB81FD0192A3EE169F00FE9CCB5347E265A848F67B162EF8F53CD3CBDD8
58CA25EDDD99668C5B55055CFC3D5D568C07543860C1FCD1FEE8F8EBD12CC48D076C30CB1D0
2357BD22851662A161180B54CF91D7EC8DD1AE984546C3D863CBB6642BA4A5C0CF4A1581B79
47A92FAE32B071329DDFB4CD488E8A790CCB8D50F0EB204143BF63C9A7302CB447F703CD5AC
C861DD81887BC422E4D74D84E1B60CF0B6696FC7698F2F8516F64F2B2B4188CA2C39FC2FDFD
8C591F70032EE9F2DEA76E13BDA25927AB0F5BD52A2E24DC24594A5CD3F2A8A2768BFDCBF67
F9E75468D3CEEAE70CFA378B5B526AA7F96E9E78B291684E69F63C88B6DA3BB460F30004275
04291222A8E94B2884A4660612AC4E31ED2E73DC19C67A56969743A3072EDE2FCF4CFE7BBFE
78E6C136A029BA508681A147D8A34574AF07067E67579C0FFF77602ED952290D80245DF0030
ACC228EDDAA265B9D93ED6FB43B2E4A6D739EFB9439298DD70CC8607129EC5C74127F2C20ED
2D18B911203A60E403F0D156AD53B02EDF45F94E4D2A04B2B81F6DF4E5333CD784695BD709F
68E8B2E48B832CD3866EED9611B03BBC4532D11F89758A0ECB77C973C5F02166E9AD2F82A03
7864F8CA2C39FC2FDFD8C97FB75D9E7B281FFEFA7036991B24F7B816833F57ED5D68333C5C8
E6C768F6B06BE1209EE55FF56C65D258FF5041A023FCEBC761E6623BA7F1908EBC387240934
508CC2DFC8D3D300A36BB5A8EECF279C767A01D1EF647DC50DB7BEE24D389F060454DD21E2D
82B4D749A33043DEC61A68C3BD9031A715DF27B73916CD95BB20D90FDA92C9546EDBE662ECD
396C208BACC9BE96DAE79E354154BD49A79EF8D21731A2B4B2329434D745B6833913D3D9632
0CC0463A99CEBB3D52DFD46D4B51452138531C24606F26172B2E21865E9CFB2A0B12A62FA1C
FF36E5437162BF2F88B4DF2E36F42EE5B3D8C0485C384BEBAFA9E4C7BC1BE723DEA3B252BB5
7E4AA8E58565C5365C41245B1AD64392046360FEAC5224AF623E8795507386C5D04FF6D9EB9
975ED031FF61F9A942A6BCC7BBDB7080EE4FE2042BC14A8DADF8B09012EB2817A8E8295BFB4
409A91A08E56A8A5EE7A6D2327A50F62B9306F40819B7DB7EC869F466B0AB54DB71CB4CBC74
BEBB9D3EDBF4188FB130D75D95C3E7585A631C4DEB494CA9F237FDF373EADE0B042C02F4C07
5E1697B3A97285BDE1765121D9A096E0F539ABD79CD1D04699F8DD9E2A958EB775019FBEF75
E024A9B67E433E80E6B82ADE3C203059FD2DEFD7128B9760411F31303CC14E004DD61F9471F
5BE9CC61291839E4E953D7595D634FAC2AE6CF2BD37B0553A8E6D958D53F931A5D17A075FDE
C65404024EE51D9475CA6FBA9B9F80829BC2735C89E0EE72A14CE35CD21D8A4FB7E8B04E96A
4FA86B917EFB9AA044EC6A5F6FD9D1D2A7864432B36D2CFA6981EFA9784C0879DBA164F208D
143206C4C544EFB7DA7DDB6B59F594C8CDC136E1C51CDBA3196F1539F57780B34F2FC7289C0
2061A868C273D1C364EB91B6FD66BE34D64017521A00385BD1F64EA463D047F17AA2E5BF8C2
943F289271F6A12BC4E2B3F7A84BD4AE53900045F9D8688946CB88B9DB0A71B18FBDA09B9B4
CE2B492EC582882783E78B328724FC1BBCD8ECD1DF73EEA34A76F55E4750E85018DEFB526A3
C66204D30A7E31C22588FF8D1FED107DA0E53868A85DDF40463B5BFD5110854FDB4F2A893A3
F603AB25613C4CDE88FB91BF90E093003868ABE15735EA0A087F1AC5CD130AAE0EEA1E90351
439595D634FAC2AE6CF2BD37B0553A8E6D958D53F931A5D17A075FDEC65404024EE28999183
978F51866D0D181B04F763BD9E544352665339C7114CB684FE5847C19EE3E6B754EDA24C473
C0D6DE5B21CEC5C904A06460CE7987D8DDC9F99CCF0510A087F1AC5CD130A485725CD0805C8
EFBA1769438E51C59CC922BDBE050A2BFF581D6E28BE83B53E72B5F6BA269E9FEBB8FF4DC19
0D7E5DD45E6B271799683226A96402353F291E6CC1A445EB9FD5A528172061A1A052B85A553
89FE76AF4FDDCECC5A0CC39F3F5398659C275A155DBCA9220590A3648CDB9F42E60F2044086
0B126F826D37023107A05FC1024ED2261B75A736BC84B14BAD5169029A59A18543AC6718F36
65E0436CB4B5A55028240CB96B4726646BEE14D57339E18F3479876B0F4278E396BC4F4F9C1
1F33B2B660B8E09761EB367D9FCBDA060061320B4C9453315C04C48CCADA1E0B3A2363F4F3F
ADB03E86C040D83B922CD06EC6D711777EBDAED070612BDFC107BAA5065FF3A9373EADE0B04
2C02F4C075E1697B3A9728ED1B865DC79FF9C1EC1AB49A62F8324B016379021EDB34802472A
4D2998B9F4FE672112CA568E55143E7FFC4BC4D92AEF0F5AB5E9F66B7BD73FBD7070932B929
665AAF4B7C2AB7C59CAC29EC613D5707A360564385E55D3D290BEB5A3AD6A9F11FB40DB60B4
6BD5595AB3F422CA1BEA9107CE7D9D42BE734B41680599897AEC1EC1AB49A62F8324B016379
021EDB34802472A4D2998B9F48338A0EA175FB0F59CD3319734C19BE11DFE1F2E93256AE8BD
B155BDCF177CEE76DB2D63FBF15F053FBFDC730C071A759238DE2DDF48AD8A5EBF3273AC0FF
1CE7D0F62A1C4ECF5F6FDBE5AC9E5858DC5E9667F463F599D33B522855D8D0A70626519C950
42E32C89E2C0873E1E0F95D645943A226A41DD472A0D8C4F455EAE236A9E565B9879B6FD299
A45AA53F0B8C2
-----END ENCRYPTED SCRIPT-----
}//end of  nuclei_detection_C10x_inner()

// ------------------------------------------------------------------------
proc nuclei_detection_C10x(
//INPUT
image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
bool ShowIllustrations=YES in "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
//OUTPUT
objectlist Nuclei out "Output object list with detected nuclei"
) [hidden] object recognition, nuclei detection "Nuclei detection procedure. Detects nuclei on the input image."
{
	input(ThresholdAdjustment, 1.5, "Threshold Adjustment: Nuclei Detection","d", "Nuclei: Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNucleiDistance, 7.0, "Minimum Nuclei Distance: Nuclei Detection", "d", "Nuclei: Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei. The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment,7.0, "Nuclear Splitting Adjustment: Nuclei Detection", "d", "Nuclei: Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(IndividualThresholdAdjustment, 0.4,  "Individual Threshold Adjustment: Nuclei Detection", "d", "Nuclei: Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNuclearArea, 70, "Minimum Nuclear Area: Nuclei Detection","i", "Nuclei: Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(MinimumNuclearContrast, 0.1, "Minimum Nuclear Contrast: Nuclei Detection", "d", "Nuclei: Minimum allowed contrast for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastObjects and Nuclei.")
	
	// Fixed input
	set(SmoothingDiskRadius=4.0) 

	// Inner-technical nuclei detection procedure
	nuclei_detection_C10x_inner(reference, ThresholdAdjustment, MinimumNuclearArea, IndividualThresholdAdjustment, MinimumNucleiDistance) 

	ErrorReceiverForNucleiDetectionLibrary_v1()
	if(ShowIllustrations)
		imageview(item=InitialMask.border.mask, label="InitialMask", title="Mask after the initial thresholding. Adjust par. \"Threshold Adjustment\"", image=reference, gamma=2.6)
	end() 		
	// Removes breaking lines between the stuck nuclei, 
	// Input parameter is fixed
	controlbreakinglines_v12(nuclei, 0.8) 
	// Adds to object list a contrast attribute
	object_contrast_general(cells_out, reference, InitialMask=InitialMask.body.mask) 	
	// Creates the illustration "LowContrastObjects"
	if(ShowIllustrations) 
		set(CL_Temp=objects)
		objectfilter(contrast<=MinimumNuclearContrast)
		imageview(item=objects.border, label="LowContrastObjects", title="Discarded low contrast objects. Adjust par. \"Minimum Nuclear Contrast\"", 				image=reference, gamma=2.6)
		set(objects=CL_Temp)
	end()
	objectfilter(contrast>MinimumNuclearContrast)

	if(ShowIllustrations)
		imageview(item=objects.border, label="Nuclei", title="Detected nuclei. Adjust par. \"Individual Threshold Adjustment\"", image=reference, gamma=2.6)
	end()
	calcarea()
	calcintensity(image=reference)
	set(nuclei=objects)
}//nuclei_detection_C10x


///////////////////////////////////////// Nuclei detection inner-technical procedure. Detects nuclei on the input image. Called from nuclei_detection_I()
proc nuclei_detection_I10x_inner(
//INPUT
	image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
	double ThresholdAdjustment=2.0 in "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.",
	int MinimumNuclearArea=6 in "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.",
	double IndividualThresholdAdjustment=0.3 in "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei. ",
               double MinimumNucleiDistance=2.0 in "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.",
	double NuclearSplittingAdjustment=5.0 in "A tuning parameter for nuclei separation and splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split but also a noise level is higher . Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.",
//OUTPUT
	objectlist nuclei out "Output cell list with detected nuclei.",
	objectlist InitialMask out "Cell list after the initial threshoding." ,
	mask BrighterMask out "Mask of points, which are brighter than the surrounding. Mask has better resolution and the higher noise level with the smaller values of NuclearSplittingAdjustment and vice-versa the lower resolution and lower noise level with the larger values of the parameter.",
	vector ErrorInfo out "A container with a possible Error Message. If no errors occur, the ErrorInfo.ErrorCode will be zero."
	) [hidden] Nuclei detection, object recognition "Nuclei detection inner-technical procedure. Detects nuclei on the input image."
{
-----BEGIN ENCRYPTED SCRIPT-----
9F38E282D36160EF24A83C8C3C478BEDBBBDEB1F86D5F9CFE49563F26903213C2154493F36B
0A0EE1E84A49A1D10C861892A49F0974051CCC718487FB8F70B56382100514D381FCD96C242
7DF2E7A57EB7AC831419D32DE87D8428DF1BAE3266030142E4B7B626FC6840092CBC3EC79AB
1719C47139C36137B3EF127199D2CEC:48B725C054B0BD5059C913625B632E71B266FB2BA29
04D6910EC78EA4ABB79D4A6795E51923129C4ECF0AF909E30C1D8215379F445A22901BEDB25
1F451E7AD8B9326BF3EA93826156262F5690C1E46ED1DEFF7B5ADAE43EEA4879E46F67D3D58
38209999A254772398CDDF75B6FB7091CA376A881217B6D481D6AF713B550E4/88065857F7A
C0306F4375AD536543090B9B57F8B81FC290FBF322F14A5D4135A897BDAACB148D24591183C
41A68BAA3E3B7281215841F7DE0B6A15FBD3DC22BFC271C1F3EA0125744349389E1C2CA2804
987EDD2C1E844B3D30EF0F337B67297E886DEA1809D9118C11A54BD24174D127D87A0B473FD
348D9C927C5DE13555C17CEAE95E4E7C13CC8EAD3C18139A6A3D28A3D6C9212D7EF7DBE8F77
28B5B12570F6B129717B9A56E5DF004B127B1F678A5A4251841BE4D1B7F62B08296A04EBC20
17179B1392B0F49C927C5DE13555C1039B9BD9E2B0B2AD510FB1260A32D6D1C67AB1E982650
D0578A8D6092665DDFC92ED0D263EE7E6D0E4134E7FFE05173A17EFF335D6550090A64C033A
CCFA13C41D8E25FA08326082B81937CF43CE74004B94DA1062DDA64557440EC08FCA1EB1CA4
6B785A3B81BF87E7D74E58684600D84236E6FA6B1DA540B2AED0ABD9EAEBD094EA53E88C5DE
26F2CCA5672C710BF3E9F37A9F35B0412623280613B4041C4BD94729ACA58A3429E73DBFEB0
23700E978143C6FD6222396FAF49DE722E75D3B6C0BDAF9BF0025D7B77377048F3DC1916CF3
06DD0700C07F6911E9176DA0DA8ED30586FB01E61F0ABA1A61F32321AAC1A5A4251841BE4D1
B83240B20F9C902BAFD7BA8FBAC33BE13AECA99D8AB82E106C243CB1F8444959550A2102F57
213D5620DE6CBF60D56665D4E86ACD353A9857271B9C227820D8BEE4FC366BD5919378872CA
3E51866D070B82D26BEC26F7898FA2A7E05AEAD95F23903C4F34D064A8DA037115B9CB41AB9
4F1E22D40786B9C1581B619365475AC76FFD5331FC9F8A3B8D643A3190513BDC48919933690
6B56B493D679DC9E34D51216FFEA268E86406FCA190BFAAB5B915A97F9E28A7EDDF445D8C9E
D5BDE79558E4295C3540DE75B4ADD6967687984A8835977CC9550CEE039C927C5DE13555C19
2233793B67CF9915F4A107FC741C87589D12173F4BC89E1ACC7218029223BF2C6163A7B0BFB
120CCB9919974F280B9672D0EA1A60518480D600A309EF1A4ADE741C350653FB361A87845BF
F019CDA15AC18D144480E6A1E258C28EADE0BEF7C9761223D0E8BAFBF7FDB148817BE083D45
80396DF77F49700AA9E6FE74B8EB5CCB8899E24F3BE43880732D6B70F6F7152B4958FE0E08E
7E2F3643930DC209738AECA99D8AB82E106C243CB1F844495950765DD7E5F47CC7AACC72180
29223BF2DD5020F6DC7F1195C797B327AF549D3ED936D01E20778B117C8A9FE9C0437FCF7DD
389FFAA118F0DA4C39711AADA822585D112E32BE57CF88BCBD43028B212DD4A38ADF98D720C
1A9AA189B936138CF52F5817BAF750053E54B736784A62A40AE42AC445FE2A95F1A59870541
07655B904F52D30C68AEEF09D88669763D65525E1899F985C081C4B1C648CDAE839294A158F
BE74D71674910B88014BDEAA7813C5A73C0EBCDEF2F308C41FA1A3B5471E1E33939C25AD015
920DE6CBF60D56665D4E86ACD353A9857271B9C227820D8BE05716F3D150A10EB872CA3E518
66D070B82D26BEC26F7898FA2A7E05AEAD95F23903C4F34D064A8DA037115B9CB41AB938B9D
7228F710EF7BAB00DB6A872BB5CA1A60DF1DCE6E39C175BCE1F83E40C84C0A159151C907C88
E559BBDC491AA9E811ACD88AF77F19670072A0F7D62F4BC8FEAE0C7041EC1B8F48E038F1C08
C74DBD895EB7890127BC46E99601CA9BB354EEB9F23DBF872EAC5FFEE1819B6924FD8E4FC36
6BD5919378872CA3E51866D0704179890932B80BB106E0225E3745E0E9A434662FC2AD7FB5A
5A4251841BE4D1B9ADF0EC6986026DCE95D0B03FBA9E9F94C1BBDD2796CB4D3F6BEA1BB6B14
CF9BA20C00E63246218754C7B10784B947DDE48C176A4513A8B234AE3DC75C0AB6B6D379695
03272E38BD989F425BA9AFCD9931B6B4FA44CAC2EF8903B4A0A50F8D90AA9E6FE74B8EB5CCB
8899E24F3BE43826A658279A83456FEF3700AF231ECE9254C7B10784B947DDE48C176A4513A
8B2E3F59B1A3D9AABAAE2C9359778903206B7990B32416C3B5322FA36FC814873F5FFFE887A
EFA3721B7F334A06CA3CB0DA65E3BB1AD35EB5876FFD5331FC9F8A3B2E1743C8DC872124D82
A15091139088B222AE740754ABF5762E760CD179A038CA434662FC2AD7FB5A5A4251841BE4D
1B7F62B08296A04EBC881413F994B772FA5D6CE5624F3D36746483FE445E52154E9C8DEC48F
8F772CC5C913D04FDF699DFBCAC07D213BD4F2C8BCBD43028B212DD300A284480A43194281F
B4D3212E2F42A20DA89BC66DF407C243CB1F844495958520399AC860F2A0E3542AABB8A41CF
68D643A3190513BDCFF21DFF78BC6163D6C9221C3B8AEDD50D2D11866FF55E27DCC5C97B784
F3F7AF07F22239F8DBF05CAC7FEF07509AFF1FC2A7584332B92B84CB168142E7F758EBE87D0
8B93761A9EBA58EA4E8A97830506515391C4218AFD9442D1005D4940FD7B33F4006645FE929
93F7086AA0A7BD196D722D71F9A4786BD360B7B5F8CE8075B7990B32416C3B5337397CACB9A
F83117AD4E90DF670900E51BECEF9556F9302314BB9D78AF88A4E745C16A95DE7C860A03711
5B9CB41AB9296C7E1AD924D58C5B7A28ED14DBA8E59CC60FD92472F3A2D957925249E08EE31
9E56626E6081F867BFFD9BB32A3056DE8F141D2828EF94010B0B55489E5FECE830619A85134
B10874D9698E4BF348C869048512EAE81019FA0BD035F8A4B152AB20510E38AEEB73AB15EF1
745926F61233F320097F246832C7451B00AB96A7262EFF752E1E7D2025E0F89B53C247D88A8
A325B51A6DF25E637AEABBBED18F91170364764C01549612C841EE4A9EDC9DC2AD345F3005D
FE8293B0F8D50E499B096529721A5D58834DF04A0AC693D5D8CD451E498BBFA7F885AB46772
D428463E5DD089D852CE42C2E4B3AB17D0FBABBA0C065995B823D422E0C69EB36249292543A
60C4B432FD72BF41F005841770A561A2A43092DB666DE2412BD488D4E42043F81E3DC6C1363
946ED6387B977C0EE8797E1B0B0A6C21747E1D03717AC41EE9D936D01E20778B11A6E02C1E9
C64CC4C6D41CFFB81540E306C0BDAF9BF0025D70AA9E6FE74B8EB5CCB8899E24F3BE43847B0
C258F4D1BCA0EF61132636597628F3F480312C6342F7C0ABAE71FCAB6D38C3A1D04DDE559E5
174B0E300F96922C9A98ED31B30F28E3D87845BFF019CDA15AC18D144480E6A1ED9C90B52D0
C3E70F5AC237AD7FB9572813A4679CE0ACF79313FAF5330A91A1AEEA3E2FD9F57DF328DD94B
6A545586C6C7CADAE195111989219D3FA65BF26E2E7461479D6172A55BE4ACE9B3EF8EC0077
3FCBC465D91C14E35F2B06A3FE135819BA40189595881A9A5C51DFCFEBA44CEA5EE5A090803
A6B0C1A7F63BA71A90112E729FFAD849158B76F68D9591A6361D6DABE61943DC7B4810A82FF
521DEF6DF94AD487654A4569890225BD3D3DEFD96FA6AD4B5FF91AD799B684EB033C5E6F551
DED6C328A7EAA86F7A3762E68BBC8EDCE66431EBC6E707A35214D5A686E8E2D4C6A8E71C606
D8C6A1C5CA79B7F1EB817F334A06CA3CB0DA65E3BB1AD35EB5876FFD5331FC9F8A3B09F7C7D
39E749609A6AA8495CD3C587DED7FACD98081794389305561C7297A03EEA734290012B349FB
55D129D66E7AC9EE4263F8F9040237C54AA2E7A2DE884B8189ED5964B8034E3FC9D24BECEFE
B8BC7D46081AF9ED7E90517A0C6F87968B9F9DCDF65927DFC74AEC2903807EA82C103DACB07
1FEEF78C400528E05640B01EC5A73C0EBCDEF2F308C41FA1A3B5471E290763E55D9783D36B5
7D74716A718D7D8DFB161A90CF8562B15C0469FD466EE740C8A26E15906FAAB706A740978DB
C6A4A0650C9C5D2E2A6A01AEC7A8341AA8787B0DB4B0EC9CA0E83852E694FFDCFB096E1419A
D1A339D49E2453149DA9F7CA867164F46EBD02488D15DD60591292988B03AC59D7C25923B2F
3A95B63BE12C31D150201BB286EFCFC3EB7031E44313F740EBEA3F5273225163E2EF578DF6A
5A54D72D0B4033F7587845BFF019CDA15AC18D144480E6A1E5E8050B6BF82DCC236B68EB38C
F6580D16BD48DEB9477D597F70C7679B34EBBA7F529D9B2DC584D7E741A0CA60CF8CD551FA6
F346FDE422AED62D4E2C41E2E8E9E529972D80893474B27AE298A8A4F8B5EB9A1A44721601C
6E32B3CA5CD10669C74582970734DA876412E185331219E459936C09D72660EC60C9AD6EBDA
0B4ED2C93C61AE08417FE17C1C6548B83650EA107057435FE1A7727C64DB91BCF8D211E98FB
A33C0A6E307B151BAA18BA268C6C1AB5831FF0B55A72428DDFFCDE96ACD4706E0C926EF01EF
41F005841770A561A2A43092DB666DE92913897701F29320B112F63CFFE000C999263C8578C
63CE0E2E409B7C8DB2C82193E3EBC8BDFB93914BB64973C73C2271F7595C2DC406745A029E3
87F4D7C97FF2B229ED5B76C09FB4EA5F38093078ABCC8EFDBF09C21FFA4A0650C9C5D2E2A8E
51488CB30F560A40B196AC7C83031CE331FE1A112DB3BFA39777FFFEF79B038931DA8D83260
84BF9833EDCEBD57F3661EB5C35D7CDFF7DE62D671E87606D4FE4FC366BD59193780977074D
6017DE51279D1185007A237A5C51DFCFEBA44CEA7CCAF68C10A3D123B8E5A3741AC85AEB158
FBE74D7167491A4A174CF938ACF98C43936BA3A7BD0762D0C7D4F8B6025EB5D1926900846BE
E93755974A9E19D97359081D90BDF6B0B6729263BAFE88A3CFC48011495DA99C3E829FECEC0
413050D060E7CB0F6CA504043DE35FACE8EAB956B495B1C8C72359469048512EAE810195962
B94AF5371C11262228FF08E84855B432CE95031E48CB7B31CDF53C4EF3234F396486D5B9FFB
E87845BFF019CDA15AC18D144480E6A1E4034F7D03E911DB6BE9BA7459E28B33FAAE3104ABE
2AC4DFD30985FF4051ACA67859C65F90697852
-----END ENCRYPTED SCRIPT-----
}//End of  nuclei_detection_i10x_inner()



proc nuclei_detection_I10x(
//INPUT
	image reference in "Nuclei stained image with intensity information. Nuclei are detected by this image. Supported image types are: 8-bit and 16-bit.",
	bool ShowIllustrations=YES in  "YES- Output illustrations are depicted. No- Output illustrations are not shown.",
//OUTPUT
	objectlist Nuclei out "Output cell list with detected nuclei"
) [hidden] Nuclei detection, object recognition "Nuclei detection procedure. Detects nuclei on the input image."
{

	input(ThresholdAdjustment, 2.0, "Threshold Adjustment: Nuclei Detection","d", "Threshold tuning for the initial thresholding of nuclei. Range: 0..3.0.  Low values shrink the mask and the high ones expand the mask. Adjust by illustration InitialMask.") 
	input(MinimumNuclearArea, 6, "Minimum Nuclear Area: Nuclei Detection","i", "Minimum allowed area for nuclei, objects with area less than the limit are removed. Too small values of the parameter usually introduce errors. Unit: image pixel. Adjust by illustration Nuclei.") 
	input(IndividualThresholdAdjustment, 0.3,  "Individual Threshold Adjustment: Nuclei Detection", "d", "Controls the size (border position) of nuclei. Range: 0..~1.0. With the higher values nuclei  appear smaller and with the lower values larger. Adjust by illustration Nuclei. ")	
	input(MinimumNucleiDistance, 2.0, "Minimum Nuclei Distance: Nuclei Detection", "d", "Controls the splitting of the stuck nuclei and corresponds generally to minimum allowed distance between nuclei centers. Adjust by illustration Nuclei.  The parameter is the input to the module maximums.")	
	input(NuclearSplittingAdjustment,5.0, "Nuclear Splitting Adjustment: Nuclei Detection", "d", "Controls splitting of stuck nuclei. Range: 1..oo. With the lower values more objects are split. Adjust by illustration Nuclei. Parameter has only limited control other the splitting process. Adjust by illustration Nuclei.")
	input(MinimumNuclearContrast, 0.05, "Minimum Nuclear Contrast: Nuclei Detection", "d", "Minimum allowed area for nuclei, objects with contrast less than the limit are removed. Range: 0..1.0. Adjust by illustration LowContrastNuclei and Nuclei.")
	
	
	nuclei_detection_i10x_inner(reference, ThresholdAdjustment, MinimumNuclearArea, IndividualThresholdAdjustment, MinimumNucleiDistance) // Inner-technical nuclei detection procedure

	
	if(ShowIllustrations)
		imageview(item=InitialMask.border.mask, label="InitialMask", title="Mask after the initial thresholding. Adjust par. \"Threshold Adjustment\"", image=reference, gamma=2.6)
	end() 

	// Removes breaking lines between the stuck nuclei, 
	// Input parameter DistanceRatioLimit is fixed 
	controlbreakinglines_v12(nuclei, 0.8) 
	// Adds to object list a contrast attribute
	object_contrast_general(cells_out, reference, InitialMask=InitialMask.body.mask) 

	// Creates the illustration "LowContrastObjects"
	if(ShowIllustrations) 
		set(CL_Temp=objects)
		objectfilter(contrast<=MinimumNuclearContrast)
		imageview(item=objects.border, label="LowContrastObjects", title="Discarded low contrast objects. Adjust par. \"Minimum Nuclear Contrast\"", image=reference, gamma=2.6)
		set(objects=CL_Temp)
	end()
	objectfilter(contrast>MinimumNuclearContrast)

	if(ShowIllustrations)
		imageview(item=objects.border, label="Nuclei", title="Detected nuclei. Adjust par. \"Individual Threshold Adjustment\"", image=reference, gamma=2.6)
	end()
	calcarea()
	calcintensity(image=reference)
	set(nuclei=objects)
}


proc ReduceStencilObjectsByAreaTo31999(
stencil stencil inout "Input-output stencil, which object number will be reduced to fit the limit 31999. Only the first 31999 objects are taken into account and the others are discarded."
) [hidden]

{
	set(alimit=32000)
	set(alimit2=alimit-1)
	
	
	if(stencil.itemcount<alimit)
		return()
	end()
	Removes_OnePixel_Objects(stencil.vector.MASK)
	mask2stencil()
	if(stencil.itemcount<alimit)
		return()
	end()

	set(mask_in=mask)
	set(Mask1=mask_in)
	set(temp=stencil.vector.mask.image)
	blank(temp.width, temp.height)
	convelems(image, "integer", 2,"unsigned")
	
	append(bvector,1..alimit2)
	set(avector=bvector)
	set(stencil_in=stencil)
	while(stencil.itemcount>alimit2)
		set(stencil2=stencil)
		create("vector","unsigned,int", stencil.itemcount-alimit2)//Changed Sep 25, 2007, Olavi
		append(avector,vector)
		carryobjects(image=result,stencil=stencil,data=avector)
		set(image.type="stencil")
		set(stencil=image.vector)
		stencil2objects()
		calcarea()
		if(defined("v_area"))
			append(v_area,objects.area)
		else()
			set(v_area=objects.area)
		end()
		push(v_objects,objects)

		//delete(cvector)
		//append(cvector,1..stencil2.itemcount)
		//carryobjects(image=result,stencil=stencil2,data=cvector)
		carrypixels(image=mask1.image,mask=objects.body.mask, data=0)
		set(mask1=image)
		mask2stencil(image)
		
	end()
	stencil2objects()
	calcarea()

	append(v_area,objects.area)
	sort(v_area,yes)
	set(minarea=result[alimit2]+1)
	objectfilter(area<minarea)
	carrypixels(image=mask_in,mask=objects.body,data=0)
	foreach(v_objects)
		set(objects=i)
		objectfilter(area<minarea)
		carrypixels(image=image,mask=objects.body,data=0)
	end()
	mask2stencil(image)
	if(stencil.itemcount>31999)
		ReduceStencilObjectsTo31999_tech()
	end()	
}
