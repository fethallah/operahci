//////////// CalcSERFeatures() (and related procedures)
//////////// Development version 30.07.2009 by Peet Kask
// ODe 2009-09-19: Replaced [internal] bei [hidden] and CalcIntensity by CalcStat for Acap 2.0

package(Texture)


proc CalcSERFeatures(
	image image explicit in "Image to be analyzed",
	double scale explicit in "Scale of texture filtering (0...100)",
	string stencilname="body" explicit in "Name of the region of interest",
	string normalizationmode="regional" explicit in "Select between unnormalized, kernel, regional, and external modes. With external mode, norm-attribute must be given.",
	string AttrPrefix="" in "Prefix that should be appened before the Feature name.",
	string AttrSuffix="" in "Suffix that should be appened after the Feature name.",
	objectlist objects inout "List of objects for which texture features are calculated. In output, calculated features appear as additional attributes.",
	vector SERNames out "List of calculated feature-names",
	vector SERIllustrations out "Masked, normalized and scaled SER-filtered images"
) Texture "Calculation of Spot-Edge-Ridge texture features. Calculated features appear as additional attributes of the objectlist."
{
	// Preparations: Create objects out of the stencil of interest. Create norm-attribute if necessary.
	set(objects_in=objects)
	if(normalizationmode=="external" && !defined("objects.norm"))
		error("Normalizationmode is external, but norm-attribute is absent in the objectlist")
	end()
	if(!defined("objects[stencilname]"))
		error("Specified stencil is absent in the objectlist")
	end()
	Stencil2Objects(objects[stencilname])
	if(normalizationmode=="external")
		setattr("norm", objects_in.norm)
	end()


	//Calculate texture features as attributes of the objectlist
	CalcSERFeaturesInner(image, scale, normalizationmode, objects)	// Out: objects with new attributes; SERnames; SERIllustrations (vector of images)

	//Copy features into the original objectlist:
	rename(features=objects)
	rename(objects=objects_in)

	Set(featureNames=SERNames)
	Set(AttrPrefix=iif(AttrPrefix!="",AttrPrefix&"_",""))
	Set(AttrSuffix=iif(AttrSuffix!="","~"&AttrSuffix,""))
	foreach(featureNames, "featureName")
		Set(NewFeatureName=unquote("@"&AttrPrefix,"Name").text)
		Set(NewFeatureName=quote(NewFeatureName & featureName & AttrSuffix ,"Name").quoted)
		Set(NewFeatureName=RegexReplace(NewFeatureName,"@","",first_Only=true).text)
		Set(objects[NewFeatureName]=features[featureName])
	end()
}