/////////////// Calculation of Gabor features using fast Gabor filter (spatial aspect ratio=1)
////////////// Reference: A. Bernardino, IEEETransactions on Image proc essing, 15 (11), 2006.
////////////// Last inspected by Peet Kask 2009-07-24
// ODe 2009-09-19: Replaced [internal] bei [hidden] and CalcIntensity by CalcStat for Acap 2.0

package(Texture)


/// A proc edure for general Acapella users
proc CalcGaborFeatures(
	image image explicit in "Image to be analyzed",
	double MinScale=2.0 explicit in "The lowest scale value used in features calculation",
	double MinWavelength=2.5 explicit in "The lowest wavelength value used in features calculation",
	vector ScaleFactors=vec(1) explicit in "Values by which MinScale is multiplied",
	vector WavelengthFactors=vec(1) explicit in "Values by which MinWavelength is multiplied",
	int anglecount=8 explicit in "Number of orientations. Reasonable values are between 6 and 16",
	string stencilname="body" explicit in "Name of the stencil of interest",
	string normalizationmode="regional" explicit in "Regional - denominator is mean intensity in the region; external - denominator is a precalculated norm-attribute; kernel - denominatior is Gaussian filtered image; unnormalized is also an option",
	objectlist objects inout "Objectlist that contains the region of interest. In output, Gabor features are added as new attributes",
	string AttrPrefix="" in "Prefix that should be appened before the Feature name",
	table GaborInfo out "Table with information about the calculated features",
	vector GaborIllustrations out "Masked, normalized and scaled Gabor-filtered images")
Texture "Calculation of Gabor texture features corresponding to circular Gaussian envelope (spatial aspect ratio=1). Internally, Texture::GaborFilter-module is applied. The calculated features correspond to min and max values of Gabor amplitudes at different orientations."
{
	//Preparations for calculating Gabor features
	if(normalizationmode=="external" && !defined("objects.norm"))
		error("Normalizationmode is external, but norm-attribute is absent in the objectlist")
	end()

	set(objects_in=objects)
	if(!defined("objects[stencilname]"))
		error("Specified stencil is absent in the objectlist")
	end()
	Stencil2Objects(objects[stencilname])
	if(normalizationmode=="external")
		setattr("norm", objects_in.norm)
	end()

	CalcGaborParams(MinScale, MinWavelength, ScaleFactors, WavelengthFactors)	//Out: GaborParams (container)

	//Calculation of Gabor features
	CalcGaborFeaturesInner(image, GaborParams, anglecount, normalizationmode, 256, objects)

	//Copy features into the original objectlist:
	rename(ObjectsWithFeatures=objects)
	rename(objects=objects_in)
	set(featureNames=GaborInfo.FeatureName)
	Set(AttrPrefix=iif(AttrPrefix!="",AttrPrefix&"_",""))
	foreach(featureNames, "featurename")
		Set(newFeatureName=quote(AttrPrefix,"name").quoted)
		Set(NewFeatureName=RegexReplace(NewFeatureName,"@","",first_Only=true).text)
		Set(NewFeatureName=NewFeatureName&featureName)
		Set(objects[newFeatureName]=ObjectsWithFeatures[featurename])
	end()
}